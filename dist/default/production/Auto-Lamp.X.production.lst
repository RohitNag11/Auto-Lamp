

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 19 19:19:55 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    76                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    77                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    78  0000                     
    79                           ; Version 2.20
    80                           ; Generated 05/05/2020 GMT
    81                           ; 
    82                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F67K40 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     
   114                           	psect	idataBANK0
   115  003BCA                     __pidataBANK0:
   116                           	callstack 0
   117                           
   118                           ;initializer for stoa@F1141
   119  003BCA  28                 	db	40
   120  003BCB  6E                 	db	110
   121  003BCC  75                 	db	117
   122  003BCD  6C                 	db	108
   123  003BCE  6C                 	db	108
   124  003BCF  29                 	db	41
   125  003BD0  00                 	db	0
   126                           
   127                           	psect	idataBANK1
   128  003BAC                     __pidataBANK1:
   129                           	callstack 0
   130                           
   131                           ;initializer for main@F14549
   132  003BAC  0000               	dw	0
   133  003BAE  0000               	dw	0
   134  003BB0  0000               	dw	0
   135  003BB2  0000               	dw	0
   136  003BB4  0000               	dw	0
   137  003BB6  0000               	dw	0
   138  003BB8  07E5               	dw	2021
   139  003BBA  0000               	dw	0
   140                           
   141                           	psect	idataBANK2
   142  0037D6                     __pidataBANK2:
   143                           	callstack 0
   144                           
   145                           ;initializer for time_now@F14544
   146  0037D6  4D                 	db	77
   147  0037D7  6F                 	db	111
   148  0037D8  6E                 	db	110
   149  0037D9  00                 	db	0
   150  0037DA  00                 	db	0
   151  0037DB  00                 	db	0
   152  0037DC  00                 	db	0
   153  0037DD  00                 	db	0
   154  0037DE  00                 	db	0
   155  0037DF  00                 	db	0
   156  0037E0  54                 	db	84
   157  0037E1  75                 	db	117
   158  0037E2  65                 	db	101
   159  0037E3  00                 	db	0
   160  0037E4  00                 	db	0
   161  0037E5  00                 	db	0
   162  0037E6  00                 	db	0
   163  0037E7  00                 	db	0
   164  0037E8  00                 	db	0
   165  0037E9  00                 	db	0
   166  0037EA  57                 	db	87
   167  0037EB  65                 	db	101
   168  0037EC  64                 	db	100
   169  0037ED  00                 	db	0
   170  0037EE  00                 	db	0
   171  0037EF  00                 	db	0
   172  0037F0  00                 	db	0
   173  0037F1  00                 	db	0
   174  0037F2  00                 	db	0
   175  0037F3  00                 	db	0
   176  0037F4  54                 	db	84
   177  0037F5  68                 	db	104
   178  0037F6  75                 	db	117
   179  0037F7  00                 	db	0
   180  0037F8  00                 	db	0
   181  0037F9  00                 	db	0
   182  0037FA  00                 	db	0
   183  0037FB  00                 	db	0
   184  0037FC  00                 	db	0
   185  0037FD  00                 	db	0
   186  0037FE  46                 	db	70
   187  0037FF  72                 	db	114
   188  003800  69                 	db	105
   189  003801  00                 	db	0
   190  003802  00                 	db	0
   191  003803  00                 	db	0
   192  003804  00                 	db	0
   193  003805  00                 	db	0
   194  003806  00                 	db	0
   195  003807  00                 	db	0
   196  003808  53                 	db	83
   197  003809  61                 	db	97
   198  00380A  74                 	db	116
   199  00380B  00                 	db	0
   200  00380C  00                 	db	0
   201  00380D  00                 	db	0
   202  00380E  00                 	db	0
   203  00380F  00                 	db	0
   204  003810  00                 	db	0
   205  003811  00                 	db	0
   206  003812  53                 	db	83
   207  003813  75                 	db	117
   208  003814  6E                 	db	110
   209  003815  00                 	db	0
   210  003816  00                 	db	0
   211  003817  00                 	db	0
   212  003818  00                 	db	0
   213  003819  00                 	db	0
   214  00381A  00                 	db	0
   215  00381B  00                 	db	0
   216  0000                     _PIR0bits	set	3635
   217  0000                     _PIR2bits	set	3637
   218  0000                     _IPR0bits	set	3615
   219  0000                     _IPR2bits	set	3617
   220  0000                     _PIE0bits	set	3625
   221  0000                     _PIE2bits	set	3627
   222  0000                     _CM1CON1bits	set	3793
   223  0000                     _CM1CON0bits	set	3792
   224  0000                     _CM1PCHbits	set	3795
   225  0000                     _CM1NCHbits	set	3794
   226  0000                     _ANSELFbits	set	3764
   227  0000                     _DAC1CON1bits	set	3783
   228  0000                     _DAC1CON0bits	set	3782
   229  0000                     _T0CON0bits	set	4053
   230  0000                     _T0CON1bits	set	4054
   231  0000                     _LATHbits	set	3968
   232  0000                     _TRISHbits	set	3976
   233  0000                     _TMR0L	set	4051
   234  0000                     _TMR0H	set	4052
   235  0000                     _INTCONbits	set	4082
   236  0000                     _LATFbits	set	3966
   237  0000                     _LATAbits	set	3961
   238  0000                     _LATGbits	set	3967
   239  0000                     _TRISFbits	set	3974
   240  0000                     _TRISAbits	set	3969
   241  0000                     _TRISGbits	set	3975
   242  0000                     _TRISEbits	set	3973
   243  0000                     _TRISBbits	set	3970
   244  0000                     _TRISCbits	set	3971
   245  0000                     _LATBbits	set	3962
   246  0000                     _LATEbits	set	3965
   247  0000                     _LATCbits	set	3963
   248                           
   249                           	psect	smallconst
   250  000E00                     __psmallconst:
   251                           	callstack 0
   252  000E00  00                 	db	0
   253  000E01                     STR_2:
   254  000E01  20                 	db	32
   255  000E02  20                 	db	32
   256  000E03  20                 	db	32
   257  000E04  20                 	db	32
   258  000E05  25                 	db	37
   259  000E06  30                 	db	48	;'0'
   260  000E07  32                 	db	50	;'2'
   261  000E08  64                 	db	100	;'d'
   262  000E09  3A                 	db	58	;':'
   263  000E0A  25                 	db	37
   264  000E0B  30                 	db	48	;'0'
   265  000E0C  32                 	db	50	;'2'
   266  000E0D  64                 	db	100	;'d'
   267  000E0E  3A                 	db	58	;':'
   268  000E0F  25                 	db	37
   269  000E10  30                 	db	48	;'0'
   270  000E11  32                 	db	50	;'2'
   271  000E12  64                 	db	100	;'d'
   272  000E13  00                 	db	0
   273  000E14                     STR_3:
   274  000E14  20                 	db	32
   275  000E15  25                 	db	37
   276  000E16  73                 	db	115	;'s'
   277  000E17  20                 	db	32
   278  000E18  25                 	db	37
   279  000E19  30                 	db	48	;'0'
   280  000E1A  32                 	db	50	;'2'
   281  000E1B  64                 	db	100	;'d'
   282  000E1C  2F                 	db	47
   283  000E1D  25                 	db	37
   284  000E1E  30                 	db	48	;'0'
   285  000E1F  32                 	db	50	;'2'
   286  000E20  64                 	db	100	;'d'
   287  000E21  2F                 	db	47
   288  000E22  25                 	db	37
   289  000E23  30                 	db	48	;'0'
   290  000E24  34                 	db	52	;'4'
   291  000E25  64                 	db	100	;'d'
   292  000E26  00                 	db	0
   293  000E27                     STR_4:
   294  000E27  68                 	db	104	;'h'
   295  000E28  65                 	db	101	;'e'
   296  000E29  6C                 	db	108	;'l'
   297  000E2A  6C                 	db	108	;'l'
   298  000E2B  6F                 	db	111	;'o'
   299  000E2C  00                 	db	0
   300  000E2D  00                 	db	0	; dummy byte at the end
   301  0000                     
   302                           ; #config settings
   303                           
   304                           	psect	cinit
   305  0033F4                     __pcinit:
   306                           	callstack 0
   307  0033F4                     start_initialization:
   308                           	callstack 0
   309  0033F4                     __initialization:
   310                           	callstack 0
   311                           
   312                           ; Initialize objects allocated to BANK2 (70 bytes)
   313                           ; load TBLPTR registers with __pidataBANK2
   314  0033F4  0ED6               	movlw	low __pidataBANK2
   315  0033F6  6EF6               	movwf	tblptrl,c
   316  0033F8  0E37               	movlw	high __pidataBANK2
   317  0033FA  6EF7               	movwf	tblptrh,c
   318  0033FC  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   319  0033FE  6EF8               	movwf	tblptru,c
   320  003400  EE02  F066         	lfsr	0,__pdataBANK2
   321  003404  EE10 F046          	lfsr	1,70
   322  003408                     copy_data0:
   323  003408  0009               	tblrd		*+
   324  00340A  CFF5 FFEE          	movff	tablat,postinc0
   325  00340E  50E5               	movf	postdec1,w,c
   326  003410  50E1               	movf	fsr1l,w,c
   327  003412  E1FA               	bnz	copy_data0
   328                           
   329                           ; Initialize objects allocated to BANK1 (16 bytes)
   330                           ; load TBLPTR registers with __pidataBANK1
   331  003414  0EAC               	movlw	low __pidataBANK1
   332  003416  6EF6               	movwf	tblptrl,c
   333  003418  0E3B               	movlw	high __pidataBANK1
   334  00341A  6EF7               	movwf	tblptrh,c
   335  00341C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   336  00341E  6EF8               	movwf	tblptru,c
   337  003420  EE01  F08D         	lfsr	0,__pdataBANK1
   338  003424  EE10 F010          	lfsr	1,16
   339  003428                     copy_data1:
   340  003428  0009               	tblrd		*+
   341  00342A  CFF5 FFEE          	movff	tablat,postinc0
   342  00342E  50E5               	movf	postdec1,w,c
   343  003430  50E1               	movf	fsr1l,w,c
   344  003432  E1FA               	bnz	copy_data1
   345                           
   346                           ; Initialize objects allocated to BANK0 (7 bytes)
   347                           ; load TBLPTR registers with __pidataBANK0
   348  003434  0ECA               	movlw	low __pidataBANK0
   349  003436  6EF6               	movwf	tblptrl,c
   350  003438  0E3B               	movlw	high __pidataBANK0
   351  00343A  6EF7               	movwf	tblptrh,c
   352  00343C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   353  00343E  6EF8               	movwf	tblptru,c
   354  003440  EE00  F0E3         	lfsr	0,__pdataBANK0
   355  003444  EE10 F007          	lfsr	1,7
   356  003448                     copy_data2:
   357  003448  0009               	tblrd		*+
   358  00344A  CFF5 FFEE          	movff	tablat,postinc0
   359  00344E  50E5               	movf	postdec1,w,c
   360  003450  50E1               	movf	fsr1l,w,c
   361  003452  E1FA               	bnz	copy_data2
   362                           
   363                           ; Clear objects allocated to BANK2 (56 bytes)
   364  003454  EE02  F0AC         	lfsr	0,__pbssBANK2
   365  003458  0E38               	movlw	56
   366  00345A                     clear_0:
   367  00345A  6AEE               	clrf	postinc0,c
   368  00345C  06E8               	decf	wreg,f,c
   369  00345E  E1FD               	bnz	clear_0
   370                           
   371                           ; Clear objects allocated to BANK1 (4 bytes)
   372  003460  0101               	movlb	1
   373  003462  6BA0               	clrf	(__pbssBANK1+3)& (0+255),b
   374  003464  6B9F               	clrf	(__pbssBANK1+2)& (0+255),b
   375  003466  6B9E               	clrf	(__pbssBANK1+1)& (0+255),b
   376  003468  6B9D               	clrf	__pbssBANK1& (0+255),b
   377                           
   378                           ; Clear objects allocated to BANK0 (9 bytes)
   379  00346A  EE00  F0DA         	lfsr	0,__pbssBANK0
   380  00346E  0E09               	movlw	9
   381  003470                     clear_1:
   382  003470  6AEE               	clrf	postinc0,c
   383  003472  06E8               	decf	wreg,f,c
   384  003474  E1FD               	bnz	clear_1
   385  003476                     end_of_initialization:
   386                           	callstack 0
   387  003476                     __end_of__initialization:
   388                           	callstack 0
   389  003476  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   390  003478  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   391  00347A  0100               	movlb	0
   392  00347C  EFAE  F010         	goto	_main	;jump to C main() function
   393                           
   394                           	psect	bssBANK0
   395  0000DA                     __pbssBANK0:
   396                           	callstack 0
   397  0000DA                     _nout:
   398                           	callstack 0
   399  0000DA                     	ds	2
   400  0000DC                     _width:
   401                           	callstack 0
   402  0000DC                     	ds	2
   403  0000DE                     _prec:
   404                           	callstack 0
   405  0000DE                     	ds	2
   406  0000E0                     _flags:
   407                           	callstack 0
   408  0000E0                     	ds	2
   409  0000E2                     _sun:
   410                           	callstack 0
   411  0000E2                     	ds	1
   412                           
   413                           	psect	dataBANK0
   414  0000E3                     __pdataBANK0:
   415                           	callstack 0
   416  0000E3                     stoa@F1141:
   417                           	callstack 0
   418  0000E3                     	ds	7
   419                           
   420                           	psect	bssBANK1
   421  00019D                     __pbssBANK1:
   422                           	callstack 0
   423  00019D                     _seconds_check:
   424                           	callstack 0
   425  00019D                     	ds	2
   426  00019F                     _seconds_counter:
   427                           	callstack 0
   428  00019F                     	ds	2
   429                           
   430                           	psect	dataBANK1
   431  00018D                     __pdataBANK1:
   432                           	callstack 0
   433  00018D                     main@F14549:
   434                           	callstack 0
   435  00018D                     	ds	16
   436                           
   437                           	psect	bssBANK2
   438  0002AC                     __pbssBANK2:
   439                           	callstack 0
   440  0002AC                     	ds	24
   441  0002C4                     _dbuf:
   442                           	callstack 0
   443  0002C4                     	ds	32
   444                           
   445                           	psect	dataBANK2
   446  000266                     __pdataBANK2:
   447                           	callstack 0
   448  000266                     time_now@F14544:
   449                           	callstack 0
   450  000266                     	ds	70
   451                           
   452                           	psect	cstackBANK2
   453  000200                     __pcstackBANK2:
   454                           	callstack 0
   455  000200                     main@timebuf:
   456                           	callstack 0
   457                           
   458                           ; 40 bytes @ 0x0
   459  000200                     	ds	40
   460  000228                     main@datebuf:
   461                           	callstack 0
   462                           
   463                           ; 40 bytes @ 0x28
   464  000228                     	ds	40
   465  000250                     main@prev_sec:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x50
   469  000250                     	ds	2
   470  000252                     main@prev_sun:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0x52
   474  000252                     	ds	1
   475  000253                     _main$1175:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0x53
   479  000253                     	ds	1
   480  000254                     main@hour_now:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x54
   484  000254                     	ds	2
   485  000256                     main@start_time:
   486                           	callstack 0
   487                           
   488                           ; 16 bytes @ 0x56
   489  000256                     	ds	16
   490                           
   491                           	psect	cstackBANK1
   492  000100                     __pcstackBANK1:
   493                           	callstack 0
   494  000100                     ?_sprintf:
   495                           	callstack 0
   496  000100                     sprintf@s:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x0
   500  000100                     	ds	2
   501  000102                     sprintf@fmt:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x2
   505  000102                     	ds	12
   506  00010E                     sprintf@ap:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0xE
   510  00010E                     	ds	2
   511  000110                     sprintf@f:
   512                           	callstack 0
   513                           
   514                           ; 6 bytes @ 0x10
   515  000110                     	ds	6
   516  000116                     ?_time_now:
   517                           	callstack 0
   518  000116                     time_now@timebuf:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x16
   522  000116                     	ds	2
   523  000118                     time_now@datebuf:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x18
   527  000118                     	ds	2
   528  00011A                     time_now@seconds:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x1A
   532  00011A                     	ds	2
   533  00011C                     time_now@minutes:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x1C
   537  00011C                     	ds	2
   538  00011E                     time_now@hours:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x1E
   542  00011E                     	ds	2
   543  000120                     time_now@weekdays:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x20
   547  000120                     	ds	2
   548  000122                     time_now@days:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x22
   552  000122                     	ds	2
   553  000124                     time_now@months:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x24
   557  000124                     	ds	2
   558  000126                     time_now@years:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x26
   562  000126                     	ds	2
   563  000128                     time_now@season:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x28
   567  000128                     	ds	2
   568  00012A                     time_now@daylist:
   569                           	callstack 0
   570                           
   571                           ; 70 bytes @ 0x2A
   572  00012A                     	ds	70
   573  000170                     _time_now$2116:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x70
   577  000170                     	ds	2
   578  000172                     time_now@month_days:
   579                           	callstack 0
   580                           
   581                           ; 24 bytes @ 0x72
   582  000172                     	ds	24
   583  00018A                     time_now@leap:
   584                           	callstack 0
   585                           
   586                           ; 1 bytes @ 0x8A
   587  00018A                     	ds	1
   588  00018B                     time_now@cur_month:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x8B
   592  00018B                     	ds	2
   593                           
   594                           	psect	cstackBANK0
   595  000060                     __pcstackBANK0:
   596                           	callstack 0
   597  000060                     i1vfprintf@cfmt:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x0
   601  000060                     	ds	2
   602  000062                     ?_printf:
   603                           	callstack 0
   604  000062                     printf@fmt:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x2
   608  000062                     	ds	4
   609  000066                     printf@ap:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x6
   613  000066                     	ds	2
   614  000068                     ??_LdrISR:
   615                           
   616                           ; 1 bytes @ 0x8
   617  000068                     	ds	13
   618  000075                     ?_strlen:
   619                           	callstack 0
   620  000075                     ?_isdigit:
   621                           	callstack 0
   622  000075                     ?_isspace:
   623                           	callstack 0
   624  000075                     ?___wmul:
   625                           	callstack 0
   626  000075                     ?___lwdiv:
   627                           	callstack 0
   628  000075                     ?___lwmod:
   629                           	callstack 0
   630  000075                     ?___aodiv:
   631                           	callstack 0
   632  000075                     ?___aomod:
   633                           	callstack 0
   634  000075                     LCD_sendnibble@number:
   635                           	callstack 0
   636  000075                     LEDarray_disp_bin@number:
   637                           	callstack 0
   638  000075                     ___wmul@multiplier:
   639                           	callstack 0
   640  000075                     ___lwdiv@dividend:
   641                           	callstack 0
   642  000075                     ___lwmod@dividend:
   643                           	callstack 0
   644  000075                     isdigit@c:
   645                           	callstack 0
   646  000075                     isspace@c:
   647                           	callstack 0
   648  000075                     fputc@c:
   649                           	callstack 0
   650  000075                     strlen@s:
   651                           	callstack 0
   652  000075                     ___aodiv@dividend:
   653                           	callstack 0
   654  000075                     ___aomod@dividend:
   655                           	callstack 0
   656                           
   657                           ; 8 bytes @ 0x15
   658  000075                     	ds	1
   659  000076                     LCD_sendbyte@type:
   660                           	callstack 0
   661                           
   662                           ; 1 bytes @ 0x16
   663  000076                     	ds	1
   664  000077                     ??_isdigit:
   665  000077                     ??_isspace:
   666  000077                     LCD_sendbyte@Byte:
   667                           	callstack 0
   668  000077                     ___wmul@multiplicand:
   669                           	callstack 0
   670  000077                     ___lwdiv@divisor:
   671                           	callstack 0
   672  000077                     ___lwmod@divisor:
   673                           	callstack 0
   674  000077                     fputc@fp:
   675                           	callstack 0
   676  000077                     strlen@a:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x17
   680  000077                     	ds	1
   681  000078                     ??_LCD_Init:
   682  000078                     LCD_setline@line:
   683                           	callstack 0
   684  000078                     LCD_sendstring@string:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x18
   688  000078                     	ds	1
   689  000079                     ??_fputc:
   690  000079                     ___lwdiv@counter:
   691                           	callstack 0
   692  000079                     ___lwmod@counter:
   693                           	callstack 0
   694  000079                     ___wmul@product:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x19
   698  000079                     	ds	1
   699  00007A                     ___lwdiv@quotient:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x1A
   703  00007A                     	ds	1
   704  00007B                     _isspace$1849:
   705                           	callstack 0
   706                           
   707                           ; 1 bytes @ 0x1B
   708  00007B                     	ds	1
   709  00007C                     ?_atoi:
   710                           	callstack 0
   711  00007C                     atoi@s:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x1C
   715  00007C                     	ds	1
   716  00007D                     ___aodiv@divisor:
   717                           	callstack 0
   718  00007D                     ___aomod@divisor:
   719                           	callstack 0
   720                           
   721                           ; 8 bytes @ 0x1D
   722  00007D                     	ds	1
   723  00007E                     ??_atoi:
   724  00007E                     ?_stoa:
   725                           	callstack 0
   726  00007E                     stoa@fp:
   727                           	callstack 0
   728  00007E                     fputs@s:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x1E
   732  00007E                     	ds	2
   733  000080                     stoa@s:
   734                           	callstack 0
   735  000080                     fputs@fp:
   736                           	callstack 0
   737                           
   738                           ; 2 bytes @ 0x20
   739  000080                     	ds	2
   740  000082                     ??_stoa:
   741  000082                     fputs@c:
   742                           	callstack 0
   743  000082                     atoi@neg:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x22
   747  000082                     	ds	1
   748  000083                     fputs@i:
   749                           	callstack 0
   750  000083                     stoa@nuls:
   751                           	callstack 0
   752                           
   753                           ; 7 bytes @ 0x23
   754  000083                     	ds	1
   755  000084                     _atoi$1831:
   756                           	callstack 0
   757                           
   758                           ; 2 bytes @ 0x24
   759  000084                     	ds	1
   760  000085                     ?_pad:
   761                           	callstack 0
   762  000085                     ___aodiv@counter:
   763                           	callstack 0
   764  000085                     ___aomod@counter:
   765                           	callstack 0
   766  000085                     pad@fp:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x25
   770  000085                     	ds	1
   771  000086                     ___aodiv@sign:
   772                           	callstack 0
   773  000086                     ___aomod@sign:
   774                           	callstack 0
   775  000086                     _atoi$1833:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0x26
   779  000086                     	ds	1
   780  000087                     ?_abs:
   781                           	callstack 0
   782  000087                     pad@buf:
   783                           	callstack 0
   784  000087                     abs@a:
   785                           	callstack 0
   786  000087                     ___aodiv@quotient:
   787                           	callstack 0
   788                           
   789                           ; 8 bytes @ 0x27
   790  000087                     	ds	1
   791  000088                     _atoi$1832:
   792                           	callstack 0
   793                           
   794                           ; 1 bytes @ 0x28
   795  000088                     	ds	1
   796  000089                     ??_abs:
   797  000089                     pad@p:
   798                           	callstack 0
   799  000089                     atoi@n:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x29
   803  000089                     	ds	1
   804  00008A                     stoa@i:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0x2A
   808  00008A                     	ds	1
   809  00008B                     ??_pad:
   810                           
   811                           ; 1 bytes @ 0x2B
   812  00008B                     	ds	1
   813  00008C                     pad@i:
   814                           	callstack 0
   815  00008C                     stoa@w:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x2C
   819  00008C                     	ds	2
   820  00008E                     pad@w:
   821                           	callstack 0
   822  00008E                     stoa@cp:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0x2E
   826  00008E                     	ds	2
   827  000090                     ?_dtoa:
   828                           	callstack 0
   829  000090                     dtoa@fp:
   830                           	callstack 0
   831  000090                     stoa@p:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x30
   835  000090                     	ds	2
   836  000092                     stoa@l:
   837                           	callstack 0
   838  000092                     dtoa@d:
   839                           	callstack 0
   840                           
   841                           ; 8 bytes @ 0x32
   842  000092                     	ds	8
   843  00009A                     ??_dtoa:
   844                           
   845                           ; 1 bytes @ 0x3A
   846  00009A                     	ds	8
   847  0000A2                     _dtoa$1784:
   848                           	callstack 0
   849                           
   850                           ; 2 bytes @ 0x42
   851  0000A2                     	ds	2
   852  0000A4                     dtoa@p:
   853                           	callstack 0
   854                           
   855                           ; 2 bytes @ 0x44
   856  0000A4                     	ds	2
   857  0000A6                     dtoa@w:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0x46
   861  0000A6                     	ds	2
   862  0000A8                     dtoa@s:
   863                           	callstack 0
   864                           
   865                           ; 2 bytes @ 0x48
   866  0000A8                     	ds	2
   867  0000AA                     dtoa@n:
   868                           	callstack 0
   869                           
   870                           ; 8 bytes @ 0x4A
   871  0000AA                     	ds	8
   872  0000B2                     dtoa@i:
   873                           	callstack 0
   874                           
   875                           ; 2 bytes @ 0x52
   876  0000B2                     	ds	2
   877  0000B4                     ?_vfpfcnvrt:
   878                           	callstack 0
   879  0000B4                     vfpfcnvrt@fp:
   880                           	callstack 0
   881                           
   882                           ; 2 bytes @ 0x54
   883  0000B4                     	ds	2
   884  0000B6                     vfpfcnvrt@fmt:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0x56
   888  0000B6                     	ds	2
   889  0000B8                     vfpfcnvrt@ap:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0x58
   893  0000B8                     	ds	2
   894  0000BA                     ??_vfpfcnvrt:
   895                           
   896                           ; 1 bytes @ 0x5A
   897  0000BA                     	ds	4
   898  0000BE                     vfpfcnvrt@ll:
   899                           	callstack 0
   900                           
   901                           ; 8 bytes @ 0x5E
   902  0000BE                     	ds	8
   903  0000C6                     vfpfcnvrt@cp:
   904                           	callstack 0
   905                           
   906                           ; 2 bytes @ 0x66
   907  0000C6                     	ds	2
   908  0000C8                     vfpfcnvrt@done:
   909                           	callstack 0
   910                           
   911                           ; 2 bytes @ 0x68
   912  0000C8                     	ds	2
   913  0000CA                     _vfpfcnvrt$1810:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x6A
   917  0000CA                     	ds	2
   918  0000CC                     ?_vfprintf:
   919                           	callstack 0
   920  0000CC                     vfprintf@fp:
   921                           	callstack 0
   922                           
   923                           ; 2 bytes @ 0x6C
   924  0000CC                     	ds	2
   925  0000CE                     vfprintf@fmt:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0x6E
   929  0000CE                     	ds	2
   930  0000D0                     vfprintf@ap:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0x70
   934  0000D0                     	ds	2
   935  0000D2                     vfprintf@cfmt:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0x72
   939  0000D2                     	ds	2
   940  0000D4                     ??_time_now:
   941                           
   942                           ; 1 bytes @ 0x74
   943  0000D4                     	ds	4
   944  0000D8                     ??_main:
   945                           
   946                           ; 1 bytes @ 0x78
   947  0000D8                     	ds	2
   948                           
   949                           	psect	cstackCOMRAM
   950  000001                     __pcstackCOMRAM:
   951                           	callstack 0
   952  000001                     ?i1___wmul:
   953                           	callstack 0
   954  000001                     ?i1_isdigit:
   955                           	callstack 0
   956  000001                     ?i1_isspace:
   957                           	callstack 0
   958  000001                     ?i1_strlen:
   959                           	callstack 0
   960  000001                     ?i1___aodiv:
   961                           	callstack 0
   962  000001                     ?i1___aomod:
   963                           	callstack 0
   964  000001                     i1___wmul@multiplier:
   965                           	callstack 0
   966  000001                     i1isdigit@c:
   967                           	callstack 0
   968  000001                     i1isspace@c:
   969                           	callstack 0
   970  000001                     i1fputc@c:
   971                           	callstack 0
   972  000001                     i1strlen@s:
   973                           	callstack 0
   974  000001                     i1___aodiv@dividend:
   975                           	callstack 0
   976  000001                     i1___aomod@dividend:
   977                           	callstack 0
   978                           
   979                           ; 8 bytes @ 0x0
   980  000001                     	ds	2
   981  000003                     ??i1_isdigit:
   982  000003                     ??i1_isspace:
   983  000003                     i1___wmul@multiplicand:
   984                           	callstack 0
   985  000003                     i1fputc@fp:
   986                           	callstack 0
   987  000003                     i1strlen@a:
   988                           	callstack 0
   989                           
   990                           ; 2 bytes @ 0x2
   991  000003                     	ds	2
   992  000005                     ??i1_fputc:
   993  000005                     i1___wmul@product:
   994                           	callstack 0
   995                           
   996                           ; 2 bytes @ 0x4
   997  000005                     	ds	2
   998  000007                     i1_isspace$1849:
   999                           	callstack 0
  1000                           
  1001                           ; 1 bytes @ 0x6
  1002  000007                     	ds	1
  1003  000008                     ?i1_atoi:
  1004                           	callstack 0
  1005  000008                     i1atoi@s:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x7
  1009  000008                     	ds	1
  1010  000009                     i1___aodiv@divisor:
  1011                           	callstack 0
  1012  000009                     i1___aomod@divisor:
  1013                           	callstack 0
  1014                           
  1015                           ; 8 bytes @ 0x8
  1016  000009                     	ds	1
  1017  00000A                     ??i1_atoi:
  1018  00000A                     ?i1_stoa:
  1019                           	callstack 0
  1020  00000A                     i1stoa@fp:
  1021                           	callstack 0
  1022  00000A                     i1fputs@s:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x9
  1026  00000A                     	ds	2
  1027  00000C                     i1stoa@s:
  1028                           	callstack 0
  1029  00000C                     i1fputs@fp:
  1030                           	callstack 0
  1031                           
  1032                           ; 2 bytes @ 0xB
  1033  00000C                     	ds	2
  1034  00000E                     ??i1_stoa:
  1035  00000E                     i1fputs@c:
  1036                           	callstack 0
  1037  00000E                     i1atoi@neg:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0xD
  1041  00000E                     	ds	1
  1042  00000F                     i1fputs@i:
  1043                           	callstack 0
  1044  00000F                     i1stoa@nuls:
  1045                           	callstack 0
  1046                           
  1047                           ; 7 bytes @ 0xE
  1048  00000F                     	ds	1
  1049  000010                     i1_atoi$1831:
  1050                           	callstack 0
  1051                           
  1052                           ; 2 bytes @ 0xF
  1053  000010                     	ds	1
  1054  000011                     ?i1_pad:
  1055                           	callstack 0
  1056  000011                     i1___aodiv@counter:
  1057                           	callstack 0
  1058  000011                     i1___aomod@counter:
  1059                           	callstack 0
  1060  000011                     i1pad@fp:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x10
  1064  000011                     	ds	1
  1065  000012                     i1___aodiv@sign:
  1066                           	callstack 0
  1067  000012                     i1___aomod@sign:
  1068                           	callstack 0
  1069  000012                     i1_atoi$1833:
  1070                           	callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x11
  1073  000012                     	ds	1
  1074  000013                     ?i1_abs:
  1075                           	callstack 0
  1076  000013                     i1pad@buf:
  1077                           	callstack 0
  1078  000013                     i1abs@a:
  1079                           	callstack 0
  1080  000013                     i1___aodiv@quotient:
  1081                           	callstack 0
  1082                           
  1083                           ; 8 bytes @ 0x12
  1084  000013                     	ds	1
  1085  000014                     i1_atoi$1832:
  1086                           	callstack 0
  1087                           
  1088                           ; 1 bytes @ 0x13
  1089  000014                     	ds	1
  1090  000015                     ??i1_abs:
  1091  000015                     i1pad@p:
  1092                           	callstack 0
  1093  000015                     i1atoi@n:
  1094                           	callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x14
  1097  000015                     	ds	1
  1098  000016                     i1stoa@i:
  1099                           	callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x15
  1102  000016                     	ds	1
  1103  000017                     ??i1_pad:
  1104                           
  1105                           ; 1 bytes @ 0x16
  1106  000017                     	ds	1
  1107  000018                     i1pad@i:
  1108                           	callstack 0
  1109  000018                     i1stoa@w:
  1110                           	callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x17
  1113  000018                     	ds	2
  1114  00001A                     i1pad@w:
  1115                           	callstack 0
  1116  00001A                     i1stoa@cp:
  1117                           	callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x19
  1120  00001A                     	ds	2
  1121  00001C                     ?i1_dtoa:
  1122                           	callstack 0
  1123  00001C                     i1dtoa@fp:
  1124                           	callstack 0
  1125  00001C                     i1stoa@p:
  1126                           	callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x1B
  1129  00001C                     	ds	2
  1130  00001E                     i1stoa@l:
  1131                           	callstack 0
  1132  00001E                     i1dtoa@d:
  1133                           	callstack 0
  1134                           
  1135                           ; 8 bytes @ 0x1D
  1136  00001E                     	ds	8
  1137  000026                     ??i1_dtoa:
  1138                           
  1139                           ; 1 bytes @ 0x25
  1140  000026                     	ds	8
  1141  00002E                     i1_dtoa$1784:
  1142                           	callstack 0
  1143                           
  1144                           ; 2 bytes @ 0x2D
  1145  00002E                     	ds	2
  1146  000030                     i1dtoa@p:
  1147                           	callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x2F
  1150  000030                     	ds	2
  1151  000032                     i1dtoa@w:
  1152                           	callstack 0
  1153                           
  1154                           ; 2 bytes @ 0x31
  1155  000032                     	ds	2
  1156  000034                     i1dtoa@s:
  1157                           	callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x33
  1160  000034                     	ds	2
  1161  000036                     i1dtoa@n:
  1162                           	callstack 0
  1163                           
  1164                           ; 8 bytes @ 0x35
  1165  000036                     	ds	8
  1166  00003E                     i1dtoa@i:
  1167                           	callstack 0
  1168                           
  1169                           ; 2 bytes @ 0x3D
  1170  00003E                     	ds	2
  1171  000040                     ?i1_vfpfcnvrt:
  1172                           	callstack 0
  1173  000040                     i1vfpfcnvrt@fp:
  1174                           	callstack 0
  1175                           
  1176                           ; 2 bytes @ 0x3F
  1177  000040                     	ds	2
  1178  000042                     i1vfpfcnvrt@fmt:
  1179                           	callstack 0
  1180                           
  1181                           ; 2 bytes @ 0x41
  1182  000042                     	ds	2
  1183  000044                     i1vfpfcnvrt@ap:
  1184                           	callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x43
  1187  000044                     	ds	2
  1188  000046                     ??i1_vfpfcnvrt:
  1189                           
  1190                           ; 1 bytes @ 0x45
  1191  000046                     	ds	4
  1192  00004A                     i1vfpfcnvrt@ll:
  1193                           	callstack 0
  1194                           
  1195                           ; 8 bytes @ 0x49
  1196  00004A                     	ds	8
  1197  000052                     i1vfpfcnvrt@cp:
  1198                           	callstack 0
  1199                           
  1200                           ; 2 bytes @ 0x51
  1201  000052                     	ds	2
  1202  000054                     i1vfpfcnvrt@done:
  1203                           	callstack 0
  1204                           
  1205                           ; 2 bytes @ 0x53
  1206  000054                     	ds	2
  1207  000056                     i1_vfpfcnvrt$1810:
  1208                           	callstack 0
  1209                           
  1210                           ; 2 bytes @ 0x55
  1211  000056                     	ds	2
  1212  000058                     ?i1_vfprintf:
  1213                           	callstack 0
  1214  000058                     i1vfprintf@fp:
  1215                           	callstack 0
  1216                           
  1217                           ; 2 bytes @ 0x57
  1218  000058                     	ds	2
  1219  00005A                     i1vfprintf@fmt:
  1220                           	callstack 0
  1221                           
  1222                           ; 2 bytes @ 0x59
  1223  00005A                     	ds	2
  1224  00005C                     i1vfprintf@ap:
  1225                           	callstack 0
  1226                           
  1227                           ; 2 bytes @ 0x5B
  1228  00005C                     	ds	2
  1229  00005E                     
  1230                           ; 1 bytes @ 0x5D
  1231 ;;
  1232 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1233 ;;
  1234 ;; *************** function _main *****************
  1235 ;; Defined at:
  1236 ;;		line 26 in file "main.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;		None
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;  hour_now        2   84[BANK2 ] unsigned int 
  1241 ;;  datebuf        40   40[BANK2 ] unsigned char [40]
  1242 ;;  timebuf        40    0[BANK2 ] unsigned char [40]
  1243 ;;  start_time     16   86[BANK2 ] unsigned int [8]
  1244 ;;  prev_sec        2   80[BANK2 ] unsigned int 
  1245 ;;  prev_sun        1   82[BANK2 ] _Bool 
  1246 ;; Return value:  Size  Location     Type
  1247 ;;                  1    wreg      void 
  1248 ;; Registers used:
  1249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1256 ;;      Locals:         0       0       0     102       0       0       0       0       0       0       0       0       
      +0       0       0
  1257 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1258 ;;      Totals:         0       2       0     102       0       0       0       0       0       0       0       0       
      +0       0       0
  1259 ;;Total ram usage:      104 bytes
  1260 ;; Hardware stack levels required when called:   19
  1261 ;; This function calls:
  1262 ;;		_Comp1_init
  1263 ;;		_Interrupts_init
  1264 ;;		_LCD_Init
  1265 ;;		_LCD_sendbyte
  1266 ;;		_LCD_sendstring
  1267 ;;		_LCD_setline
  1268 ;;		_LEDarray_disp_bin
  1269 ;;		_LEDarray_init
  1270 ;;		_Timer0_init
  1271 ;;		_time_now
  1272 ;; This function is called by:
  1273 ;;		Startup code after reset
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           
  1277                           	psect	text0
  1278  00215C                     __ptext0:
  1279                           	callstack 0
  1280  00215C                     _main:
  1281                           	callstack 12
  1282  00215C                     
  1283                           ;main.c: 28:     LCD_Init();
  1284  00215C  ECA1  F019         	call	_LCD_Init	;wreg free
  1285  002160                     
  1286                           ;main.c: 29:     Timer0_init();
  1287  002160  ECB5  F01D         	call	_Timer0_init	;wreg free
  1288  002164                     
  1289                           ;main.c: 30:     LEDarray_init();
  1290  002164  EC8F  F01D         	call	_LEDarray_init	;wreg free
  1291  002168                     
  1292                           ;main.c: 31:     Interrupts_init();
  1293  002168  ECCD  F01D         	call	_Interrupts_init	;wreg free
  1294  00216C                     
  1295                           ;main.c: 32:     Comp1_init();
  1296  00216C  EC67  F01D         	call	_Comp1_init	;wreg free
  1297  002170                     
  1298                           ;main.c: 34:     TRISFbits.TRISF7=1;
  1299  002170  8E86               	bsf	134,7,c	;volatile
  1300  002172                     
  1301                           ;main.c: 35:     ANSELFbits.ANSELF7=1;
  1302  002172  010E               	movlb	14	; () banked
  1303  002174  8FB4               	bsf	180,7,b	;volatile
  1304  002176                     
  1305                           ; BSR set to: 14
  1306                           ;main.c: 40:     TRISHbits.TRISH3 = 0;
  1307  002176  9688               	bcf	136,3,c	;volatile
  1308  002178                     
  1309                           ; BSR set to: 14
  1310                           ;main.c: 41:     LATHbits.LATH3 = 1;
  1311  002178  8680               	bsf	128,3,c	;volatile
  1312  00217A                     
  1313                           ; BSR set to: 14
  1314                           ;main.c: 49:     sun = 1;
  1315  00217A  0E01               	movlw	1
  1316  00217C  0100               	movlb	0	; () banked
  1317  00217E  6FE2               	movwf	_sun& (0+255),b
  1318  002180                     
  1319                           ; BSR set to: 0
  1320                           ;main.c: 68:     unsigned int start_time[] = {0, 0, 0, 0, 0, 0, 2021, 0};
  1321  002180  EE21  F08D         	lfsr	2,main@F14549
  1322  002184  EE12  F056         	lfsr	1,main@start_time
  1323  002188  0E0F               	movlw	15
  1324  00218A                     u5761:
  1325  00218A  CFDB FFE3          	movff	plusw2,plusw1
  1326  00218E  06E8               	decf	wreg,f,c
  1327  002190  E2FC               	bc	u5761
  1328  002192                     
  1329                           ; BSR set to: 0
  1330                           ;main.c: 70:     seconds_counter = start_time[0];
  1331  002192  C256  F19F         	movff	main@start_time,_seconds_counter
  1332  002196  C257  F1A0         	movff	main@start_time+1,_seconds_counter+1
  1333  00219A                     
  1334                           ; BSR set to: 0
  1335                           ;main.c: 73:     unsigned int prev_sec = 0;
  1336  00219A  0E00               	movlw	0
  1337  00219C  0102               	movlb	2	; () banked
  1338  00219E  6F51               	movwf	(main@prev_sec+1)& (0+255),b
  1339  0021A0  0E00               	movlw	0
  1340  0021A2  6F50               	movwf	main@prev_sec& (0+255),b
  1341  0021A4                     
  1342                           ; BSR set to: 2
  1343                           ;main.c: 75:     _Bool prev_sun = sun;
  1344  0021A4  C0E2  F252         	movff	_sun,main@prev_sun
  1345  0021A8                     l4976:
  1346                           
  1347                           ;main.c: 80:     {;main.c: 81:         if (seconds_counter != prev_sec)
  1348  0021A8  0102               	movlb	2	; () banked
  1349  0021AA  5150               	movf	main@prev_sec& (0+255),w,b
  1350  0021AC  0101               	movlb	1	; () banked
  1351  0021AE  199F               	xorwf	_seconds_counter& (0+255),w,b
  1352  0021B0  E10B               	bnz	u5770
  1353  0021B2  0102               	movlb	2	; () banked
  1354  0021B4  5151               	movf	(main@prev_sec+1)& (0+255),w,b
  1355  0021B6  0101               	movlb	1	; () banked
  1356  0021B8  19A0               	xorwf	(_seconds_counter+1)& (0+255),w,b
  1357  0021BA  B4D8               	btfsc	status,2,c
  1358  0021BC  EFE2  F010         	goto	u5771
  1359  0021C0  EFE4  F010         	goto	u5770
  1360  0021C4                     u5771:
  1361  0021C4  EFD4  F010         	goto	l4976
  1362  0021C8                     u5770:
  1363  0021C8                     
  1364                           ; BSR set to: 1
  1365                           ;main.c: 82:         {;main.c: 84:             if ((sun != prev_sun) && (!sun))
  1366  0021C8  0102               	movlb	2	; () banked
  1367  0021CA  5152               	movf	main@prev_sun& (0+255),w,b
  1368  0021CC  0100               	movlb	0	; () banked
  1369  0021CE  19E2               	xorwf	_sun& (0+255),w,b
  1370  0021D0  B4D8               	btfsc	status,2,c
  1371  0021D2  EFED  F010         	goto	u5781
  1372  0021D6  EFEF  F010         	goto	u5780
  1373  0021DA                     u5781:
  1374  0021DA  EF0A  F011         	goto	l4986
  1375  0021DE                     u5780:
  1376  0021DE                     
  1377                           ; BSR set to: 0
  1378  0021DE  51E2               	movf	_sun& (0+255),w,b
  1379  0021E0  A4D8               	btfss	status,2,c
  1380  0021E2  EFF5  F010         	goto	u5791
  1381  0021E6  EFF7  F010         	goto	u5790
  1382  0021EA                     u5791:
  1383  0021EA  EF0A  F011         	goto	l4986
  1384  0021EE                     u5790:
  1385  0021EE                     
  1386                           ; BSR set to: 0
  1387                           ;main.c: 85:             {;main.c: 86:                 start_time[1] = 0;
  1388  0021EE  0E00               	movlw	0
  1389  0021F0  0102               	movlb	2	; () banked
  1390  0021F2  6F59               	movwf	(main@start_time+3)& (0+255),b
  1391  0021F4  0E00               	movlw	0
  1392  0021F6  6F58               	movwf	(main@start_time+2)& (0+255),b
  1393                           
  1394                           ;main.c: 87:                 start_time[2] = 12;
  1395  0021F8  0E00               	movlw	0
  1396  0021FA  6F5B               	movwf	(main@start_time+5)& (0+255),b
  1397  0021FC  0E0C               	movlw	12
  1398  0021FE  6F5A               	movwf	(main@start_time+4)& (0+255),b
  1399  002200                     
  1400                           ; BSR set to: 2
  1401                           ;main.c: 88:                 seconds_counter = seconds_check/2;
  1402  002200  90D8               	bcf	status,0,c
  1403  002202  0101               	movlb	1	; () banked
  1404  002204  319E               	rrcf	(_seconds_check+1)& (0+255),w,b
  1405  002206  0100               	movlb	0	; () banked
  1406  002208  6FD8               	movwf	??_main& (0+255),b
  1407  00220A  0101               	movlb	1	; () banked
  1408  00220C  319D               	rrcf	_seconds_check& (0+255),w,b
  1409  00220E  6F9F               	movwf	_seconds_counter& (0+255),b
  1410  002210  C0D8  F1A0         	movff	??_main,_seconds_counter+1
  1411  002214                     l4986:
  1412                           
  1413                           ;main.c: 92:             unsigned int hour_now = time_now(timebuf, datebuf, &seconds_cou
      +                          nter, &start_time[1], &start_time[2],
  1414  002214  0E00               	movlw	low main@timebuf
  1415  002216  0101               	movlb	1	; () banked
  1416  002218  6F16               	movwf	time_now@timebuf& (0+255),b
  1417  00221A  0E02               	movlw	high main@timebuf
  1418  00221C  6F17               	movwf	(time_now@timebuf+1)& (0+255),b
  1419  00221E  0E28               	movlw	low main@datebuf
  1420  002220  6F18               	movwf	time_now@datebuf& (0+255),b
  1421  002222  0E02               	movlw	high main@datebuf
  1422  002224  6F19               	movwf	(time_now@datebuf+1)& (0+255),b
  1423  002226  0E9F               	movlw	low _seconds_counter
  1424  002228  6F1A               	movwf	time_now@seconds& (0+255),b
  1425  00222A  0E01               	movlw	high _seconds_counter
  1426  00222C  6F1B               	movwf	(time_now@seconds+1)& (0+255),b
  1427  00222E  0E58               	movlw	low (main@start_time+2)
  1428  002230  6F1C               	movwf	time_now@minutes& (0+255),b
  1429  002232  0E02               	movlw	high (main@start_time+2)
  1430  002234  6F1D               	movwf	(time_now@minutes+1)& (0+255),b
  1431  002236  0E5A               	movlw	low (main@start_time+4)
  1432  002238  6F1E               	movwf	time_now@hours& (0+255),b
  1433  00223A  0E02               	movlw	high (main@start_time+4)
  1434  00223C  6F1F               	movwf	(time_now@hours+1)& (0+255),b
  1435  00223E  0E5C               	movlw	low (main@start_time+6)
  1436  002240  6F20               	movwf	time_now@weekdays& (0+255),b
  1437  002242  0E02               	movlw	high (main@start_time+6)
  1438  002244  6F21               	movwf	(time_now@weekdays+1)& (0+255),b
  1439  002246  0E5E               	movlw	low (main@start_time+8)
  1440  002248  6F22               	movwf	time_now@days& (0+255),b
  1441  00224A  0E02               	movlw	high (main@start_time+8)
  1442  00224C  6F23               	movwf	(time_now@days+1)& (0+255),b
  1443  00224E  0E60               	movlw	low (main@start_time+10)
  1444  002250  6F24               	movwf	time_now@months& (0+255),b
  1445  002252  0E02               	movlw	high (main@start_time+10)
  1446  002254  6F25               	movwf	(time_now@months+1)& (0+255),b
  1447  002256  0E62               	movlw	low (main@start_time+12)
  1448  002258  6F26               	movwf	time_now@years& (0+255),b
  1449  00225A  0E02               	movlw	high (main@start_time+12)
  1450  00225C  6F27               	movwf	(time_now@years+1)& (0+255),b
  1451  00225E  0E64               	movlw	low (main@start_time+14)
  1452  002260  6F28               	movwf	time_now@season& (0+255),b
  1453  002262  0E02               	movlw	high (main@start_time+14)
  1454  002264  6F29               	movwf	(time_now@season+1)& (0+255),b
  1455  002266  EC17  F007         	call	_time_now	;wreg free
  1456  00226A  C116  F254         	movff	?_time_now,main@hour_now
  1457  00226E  C117  F255         	movff	?_time_now+1,main@hour_now+1
  1458  002272                     
  1459                           ;main.c: 98:             LATHbits.LATH3 = !(((hour_now > 0) && (hour_now < 6)) || sun);
  1460  002272  0E00               	movlw	0
  1461  002274  0102               	movlb	2	; () banked
  1462  002276  6F53               	movwf	_main$1175& (0+255),b
  1463  002278                     
  1464                           ; BSR set to: 2
  1465  002278  5154               	movf	main@hour_now& (0+255),w,b
  1466  00227A  1155               	iorwf	(main@hour_now+1)& (0+255),w,b
  1467  00227C  B4D8               	btfsc	status,2,c
  1468  00227E  EF43  F011         	goto	u5801
  1469  002282  EF45  F011         	goto	u5800
  1470  002286                     u5801:
  1471  002286  EF50  F011         	goto	l4994
  1472  00228A                     u5800:
  1473  00228A                     
  1474                           ; BSR set to: 2
  1475  00228A  5155               	movf	(main@hour_now+1)& (0+255),w,b
  1476  00228C  E109               	bnz	u5810
  1477  00228E  0E06               	movlw	6
  1478  002290  5D54               	subwf	main@hour_now& (0+255),w,b
  1479  002292  A0D8               	btfss	status,0,c
  1480  002294  EF4E  F011         	goto	u5811
  1481  002298  EF50  F011         	goto	u5810
  1482  00229C                     u5811:
  1483  00229C  EF5C  F011         	goto	l4998
  1484  0022A0                     u5810:
  1485  0022A0                     l4994:
  1486                           
  1487                           ; BSR set to: 2
  1488  0022A0  0100               	movlb	0	; () banked
  1489  0022A2  51E2               	movf	_sun& (0+255),w,b
  1490  0022A4  A4D8               	btfss	status,2,c
  1491  0022A6  EF57  F011         	goto	u5821
  1492  0022AA  EF59  F011         	goto	u5820
  1493  0022AE                     u5821:
  1494  0022AE  EF5C  F011         	goto	l4998
  1495  0022B2                     u5820:
  1496  0022B2                     
  1497                           ; BSR set to: 0
  1498  0022B2  0E01               	movlw	1
  1499  0022B4  0102               	movlb	2	; () banked
  1500  0022B6  6F53               	movwf	_main$1175& (0+255),b
  1501  0022B8                     l4998:
  1502  0022B8  0102               	movlb	2	; () banked
  1503  0022BA  B153               	btfsc	_main$1175& (0+255),0,b
  1504  0022BC  D002               	bra	u5835
  1505  0022BE  9680               	bcf	128,3,c	;volatile
  1506  0022C0  D001               	bra	u5836
  1507  0022C2                     u5835:
  1508  0022C2  8680               	bsf	128,3,c	;volatile
  1509  0022C4                     u5836:
  1510  0022C4                     
  1511                           ;main.c: 100:             LEDarray_disp_bin(hour_now);
  1512  0022C4  C254  F075         	movff	main@hour_now,LEDarray_disp_bin@number
  1513  0022C8  C255  F076         	movff	main@hour_now+1,LEDarray_disp_bin@number+1
  1514  0022CC  EC74  F018         	call	_LEDarray_disp_bin	;wreg free
  1515  0022D0                     
  1516                           ;main.c: 102:             prev_sec = seconds_counter;
  1517  0022D0  C19F  F250         	movff	_seconds_counter,main@prev_sec
  1518  0022D4  C1A0  F251         	movff	_seconds_counter+1,main@prev_sec+1
  1519  0022D8                     
  1520                           ;main.c: 103:             prev_sun = sun;
  1521  0022D8  C0E2  F252         	movff	_sun,main@prev_sun
  1522  0022DC                     
  1523                           ;main.c: 106:             LCD_setline(1);
  1524  0022DC  0E01               	movlw	1
  1525  0022DE  EC51  F01C         	call	_LCD_setline
  1526  0022E2                     
  1527                           ;main.c: 107:             LCD_sendstring(timebuf);
  1528  0022E2  0E00               	movlw	low main@timebuf
  1529  0022E4  0100               	movlb	0	; () banked
  1530  0022E6  6F78               	movwf	LCD_sendstring@string& (0+255),b
  1531  0022E8  0E02               	movlw	high main@timebuf
  1532  0022EA  6F79               	movwf	(LCD_sendstring@string+1)& (0+255),b
  1533  0022EC  ECE9  F01C         	call	_LCD_sendstring	;wreg free
  1534  0022F0                     
  1535                           ;main.c: 108:             LCD_setline(2);
  1536  0022F0  0E02               	movlw	2
  1537  0022F2  EC51  F01C         	call	_LCD_setline
  1538  0022F6                     
  1539                           ;main.c: 109:             LCD_sendstring(datebuf);
  1540  0022F6  0E28               	movlw	low main@datebuf
  1541  0022F8  0100               	movlb	0	; () banked
  1542  0022FA  6F78               	movwf	LCD_sendstring@string& (0+255),b
  1543  0022FC  0E02               	movlw	high main@datebuf
  1544  0022FE  6F79               	movwf	(LCD_sendstring@string+1)& (0+255),b
  1545  002300  ECE9  F01C         	call	_LCD_sendstring	;wreg free
  1546  002304                     
  1547                           ;main.c: 110:             LCD_sendbyte(0b00000010, 0);
  1548  002304  0E00               	movlw	0
  1549  002306  0100               	movlb	0	; () banked
  1550  002308  6F76               	movwf	LCD_sendbyte@type& (0+255),b
  1551  00230A  0E02               	movlw	2
  1552  00230C  EC3C  F01D         	call	_LCD_sendbyte
  1553  002310  EFD4  F010         	goto	l4976
  1554  002314  EF6D  F000         	goto	start
  1555  002318                     __end_of_main:
  1556                           	callstack 0
  1557                           
  1558 ;; *************** function _time_now *****************
  1559 ;; Defined at:
  1560 ;;		line 22 in file "datetime.c"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;  timebuf         2   22[BANK1 ] PTR unsigned char 
  1563 ;;		 -> main@timebuf(40), 
  1564 ;;  datebuf         2   24[BANK1 ] PTR unsigned char 
  1565 ;;		 -> main@datebuf(40), 
  1566 ;;  seconds         2   26[BANK1 ] PTR unsigned int 
  1567 ;;		 -> seconds_counter(2), 
  1568 ;;  minutes         2   28[BANK1 ] PTR unsigned int 
  1569 ;;		 -> main@start_time(16), 
  1570 ;;  hours           2   30[BANK1 ] PTR unsigned int 
  1571 ;;		 -> main@start_time(16), 
  1572 ;;  weekdays        2   32[BANK1 ] PTR unsigned int 
  1573 ;;		 -> main@start_time(16), 
  1574 ;;  days            2   34[BANK1 ] PTR unsigned int 
  1575 ;;		 -> main@start_time(16), 
  1576 ;;  months          2   36[BANK1 ] PTR unsigned int 
  1577 ;;		 -> main@start_time(16), 
  1578 ;;  years           2   38[BANK1 ] PTR unsigned int 
  1579 ;;		 -> main@start_time(16), 
  1580 ;;  season          2   40[BANK1 ] PTR unsigned int 
  1581 ;;		 -> main@start_time(16), 
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;  daylist        70   42[BANK1 ] unsigned char [10][7]
  1584 ;;  month_days     24  114[BANK1 ] unsigned int [12]
  1585 ;;  cur_month       2  139[BANK1 ] unsigned int 
  1586 ;;  leap            1  138[BANK1 ] _Bool 
  1587 ;; Return value:  Size  Location     Type
  1588 ;;                  2   22[BANK1 ] unsigned int 
  1589 ;; Registers used:
  1590 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1596 ;;      Params:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1597 ;;      Locals:         0       0      99       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1598 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1599 ;;      Totals:         0       4     119       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1600 ;;Total ram usage:      123 bytes
  1601 ;; Hardware stack levels used:    1
  1602 ;; Hardware stack levels required when called:   18
  1603 ;; This function calls:
  1604 ;;		___lwdiv
  1605 ;;		___lwmod
  1606 ;;		___wmul
  1607 ;;		_sprintf
  1608 ;; This function is called by:
  1609 ;;		_main
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613                           	psect	text1
  1614  000E2E                     __ptext1:
  1615                           	callstack 0
  1616  000E2E                     _time_now:
  1617                           	callstack 12
  1618  000E2E                     
  1619                           ;datetime.c: 22: unsigned int time_now(char *timebuf, char *datebuf, unsigned int *secon
      +                          ds, unsigned int *minutes, unsigned int *hours,;datetime.c: 23:                       un
      +                          signed int *weekdays,unsigned int *days,;datetime.c: 24:                       unsigned 
      +                          int *months, unsigned int *years,;datetime.c: 25:                       unsigned int *se
      +                          ason);datetime.c: 26: {;datetime.c: 28:     _Bool leap = !(*years % 4);
  1620  000E2E  C126  FFD9         	movff	time_now@years,fsr2l
  1621  000E32  C127  FFDA         	movff	time_now@years+1,fsr2h
  1622  000E36  CFDE F0D4          	movff	postinc2,??_time_now
  1623  000E3A  CFDD F0D5          	movff	postdec2,??_time_now+1
  1624  000E3E  0E03               	movlw	3
  1625  000E40  0100               	movlb	0	; () banked
  1626  000E42  17D4               	andwf	??_time_now& (0+255),f,b
  1627  000E44  0E00               	movlw	0
  1628  000E46  17D5               	andwf	(??_time_now+1)& (0+255),f,b
  1629  000E48  51D4               	movf	??_time_now& (0+255),w,b
  1630  000E4A  11D5               	iorwf	(??_time_now+1)& (0+255),w,b
  1631  000E4C  B4D8               	btfsc	status,2,c
  1632  000E4E  EF2B  F007         	goto	u5581
  1633  000E52  EF2E  F007         	goto	u5580
  1634  000E56                     u5581:
  1635  000E56  0E01               	movlw	1
  1636  000E58  EF2F  F007         	goto	u5590
  1637  000E5C                     u5580:
  1638  000E5C  0E00               	movlw	0
  1639  000E5E                     u5590:
  1640  000E5E  0101               	movlb	1	; () banked
  1641  000E60  6F8A               	movwf	time_now@leap& (0+255),b
  1642                           
  1643                           ;datetime.c: 31:     unsigned int month_days[] = {31, 28 + leap, 31, 30, 31, 30,
  1644  000E62  EE21  F072         	lfsr	2,time_now@month_days
  1645  000E66  0E17               	movlw	23
  1646  000E68                     u5601:
  1647  000E68  6ADE               	clrf	postinc2,c
  1648  000E6A  06E8               	decf	wreg,f,c
  1649  000E6C  E2FD               	bc	u5601
  1650  000E6E                     
  1651                           ; BSR set to: 1
  1652  000E6E  0E00               	movlw	0
  1653  000E70  6F73               	movwf	(time_now@month_days+1)& (0+255),b
  1654  000E72  0E1F               	movlw	31
  1655  000E74  6F72               	movwf	time_now@month_days& (0+255),b
  1656  000E76                     
  1657                           ; BSR set to: 1
  1658  000E76  0E1C               	movlw	28
  1659  000E78  258A               	addwf	time_now@leap& (0+255),w,b
  1660  000E7A  6F74               	movwf	(time_now@month_days+2)& (0+255),b
  1661  000E7C  6B75               	clrf	(time_now@month_days+3)& (0+255),b
  1662  000E7E  0E00               	movlw	0
  1663  000E80  2375               	addwfc	(time_now@month_days+3)& (0+255),f,b
  1664  000E82                     
  1665                           ; BSR set to: 1
  1666  000E82  0E00               	movlw	0
  1667  000E84  6F77               	movwf	(time_now@month_days+5)& (0+255),b
  1668  000E86  0E1F               	movlw	31
  1669  000E88  6F76               	movwf	(time_now@month_days+4)& (0+255),b
  1670  000E8A                     
  1671                           ; BSR set to: 1
  1672  000E8A  0E00               	movlw	0
  1673  000E8C  6F79               	movwf	(time_now@month_days+7)& (0+255),b
  1674  000E8E  0E1E               	movlw	30
  1675  000E90  6F78               	movwf	(time_now@month_days+6)& (0+255),b
  1676  000E92                     
  1677                           ; BSR set to: 1
  1678  000E92  0E00               	movlw	0
  1679  000E94  6F7B               	movwf	(time_now@month_days+9)& (0+255),b
  1680  000E96  0E1F               	movlw	31
  1681  000E98  6F7A               	movwf	(time_now@month_days+8)& (0+255),b
  1682  000E9A                     
  1683                           ; BSR set to: 1
  1684  000E9A  0E00               	movlw	0
  1685  000E9C  6F7D               	movwf	(time_now@month_days+11)& (0+255),b
  1686  000E9E  0E1E               	movlw	30
  1687  000EA0  6F7C               	movwf	(time_now@month_days+10)& (0+255),b
  1688  000EA2                     
  1689                           ; BSR set to: 1
  1690  000EA2  0E00               	movlw	0
  1691  000EA4  6F7F               	movwf	(time_now@month_days+13)& (0+255),b
  1692  000EA6  0E1F               	movlw	31
  1693  000EA8  6F7E               	movwf	(time_now@month_days+12)& (0+255),b
  1694  000EAA                     
  1695                           ; BSR set to: 1
  1696  000EAA  0E00               	movlw	0
  1697  000EAC  6F81               	movwf	(time_now@month_days+15)& (0+255),b
  1698  000EAE  0E1F               	movlw	31
  1699  000EB0  6F80               	movwf	(time_now@month_days+14)& (0+255),b
  1700  000EB2                     
  1701                           ; BSR set to: 1
  1702  000EB2  0E00               	movlw	0
  1703  000EB4  6F83               	movwf	(time_now@month_days+17)& (0+255),b
  1704  000EB6  0E1E               	movlw	30
  1705  000EB8  6F82               	movwf	(time_now@month_days+16)& (0+255),b
  1706  000EBA                     
  1707                           ; BSR set to: 1
  1708  000EBA  0E00               	movlw	0
  1709  000EBC  6F85               	movwf	(time_now@month_days+19)& (0+255),b
  1710  000EBE  0E1F               	movlw	31
  1711  000EC0  6F84               	movwf	(time_now@month_days+18)& (0+255),b
  1712  000EC2                     
  1713                           ; BSR set to: 1
  1714  000EC2  0E00               	movlw	0
  1715  000EC4  6F87               	movwf	(time_now@month_days+21)& (0+255),b
  1716  000EC6  0E1E               	movlw	30
  1717  000EC8  6F86               	movwf	(time_now@month_days+20)& (0+255),b
  1718  000ECA                     
  1719                           ; BSR set to: 1
  1720  000ECA  0E00               	movlw	0
  1721  000ECC  6F89               	movwf	(time_now@month_days+23)& (0+255),b
  1722  000ECE  0E1F               	movlw	31
  1723  000ED0  6F88               	movwf	(time_now@month_days+22)& (0+255),b
  1724  000ED2                     
  1725                           ; BSR set to: 1
  1726                           ;datetime.c: 34:     unsigned int cur_month = month_days[*months];
  1727  000ED2  C124  FFD9         	movff	time_now@months,fsr2l
  1728  000ED6  C125  FFDA         	movff	time_now@months+1,fsr2h
  1729  000EDA  CFDE F0D4          	movff	postinc2,??_time_now
  1730  000EDE  CFDD F0D5          	movff	postdec2,??_time_now+1
  1731  000EE2  90D8               	bcf	status,0,c
  1732  000EE4  0100               	movlb	0	; () banked
  1733  000EE6  37D4               	rlcf	??_time_now& (0+255),f,b
  1734  000EE8  37D5               	rlcf	(??_time_now+1)& (0+255),f,b
  1735  000EEA  0E72               	movlw	low time_now@month_days
  1736  000EEC  25D4               	addwf	??_time_now& (0+255),w,b
  1737  000EEE  6ED9               	movwf	fsr2l,c
  1738  000EF0  0E01               	movlw	high time_now@month_days
  1739  000EF2  21D5               	addwfc	(??_time_now+1)& (0+255),w,b
  1740  000EF4  6EDA               	movwf	fsr2h,c
  1741  000EF6  CFDE F18B          	movff	postinc2,time_now@cur_month
  1742  000EFA  CFDD F18C          	movff	postdec2,time_now@cur_month+1
  1743  000EFE                     
  1744                           ; BSR set to: 0
  1745                           ;datetime.c: 38:     if ((*months == 2) && (*days > 23) && (*weekdays == 6) && (*hours =
      +                          = 1))
  1746  000EFE  C124  FFD9         	movff	time_now@months,fsr2l
  1747  000F02  C125  FFDA         	movff	time_now@months+1,fsr2h
  1748  000F06  0E02               	movlw	2
  1749  000F08  18DE               	xorwf	postinc2,w,c
  1750  000F0A  10DE               	iorwf	postinc2,w,c
  1751  000F0C  A4D8               	btfss	status,2,c
  1752  000F0E  EF8B  F007         	goto	u5611
  1753  000F12  EF8D  F007         	goto	u5610
  1754  000F16                     u5611:
  1755  000F16  EFC7  F007         	goto	l4856
  1756  000F1A                     u5610:
  1757  000F1A                     
  1758                           ; BSR set to: 0
  1759  000F1A  C122  FFD9         	movff	time_now@days,fsr2l
  1760  000F1E  C123  FFDA         	movff	time_now@days+1,fsr2h
  1761  000F22  0E01               	movlw	1
  1762  000F24  50DB               	movf	plusw2,w,c
  1763  000F26  E109               	bnz	u5620
  1764  000F28  0E18               	movlw	24
  1765  000F2A  5CDE               	subwf	postinc2,w,c
  1766  000F2C  A0D8               	btfss	status,0,c
  1767  000F2E  EF9B  F007         	goto	u5621
  1768  000F32  EF9D  F007         	goto	u5620
  1769  000F36                     u5621:
  1770  000F36  EFC7  F007         	goto	l4856
  1771  000F3A                     u5620:
  1772  000F3A                     
  1773                           ; BSR set to: 0
  1774  000F3A  C120  FFD9         	movff	time_now@weekdays,fsr2l
  1775  000F3E  C121  FFDA         	movff	time_now@weekdays+1,fsr2h
  1776  000F42  0E06               	movlw	6
  1777  000F44  18DE               	xorwf	postinc2,w,c
  1778  000F46  10DE               	iorwf	postinc2,w,c
  1779  000F48  A4D8               	btfss	status,2,c
  1780  000F4A  EFA9  F007         	goto	u5631
  1781  000F4E  EFAB  F007         	goto	u5630
  1782  000F52                     u5631:
  1783  000F52  EFC7  F007         	goto	l4856
  1784  000F56                     u5630:
  1785  000F56                     
  1786                           ; BSR set to: 0
  1787  000F56  C11E  FFD9         	movff	time_now@hours,fsr2l
  1788  000F5A  C11F  FFDA         	movff	time_now@hours+1,fsr2h
  1789  000F5E  04DE               	decf	postinc2,w,c
  1790  000F60  10DE               	iorwf	postinc2,w,c
  1791  000F62  A4D8               	btfss	status,2,c
  1792  000F64  EFB6  F007         	goto	u5641
  1793  000F68  EFB8  F007         	goto	u5640
  1794  000F6C                     u5641:
  1795  000F6C  EFC7  F007         	goto	l4856
  1796  000F70                     u5640:
  1797  000F70                     
  1798                           ; BSR set to: 0
  1799                           ;datetime.c: 39:     {;datetime.c: 40:         *season = 1;
  1800  000F70  C128  FFD9         	movff	time_now@season,fsr2l
  1801  000F74  C129  FFDA         	movff	time_now@season+1,fsr2h
  1802  000F78  0E01               	movlw	1
  1803  000F7A  6EDE               	movwf	postinc2,c
  1804  000F7C  0E00               	movlw	0
  1805  000F7E  6EDD               	movwf	postdec2,c
  1806  000F80                     
  1807                           ; BSR set to: 0
  1808                           ;datetime.c: 41:         *hours += 1;
  1809  000F80  C11E  FFD9         	movff	time_now@hours,fsr2l
  1810  000F84  C11F  FFDA         	movff	time_now@hours+1,fsr2h
  1811  000F88  2ADE               	incf	postinc2,f,c
  1812  000F8A  0E00               	movlw	0
  1813  000F8C  22DD               	addwfc	postdec2,f,c
  1814  000F8E                     l4856:
  1815                           
  1816                           ; BSR set to: 0
  1817                           ;datetime.c: 45:     if ((*months == 9) && (*days > 23) && (*weekdays == 6) && (*hours =
      +                          = 2)
  1818  000F8E  C124  FFD9         	movff	time_now@months,fsr2l
  1819  000F92  C125  FFDA         	movff	time_now@months+1,fsr2h
  1820  000F96  0E09               	movlw	9
  1821  000F98  18DE               	xorwf	postinc2,w,c
  1822  000F9A  10DE               	iorwf	postinc2,w,c
  1823  000F9C  A4D8               	btfss	status,2,c
  1824  000F9E  EFD3  F007         	goto	u5651
  1825  000FA2  EFD5  F007         	goto	u5650
  1826  000FA6                     u5651:
  1827  000FA6  EF1D  F008         	goto	l4870
  1828  000FAA                     u5650:
  1829  000FAA                     
  1830                           ; BSR set to: 0
  1831  000FAA  C122  FFD9         	movff	time_now@days,fsr2l
  1832  000FAE  C123  FFDA         	movff	time_now@days+1,fsr2h
  1833  000FB2  0E01               	movlw	1
  1834  000FB4  50DB               	movf	plusw2,w,c
  1835  000FB6  E109               	bnz	u5660
  1836  000FB8  0E18               	movlw	24
  1837  000FBA  5CDE               	subwf	postinc2,w,c
  1838  000FBC  A0D8               	btfss	status,0,c
  1839  000FBE  EFE3  F007         	goto	u5661
  1840  000FC2  EFE5  F007         	goto	u5660
  1841  000FC6                     u5661:
  1842  000FC6  EF1D  F008         	goto	l4870
  1843  000FCA                     u5660:
  1844  000FCA                     
  1845                           ; BSR set to: 0
  1846  000FCA  C120  FFD9         	movff	time_now@weekdays,fsr2l
  1847  000FCE  C121  FFDA         	movff	time_now@weekdays+1,fsr2h
  1848  000FD2  0E06               	movlw	6
  1849  000FD4  18DE               	xorwf	postinc2,w,c
  1850  000FD6  10DE               	iorwf	postinc2,w,c
  1851  000FD8  A4D8               	btfss	status,2,c
  1852  000FDA  EFF1  F007         	goto	u5671
  1853  000FDE  EFF3  F007         	goto	u5670
  1854  000FE2                     u5671:
  1855  000FE2  EF1D  F008         	goto	l4870
  1856  000FE6                     u5670:
  1857  000FE6                     
  1858                           ; BSR set to: 0
  1859  000FE6  C11E  FFD9         	movff	time_now@hours,fsr2l
  1860  000FEA  C11F  FFDA         	movff	time_now@hours+1,fsr2h
  1861  000FEE  0E02               	movlw	2
  1862  000FF0  18DE               	xorwf	postinc2,w,c
  1863  000FF2  10DE               	iorwf	postinc2,w,c
  1864  000FF4  A4D8               	btfss	status,2,c
  1865  000FF6  EFFF  F007         	goto	u5681
  1866  000FFA  EF01  F008         	goto	u5680
  1867  000FFE                     u5681:
  1868  000FFE  EF1D  F008         	goto	l4870
  1869  001002                     u5680:
  1870  001002                     
  1871                           ; BSR set to: 0
  1872  001002  C128  FFD9         	movff	time_now@season,fsr2l
  1873  001006  C129  FFDA         	movff	time_now@season+1,fsr2h
  1874  00100A  04DE               	decf	postinc2,w,c
  1875  00100C  10DE               	iorwf	postinc2,w,c
  1876  00100E  A4D8               	btfss	status,2,c
  1877  001010  EF0C  F008         	goto	u5691
  1878  001014  EF0E  F008         	goto	u5690
  1879  001018                     u5691:
  1880  001018  EF1D  F008         	goto	l4870
  1881  00101C                     u5690:
  1882  00101C                     
  1883                           ; BSR set to: 0
  1884                           ;datetime.c: 47:     {;datetime.c: 48:         *season = 0;
  1885  00101C  C128  FFD9         	movff	time_now@season,fsr2l
  1886  001020  C129  FFDA         	movff	time_now@season+1,fsr2h
  1887  001024  0E00               	movlw	0
  1888  001026  6EDE               	movwf	postinc2,c
  1889  001028  0E00               	movlw	0
  1890  00102A  6EDD               	movwf	postdec2,c
  1891  00102C                     
  1892                           ; BSR set to: 0
  1893                           ;datetime.c: 49:         *hours -= 1;
  1894  00102C  C11E  FFD9         	movff	time_now@hours,fsr2l
  1895  001030  C11F  FFDA         	movff	time_now@hours+1,fsr2h
  1896  001034  06DE               	decf	postinc2,f,c
  1897  001036  0E00               	movlw	0
  1898  001038  5ADD               	subwfb	postdec2,f,c
  1899  00103A                     l4870:
  1900                           
  1901                           ; BSR set to: 0
  1902                           ;datetime.c: 52:     *minutes += *seconds / 60;
  1903  00103A  C11A  FFD9         	movff	time_now@seconds,fsr2l
  1904  00103E  C11B  FFDA         	movff	time_now@seconds+1,fsr2h
  1905  001042  CFDE F075          	movff	postinc2,___lwdiv@dividend
  1906  001046  CFDD F076          	movff	postdec2,___lwdiv@dividend+1
  1907  00104A  0E00               	movlw	0
  1908  00104C  6F78               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1909  00104E  0E3C               	movlw	60
  1910  001050  6F77               	movwf	___lwdiv@divisor& (0+255),b
  1911  001052  EC40  F01A         	call	___lwdiv	;wreg free
  1912  001056  C11C  FFD9         	movff	time_now@minutes,fsr2l
  1913  00105A  C11D  FFDA         	movff	time_now@minutes+1,fsr2h
  1914  00105E  0100               	movlb	0	; () banked
  1915  001060  5175               	movf	?___lwdiv& (0+255),w,b
  1916  001062  26DE               	addwf	postinc2,f,c
  1917  001064  5176               	movf	(?___lwdiv+1)& (0+255),w,b
  1918  001066  22DD               	addwfc	postdec2,f,c
  1919  001068                     
  1920                           ; BSR set to: 0
  1921                           ;datetime.c: 53:     *seconds %= 60;
  1922  001068  C11A  FFD9         	movff	time_now@seconds,fsr2l
  1923  00106C  C11B  FFDA         	movff	time_now@seconds+1,fsr2h
  1924  001070  CFDE F075          	movff	postinc2,___lwmod@dividend
  1925  001074  CFDD F076          	movff	postdec2,___lwmod@dividend+1
  1926  001078  0E00               	movlw	0
  1927  00107A  6F78               	movwf	(___lwmod@divisor+1)& (0+255),b
  1928  00107C  0E3C               	movlw	60
  1929  00107E  6F77               	movwf	___lwmod@divisor& (0+255),b
  1930  001080  ECE4  F01A         	call	___lwmod	;wreg free
  1931  001084  C11A  FFD9         	movff	time_now@seconds,fsr2l
  1932  001088  C11B  FFDA         	movff	time_now@seconds+1,fsr2h
  1933  00108C  0100               	movlb	0	; () banked
  1934  00108E  C075  FFDE         	movff	?___lwmod,postinc2
  1935  001092  C076  FFDD         	movff	?___lwmod+1,postdec2
  1936  001096                     
  1937                           ; BSR set to: 0
  1938                           ;datetime.c: 54:     *hours += *minutes / 60;
  1939  001096  C11C  FFD9         	movff	time_now@minutes,fsr2l
  1940  00109A  C11D  FFDA         	movff	time_now@minutes+1,fsr2h
  1941  00109E  CFDE F075          	movff	postinc2,___lwdiv@dividend
  1942  0010A2  CFDD F076          	movff	postdec2,___lwdiv@dividend+1
  1943  0010A6  0E00               	movlw	0
  1944  0010A8  6F78               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1945  0010AA  0E3C               	movlw	60
  1946  0010AC  6F77               	movwf	___lwdiv@divisor& (0+255),b
  1947  0010AE  EC40  F01A         	call	___lwdiv	;wreg free
  1948  0010B2  C11E  FFD9         	movff	time_now@hours,fsr2l
  1949  0010B6  C11F  FFDA         	movff	time_now@hours+1,fsr2h
  1950  0010BA  0100               	movlb	0	; () banked
  1951  0010BC  5175               	movf	?___lwdiv& (0+255),w,b
  1952  0010BE  26DE               	addwf	postinc2,f,c
  1953  0010C0  5176               	movf	(?___lwdiv+1)& (0+255),w,b
  1954  0010C2  22DD               	addwfc	postdec2,f,c
  1955  0010C4                     
  1956                           ; BSR set to: 0
  1957                           ;datetime.c: 55:     *minutes %= 60;
  1958  0010C4  C11C  FFD9         	movff	time_now@minutes,fsr2l
  1959  0010C8  C11D  FFDA         	movff	time_now@minutes+1,fsr2h
  1960  0010CC  CFDE F075          	movff	postinc2,___lwmod@dividend
  1961  0010D0  CFDD F076          	movff	postdec2,___lwmod@dividend+1
  1962  0010D4  0E00               	movlw	0
  1963  0010D6  6F78               	movwf	(___lwmod@divisor+1)& (0+255),b
  1964  0010D8  0E3C               	movlw	60
  1965  0010DA  6F77               	movwf	___lwmod@divisor& (0+255),b
  1966  0010DC  ECE4  F01A         	call	___lwmod	;wreg free
  1967  0010E0  C11C  FFD9         	movff	time_now@minutes,fsr2l
  1968  0010E4  C11D  FFDA         	movff	time_now@minutes+1,fsr2h
  1969  0010E8  0100               	movlb	0	; () banked
  1970  0010EA  C075  FFDE         	movff	?___lwmod,postinc2
  1971  0010EE  C076  FFDD         	movff	?___lwmod+1,postdec2
  1972  0010F2                     
  1973                           ; BSR set to: 0
  1974                           ;datetime.c: 56:     *days += *hours / 24;
  1975  0010F2  C11E  FFD9         	movff	time_now@hours,fsr2l
  1976  0010F6  C11F  FFDA         	movff	time_now@hours+1,fsr2h
  1977  0010FA  CFDE F075          	movff	postinc2,___lwdiv@dividend
  1978  0010FE  CFDD F076          	movff	postdec2,___lwdiv@dividend+1
  1979  001102  0E00               	movlw	0
  1980  001104  6F78               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1981  001106  0E18               	movlw	24
  1982  001108  6F77               	movwf	___lwdiv@divisor& (0+255),b
  1983  00110A  EC40  F01A         	call	___lwdiv	;wreg free
  1984  00110E  C122  FFD9         	movff	time_now@days,fsr2l
  1985  001112  C123  FFDA         	movff	time_now@days+1,fsr2h
  1986  001116  0100               	movlb	0	; () banked
  1987  001118  5175               	movf	?___lwdiv& (0+255),w,b
  1988  00111A  26DE               	addwf	postinc2,f,c
  1989  00111C  5176               	movf	(?___lwdiv+1)& (0+255),w,b
  1990  00111E  22DD               	addwfc	postdec2,f,c
  1991  001120                     
  1992                           ; BSR set to: 0
  1993                           ;datetime.c: 57:     *weekdays += *hours / 24;
  1994  001120  C11E  FFD9         	movff	time_now@hours,fsr2l
  1995  001124  C11F  FFDA         	movff	time_now@hours+1,fsr2h
  1996  001128  CFDE F075          	movff	postinc2,___lwdiv@dividend
  1997  00112C  CFDD F076          	movff	postdec2,___lwdiv@dividend+1
  1998  001130  0E00               	movlw	0
  1999  001132  6F78               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2000  001134  0E18               	movlw	24
  2001  001136  6F77               	movwf	___lwdiv@divisor& (0+255),b
  2002  001138  EC40  F01A         	call	___lwdiv	;wreg free
  2003  00113C  C120  FFD9         	movff	time_now@weekdays,fsr2l
  2004  001140  C121  FFDA         	movff	time_now@weekdays+1,fsr2h
  2005  001144  0100               	movlb	0	; () banked
  2006  001146  5175               	movf	?___lwdiv& (0+255),w,b
  2007  001148  26DE               	addwf	postinc2,f,c
  2008  00114A  5176               	movf	(?___lwdiv+1)& (0+255),w,b
  2009  00114C  22DD               	addwfc	postdec2,f,c
  2010  00114E                     
  2011                           ; BSR set to: 0
  2012                           ;datetime.c: 58:     *hours %= 24;
  2013  00114E  C11E  FFD9         	movff	time_now@hours,fsr2l
  2014  001152  C11F  FFDA         	movff	time_now@hours+1,fsr2h
  2015  001156  CFDE F075          	movff	postinc2,___lwmod@dividend
  2016  00115A  CFDD F076          	movff	postdec2,___lwmod@dividend+1
  2017  00115E  0E00               	movlw	0
  2018  001160  6F78               	movwf	(___lwmod@divisor+1)& (0+255),b
  2019  001162  0E18               	movlw	24
  2020  001164  6F77               	movwf	___lwmod@divisor& (0+255),b
  2021  001166  ECE4  F01A         	call	___lwmod	;wreg free
  2022  00116A  C11E  FFD9         	movff	time_now@hours,fsr2l
  2023  00116E  C11F  FFDA         	movff	time_now@hours+1,fsr2h
  2024  001172  0100               	movlb	0	; () banked
  2025  001174  C075  FFDE         	movff	?___lwmod,postinc2
  2026  001178  C076  FFDD         	movff	?___lwmod+1,postdec2
  2027  00117C                     
  2028                           ; BSR set to: 0
  2029                           ;datetime.c: 59:     *months += *days / cur_month;
  2030  00117C  C122  FFD9         	movff	time_now@days,fsr2l
  2031  001180  C123  FFDA         	movff	time_now@days+1,fsr2h
  2032  001184  CFDE F075          	movff	postinc2,___lwdiv@dividend
  2033  001188  CFDD F076          	movff	postdec2,___lwdiv@dividend+1
  2034  00118C  C18B  F077         	movff	time_now@cur_month,___lwdiv@divisor
  2035  001190  C18C  F078         	movff	time_now@cur_month+1,___lwdiv@divisor+1
  2036  001194  EC40  F01A         	call	___lwdiv	;wreg free
  2037  001198  C124  FFD9         	movff	time_now@months,fsr2l
  2038  00119C  C125  FFDA         	movff	time_now@months+1,fsr2h
  2039  0011A0  0100               	movlb	0	; () banked
  2040  0011A2  5175               	movf	?___lwdiv& (0+255),w,b
  2041  0011A4  26DE               	addwf	postinc2,f,c
  2042  0011A6  5176               	movf	(?___lwdiv+1)& (0+255),w,b
  2043  0011A8  22DD               	addwfc	postdec2,f,c
  2044  0011AA                     
  2045                           ; BSR set to: 0
  2046                           ;datetime.c: 61:     *days %= cur_month;
  2047  0011AA  C122  FFD9         	movff	time_now@days,fsr2l
  2048  0011AE  C123  FFDA         	movff	time_now@days+1,fsr2h
  2049  0011B2  CFDE F075          	movff	postinc2,___lwmod@dividend
  2050  0011B6  CFDD F076          	movff	postdec2,___lwmod@dividend+1
  2051  0011BA  C18B  F077         	movff	time_now@cur_month,___lwmod@divisor
  2052  0011BE  C18C  F078         	movff	time_now@cur_month+1,___lwmod@divisor+1
  2053  0011C2  ECE4  F01A         	call	___lwmod	;wreg free
  2054  0011C6  C122  FFD9         	movff	time_now@days,fsr2l
  2055  0011CA  C123  FFDA         	movff	time_now@days+1,fsr2h
  2056  0011CE  0100               	movlb	0	; () banked
  2057  0011D0  C075  FFDE         	movff	?___lwmod,postinc2
  2058  0011D4  C076  FFDD         	movff	?___lwmod+1,postdec2
  2059  0011D8                     
  2060                           ; BSR set to: 0
  2061                           ;datetime.c: 62:     *weekdays %= 7;
  2062  0011D8  C120  FFD9         	movff	time_now@weekdays,fsr2l
  2063  0011DC  C121  FFDA         	movff	time_now@weekdays+1,fsr2h
  2064  0011E0  CFDE F075          	movff	postinc2,___lwmod@dividend
  2065  0011E4  CFDD F076          	movff	postdec2,___lwmod@dividend+1
  2066  0011E8  0E00               	movlw	0
  2067  0011EA  6F78               	movwf	(___lwmod@divisor+1)& (0+255),b
  2068  0011EC  0E07               	movlw	7
  2069  0011EE  6F77               	movwf	___lwmod@divisor& (0+255),b
  2070  0011F0  ECE4  F01A         	call	___lwmod	;wreg free
  2071  0011F4  C120  FFD9         	movff	time_now@weekdays,fsr2l
  2072  0011F8  C121  FFDA         	movff	time_now@weekdays+1,fsr2h
  2073  0011FC  0100               	movlb	0	; () banked
  2074  0011FE  C075  FFDE         	movff	?___lwmod,postinc2
  2075  001202  C076  FFDD         	movff	?___lwmod+1,postdec2
  2076  001206                     
  2077                           ; BSR set to: 0
  2078                           ;datetime.c: 63:     *years += *months / 12;
  2079  001206  C124  FFD9         	movff	time_now@months,fsr2l
  2080  00120A  C125  FFDA         	movff	time_now@months+1,fsr2h
  2081  00120E  CFDE F075          	movff	postinc2,___lwdiv@dividend
  2082  001212  CFDD F076          	movff	postdec2,___lwdiv@dividend+1
  2083  001216  0E00               	movlw	0
  2084  001218  6F78               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2085  00121A  0E0C               	movlw	12
  2086  00121C  6F77               	movwf	___lwdiv@divisor& (0+255),b
  2087  00121E  EC40  F01A         	call	___lwdiv	;wreg free
  2088  001222  C126  FFD9         	movff	time_now@years,fsr2l
  2089  001226  C127  FFDA         	movff	time_now@years+1,fsr2h
  2090  00122A  0100               	movlb	0	; () banked
  2091  00122C  5175               	movf	?___lwdiv& (0+255),w,b
  2092  00122E  26DE               	addwf	postinc2,f,c
  2093  001230  5176               	movf	(?___lwdiv+1)& (0+255),w,b
  2094  001232  22DD               	addwfc	postdec2,f,c
  2095  001234                     
  2096                           ; BSR set to: 0
  2097                           ;datetime.c: 64:     *months %= 12;
  2098  001234  C124  FFD9         	movff	time_now@months,fsr2l
  2099  001238  C125  FFDA         	movff	time_now@months+1,fsr2h
  2100  00123C  CFDE F075          	movff	postinc2,___lwmod@dividend
  2101  001240  CFDD F076          	movff	postdec2,___lwmod@dividend+1
  2102  001244  0E00               	movlw	0
  2103  001246  6F78               	movwf	(___lwmod@divisor+1)& (0+255),b
  2104  001248  0E0C               	movlw	12
  2105  00124A  6F77               	movwf	___lwmod@divisor& (0+255),b
  2106  00124C  ECE4  F01A         	call	___lwmod	;wreg free
  2107  001250  C124  FFD9         	movff	time_now@months,fsr2l
  2108  001254  C125  FFDA         	movff	time_now@months+1,fsr2h
  2109  001258  0100               	movlb	0	; () banked
  2110  00125A  C075  FFDE         	movff	?___lwmod,postinc2
  2111  00125E  C076  FFDD         	movff	?___lwmod+1,postdec2
  2112  001262                     
  2113                           ; BSR set to: 0
  2114                           ;datetime.c: 67:     char daylist[7][10] = {"Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "S
      +                          un"};
  2115  001262  EE22  F066         	lfsr	2,time_now@F14544
  2116  001266  EE11  F02A         	lfsr	1,time_now@daylist
  2117  00126A  0E45               	movlw	69
  2118  00126C                     u5701:
  2119  00126C  CFDB FFE3          	movff	plusw2,plusw1
  2120  001270  06E8               	decf	wreg,f,c
  2121  001272  E2FC               	bc	u5701
  2122  001274                     
  2123                           ; BSR set to: 0
  2124                           ;datetime.c: 70:     sprintf(timebuf, "    %02d:%02d:%02d", *hours, *minutes, *seconds);
  2125  001274  C116  F100         	movff	time_now@timebuf,sprintf@s
  2126  001278  C117  F101         	movff	time_now@timebuf+1,sprintf@s+1
  2127  00127C  0E01               	movlw	low STR_2
  2128  00127E  0101               	movlb	1	; () banked
  2129  001280  6F02               	movwf	sprintf@fmt& (0+255),b
  2130  001282  0E0E               	movlw	high STR_2
  2131  001284  6F03               	movwf	(sprintf@fmt+1)& (0+255),b
  2132  001286  C11E  FFD9         	movff	time_now@hours,fsr2l
  2133  00128A  C11F  FFDA         	movff	time_now@hours+1,fsr2h
  2134  00128E  CFDE F104          	movff	postinc2,?_sprintf+4
  2135  001292  CFDD F105          	movff	postdec2,?_sprintf+5
  2136  001296  C11C  FFD9         	movff	time_now@minutes,fsr2l
  2137  00129A  C11D  FFDA         	movff	time_now@minutes+1,fsr2h
  2138  00129E  CFDE F106          	movff	postinc2,?_sprintf+6
  2139  0012A2  CFDD F107          	movff	postdec2,?_sprintf+7
  2140  0012A6  C11A  FFD9         	movff	time_now@seconds,fsr2l
  2141  0012AA  C11B  FFDA         	movff	time_now@seconds+1,fsr2h
  2142  0012AE  CFDE F108          	movff	postinc2,?_sprintf+8
  2143  0012B2  CFDD F109          	movff	postdec2,?_sprintf+9
  2144  0012B6  EC4A  F01B         	call	_sprintf	;wreg free
  2145  0012BA                     
  2146                           ;datetime.c: 73:     sprintf(datebuf, " %s %02d/%02d/%04d", daylist[*weekdays], *days + 
      +                          1, *months + 1, *years);
  2147  0012BA  C120  FFD9         	movff	time_now@weekdays,fsr2l
  2148  0012BE  C121  FFDA         	movff	time_now@weekdays+1,fsr2h
  2149  0012C2  CFDE F075          	movff	postinc2,___wmul@multiplier
  2150  0012C6  CFDD F076          	movff	postdec2,___wmul@multiplier+1
  2151  0012CA  0E00               	movlw	0
  2152  0012CC  0100               	movlb	0	; () banked
  2153  0012CE  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2154  0012D0  0E0A               	movlw	10
  2155  0012D2  6F77               	movwf	___wmul@multiplicand& (0+255),b
  2156  0012D4  EC53  F01D         	call	___wmul	;wreg free
  2157  0012D8  0E2A               	movlw	low time_now@daylist
  2158  0012DA  0100               	movlb	0	; () banked
  2159  0012DC  2575               	addwf	?___wmul& (0+255),w,b
  2160  0012DE  0101               	movlb	1	; () banked
  2161  0012E0  6F70               	movwf	_time_now$2116& (0+255),b
  2162  0012E2  0E01               	movlw	high time_now@daylist
  2163  0012E4  0100               	movlb	0	; () banked
  2164  0012E6  2176               	addwfc	(?___wmul+1)& (0+255),w,b
  2165  0012E8  0101               	movlb	1	; () banked
  2166  0012EA  6F71               	movwf	(_time_now$2116+1)& (0+255),b
  2167  0012EC                     
  2168                           ; BSR set to: 1
  2169                           ;datetime.c: 73:     sprintf(datebuf, " %s %02d/%02d/%04d", daylist[*weekdays], *days + 
      +                          1, *months + 1, *years);
  2170  0012EC  C118  F100         	movff	time_now@datebuf,sprintf@s
  2171  0012F0  C119  F101         	movff	time_now@datebuf+1,sprintf@s+1
  2172  0012F4  0E14               	movlw	low STR_3
  2173  0012F6  6F02               	movwf	sprintf@fmt& (0+255),b
  2174  0012F8  0E0E               	movlw	high STR_3
  2175  0012FA  6F03               	movwf	(sprintf@fmt+1)& (0+255),b
  2176  0012FC  C170  F104         	movff	_time_now$2116,?_sprintf+4
  2177  001300  C171  F105         	movff	_time_now$2116+1,?_sprintf+5
  2178  001304  C122  FFD9         	movff	time_now@days,fsr2l
  2179  001308  C123  FFDA         	movff	time_now@days+1,fsr2h
  2180  00130C  CFDE F0D4          	movff	postinc2,??_time_now
  2181  001310  CFDD F0D5          	movff	postdec2,??_time_now+1
  2182  001314  0E01               	movlw	1
  2183  001316  0100               	movlb	0	; () banked
  2184  001318  25D4               	addwf	??_time_now& (0+255),w,b
  2185  00131A  0101               	movlb	1	; () banked
  2186  00131C  6F06               	movwf	(?_sprintf+6)& (0+255),b
  2187  00131E  0E00               	movlw	0
  2188  001320  0100               	movlb	0	; () banked
  2189  001322  21D5               	addwfc	(??_time_now+1)& (0+255),w,b
  2190  001324  0101               	movlb	1	; () banked
  2191  001326  6F07               	movwf	(?_sprintf+7)& (0+255),b
  2192  001328  C124  FFD9         	movff	time_now@months,fsr2l
  2193  00132C  C125  FFDA         	movff	time_now@months+1,fsr2h
  2194  001330  CFDE F0D6          	movff	postinc2,??_time_now+2
  2195  001334  CFDD F0D7          	movff	postdec2,??_time_now+3
  2196  001338  0E01               	movlw	1
  2197  00133A  0100               	movlb	0	; () banked
  2198  00133C  25D6               	addwf	(??_time_now+2)& (0+255),w,b
  2199  00133E  0101               	movlb	1	; () banked
  2200  001340  6F08               	movwf	(?_sprintf+8)& (0+255),b
  2201  001342  0E00               	movlw	0
  2202  001344  0100               	movlb	0	; () banked
  2203  001346  21D7               	addwfc	(??_time_now+3)& (0+255),w,b
  2204  001348  0101               	movlb	1	; () banked
  2205  00134A  6F09               	movwf	(?_sprintf+9)& (0+255),b
  2206  00134C  C126  FFD9         	movff	time_now@years,fsr2l
  2207  001350  C127  FFDA         	movff	time_now@years+1,fsr2h
  2208  001354  CFDE F10A          	movff	postinc2,?_sprintf+10
  2209  001358  CFDD F10B          	movff	postdec2,?_sprintf+11
  2210  00135C  EC4A  F01B         	call	_sprintf	;wreg free
  2211  001360                     
  2212                           ;datetime.c: 79:     return (*hours);
  2213  001360  C11E  FFD9         	movff	time_now@hours,fsr2l
  2214  001364  C11F  FFDA         	movff	time_now@hours+1,fsr2h
  2215  001368  CFDE F116          	movff	postinc2,?_time_now
  2216  00136C  CFDD F117          	movff	postdec2,?_time_now+1
  2217  001370  0012               	return		;funcret
  2218  001372                     __end_of_time_now:
  2219                           	callstack 0
  2220                           
  2221 ;; *************** function _sprintf *****************
  2222 ;; Defined at:
  2223 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;  s               2    0[BANK1 ] PTR unsigned char 
  2226 ;;		 -> main@datebuf(40), main@timebuf(40), 
  2227 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  2228 ;;		 -> STR_3(19), STR_2(19), STR_1(5), 
  2229 ;; Auto vars:     Size  Location     Type
  2230 ;;  f               6   16[BANK1 ] struct _IO_FILE
  2231 ;;  ap              2   14[BANK1 ] PTR void [1]
  2232 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2233 ;;  ret             2    0        int 
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  2    0[BANK1 ] int 
  2236 ;; Registers used:
  2237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2243 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2244 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2246 ;;      Totals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2247 ;;Total ram usage:       22 bytes
  2248 ;; Hardware stack levels used:    1
  2249 ;; Hardware stack levels required when called:   17
  2250 ;; This function calls:
  2251 ;;		_vfprintf
  2252 ;; This function is called by:
  2253 ;;		_time_now
  2254 ;;		_Time2String
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258                           	psect	text2
  2259  003694                     __ptext2:
  2260                           	callstack 0
  2261  003694                     _sprintf:
  2262                           	callstack 12
  2263  003694  0E04               	movlw	low (?_sprintf+4)
  2264  003696  0101               	movlb	1	; () banked
  2265  003698  6F0E               	movwf	sprintf@ap& (0+255),b
  2266  00369A  0E01               	movlw	high (?_sprintf+4)
  2267  00369C  6F0F               	movwf	(sprintf@ap+1)& (0+255),b
  2268  00369E  C100  F110         	movff	sprintf@s,sprintf@f
  2269  0036A2  C101  F111         	movff	sprintf@s+1,sprintf@f+1
  2270  0036A6                     
  2271                           ; BSR set to: 1
  2272  0036A6  0E00               	movlw	0
  2273  0036A8  6F13               	movwf	(sprintf@f+3)& (0+255),b
  2274  0036AA  0E00               	movlw	0
  2275  0036AC  6F12               	movwf	(sprintf@f+2)& (0+255),b
  2276  0036AE                     
  2277                           ; BSR set to: 1
  2278  0036AE  0E00               	movlw	0
  2279  0036B0  6F15               	movwf	(sprintf@f+5)& (0+255),b
  2280  0036B2  0E00               	movlw	0
  2281  0036B4  6F14               	movwf	(sprintf@f+4)& (0+255),b
  2282  0036B6                     
  2283                           ; BSR set to: 1
  2284  0036B6  0E10               	movlw	low sprintf@f
  2285  0036B8  0100               	movlb	0	; () banked
  2286  0036BA  6FCC               	movwf	vfprintf@fp& (0+255),b
  2287  0036BC  0E01               	movlw	high sprintf@f
  2288  0036BE  6FCD               	movwf	(vfprintf@fp+1)& (0+255),b
  2289  0036C0  C102  F0CE         	movff	sprintf@fmt,vfprintf@fmt
  2290  0036C4  C103  F0CF         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2291  0036C8  0E0E               	movlw	low sprintf@ap
  2292  0036CA  6FD0               	movwf	vfprintf@ap& (0+255),b
  2293  0036CC  0E01               	movlw	high sprintf@ap
  2294  0036CE  6FD1               	movwf	(vfprintf@ap+1)& (0+255),b
  2295  0036D0  ECB1  F01A         	call	_vfprintf	;wreg free
  2296  0036D4  0101               	movlb	1	; () banked
  2297  0036D6  5112               	movf	(sprintf@f+2)& (0+255),w,b
  2298  0036D8  2500               	addwf	sprintf@s& (0+255),w,b
  2299  0036DA  6ED9               	movwf	fsr2l,c
  2300  0036DC  5113               	movf	(sprintf@f+3)& (0+255),w,b
  2301  0036DE  2101               	addwfc	(sprintf@s+1)& (0+255),w,b
  2302  0036E0  6EDA               	movwf	fsr2h,c
  2303  0036E2  0E00               	movlw	0
  2304  0036E4  6EDF               	movwf	indf2,c
  2305  0036E6                     
  2306                           ; BSR set to: 1
  2307  0036E6  0012               	return		;funcret
  2308  0036E8                     __end_of_sprintf:
  2309                           	callstack 0
  2310                           
  2311 ;; *************** function _vfprintf *****************
  2312 ;; Defined at:
  2313 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;  fp              2  108[BANK0 ] PTR struct _IO_FILE
  2316 ;;		 -> NULL(0), sprintf@f(6), 
  2317 ;;  fmt             2  110[BANK0 ] PTR const unsigned char 
  2318 ;;		 -> STR_4(6), STR_3(19), STR_2(19), STR_1(5), 
  2319 ;;  ap              2  112[BANK0 ] PTR PTR void 
  2320 ;;		 -> printf@ap(2), sprintf@ap(2), 
  2321 ;; Auto vars:     Size  Location     Type
  2322 ;;  cfmt            2  114[BANK0 ] PTR unsigned char 
  2323 ;;		 -> STR_4(6), STR_3(19), STR_2(19), STR_1(5), 
  2324 ;; Return value:  Size  Location     Type
  2325 ;;                  2  108[BANK0 ] int 
  2326 ;; Registers used:
  2327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2328 ;; Tracked objects:
  2329 ;;		On entry : 0/0
  2330 ;;		On exit  : 0/0
  2331 ;;		Unchanged: 0/0
  2332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2333 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2334 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2336 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2337 ;;Total ram usage:        8 bytes
  2338 ;; Hardware stack levels used:    1
  2339 ;; Hardware stack levels required when called:   16
  2340 ;; This function calls:
  2341 ;;		_vfpfcnvrt
  2342 ;; This function is called by:
  2343 ;;		_sprintf
  2344 ;; This function uses a non-reentrant model
  2345 ;;
  2346                           
  2347                           	psect	text3
  2348  003562                     __ptext3:
  2349                           	callstack 0
  2350  003562                     _vfprintf:
  2351                           	callstack 12
  2352  003562                     
  2353                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2354  003562  C0CE  F0D2         	movff	vfprintf@fmt,vfprintf@cfmt
  2355  003566  C0CF  F0D3         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2356  00356A                     
  2357                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2358  00356A  0E00               	movlw	0
  2359  00356C  0100               	movlb	0	; () banked
  2360  00356E  6FDB               	movwf	(_nout+1)& (0+255),b
  2361  003570  0E00               	movlw	0
  2362  003572  6FDA               	movwf	_nout& (0+255),b
  2363                           
  2364                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2365  003574  EFCF  F01A         	goto	l4556
  2366  003578                     l4554:
  2367                           
  2368                           ; BSR set to: 0
  2369                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2370  003578  C0CC  F0B4         	movff	vfprintf@fp,vfpfcnvrt@fp
  2371  00357C  C0CD  F0B5         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2372  003580  0ED2               	movlw	low vfprintf@cfmt
  2373  003582  6FB6               	movwf	vfpfcnvrt@fmt& (0+255),b
  2374  003584  0E00               	movlw	high vfprintf@cfmt
  2375  003586  6FB7               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2376  003588  C0D0  F0B8         	movff	vfprintf@ap,vfpfcnvrt@ap
  2377  00358C  C0D1  F0B9         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2378  003590  ECC3  F00B         	call	_vfpfcnvrt	;wreg free
  2379  003594  0100               	movlb	0	; () banked
  2380  003596  51B4               	movf	?_vfpfcnvrt& (0+255),w,b
  2381  003598  27DA               	addwf	_nout& (0+255),f,b
  2382  00359A  51B5               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2383  00359C  23DB               	addwfc	(_nout+1)& (0+255),f,b
  2384  00359E                     l4556:
  2385                           
  2386                           ; BSR set to: 0
  2387                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2388  00359E  C0D2  FFF6         	movff	vfprintf@cfmt,tblptrl
  2389  0035A2  C0D3  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2390  0035A6                     	if	0	;tblptru may be non-zero
  2391  0035A6                     	endif
  2392  0035A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2393  0035A6  0E00               	movlw	low (__mediumconst shr (0+16))
  2394  0035A8  6EF8               	movwf	tblptru,c
  2395  0035AA                     	endif
  2396  0035AA  0008               	tblrd		*
  2397  0035AC  50F5               	movf	tablat,w,c
  2398  0035AE  0900               	iorlw	0
  2399  0035B0  A4D8               	btfss	status,2,c
  2400  0035B2  EFDD  F01A         	goto	u5251
  2401  0035B6  EFDF  F01A         	goto	u5250
  2402  0035BA                     u5251:
  2403  0035BA  EFBC  F01A         	goto	l4554
  2404  0035BE                     u5250:
  2405  0035BE                     
  2406                           ; BSR set to: 0
  2407                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2408  0035BE  C0DA  F0CC         	movff	_nout,?_vfprintf
  2409  0035C2  C0DB  F0CD         	movff	_nout+1,?_vfprintf+1
  2410  0035C6                     
  2411                           ; BSR set to: 0
  2412  0035C6  0012               	return		;funcret
  2413  0035C8                     __end_of_vfprintf:
  2414                           	callstack 0
  2415                           
  2416 ;; *************** function _vfpfcnvrt *****************
  2417 ;; Defined at:
  2418 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;  fp              2   84[BANK0 ] PTR struct _IO_FILE
  2421 ;;		 -> NULL(0), sprintf@f(6), 
  2422 ;;  fmt             2   86[BANK0 ] PTR PTR unsigned char 
  2423 ;;		 -> vfprintf@cfmt(2), 
  2424 ;;  ap              2   88[BANK0 ] PTR PTR void 
  2425 ;;		 -> printf@ap(2), sprintf@ap(2), 
  2426 ;; Auto vars:     Size  Location     Type
  2427 ;;  ll              8   94[BANK0 ] long long 
  2428 ;;  llu             8    0        unsigned long long 
  2429 ;;  f               4    0        unsigned long long 
  2430 ;;  vp              3    0        PTR void 
  2431 ;;  ct              3    0        unsigned char [3]
  2432 ;;  done            2  104[BANK0 ] int 
  2433 ;;  cp              2  102[BANK0 ] PTR unsigned char 
  2434 ;;		 -> ?_printf(2), ?_sprintf(2), time_now@daylist(70), 
  2435 ;;  i               2    0        int 
  2436 ;;  c               1    0        unsigned char 
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  2   84[BANK0 ] int 
  2439 ;; Registers used:
  2440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2446 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2447 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2448 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2449 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2450 ;;Total ram usage:       24 bytes
  2451 ;; Hardware stack levels used:    1
  2452 ;; Hardware stack levels required when called:   15
  2453 ;; This function calls:
  2454 ;;		_atoi
  2455 ;;		_dtoa
  2456 ;;		_fputc
  2457 ;;		_isdigit
  2458 ;;		_stoa
  2459 ;; This function is called by:
  2460 ;;		_vfprintf
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464                           	psect	text4
  2465  001786                     __ptext4:
  2466                           	callstack 0
  2467  001786                     _vfpfcnvrt:
  2468                           	callstack 12
  2469  001786                     
  2470                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2471  001786  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2472  00178A  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2473  00178E  CFDE FFF6          	movff	postinc2,tblptrl
  2474  001792  CFDD FFF7          	movff	postdec2,tblptrh
  2475  001796                     	if	0	;tblptru may be non-zero
  2476  001796                     	endif
  2477  001796                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2478  001796  0E00               	movlw	low (__mediumconst shr (0+16))
  2479  001798  6EF8               	movwf	tblptru,c
  2480  00179A                     	endif
  2481  00179A  0008               	tblrd		*
  2482  00179C  50F5               	movf	tablat,w,c
  2483  00179E  0A25               	xorlw	37
  2484  0017A0  A4D8               	btfss	status,2,c
  2485  0017A2  EFD5  F00B         	goto	u4781
  2486  0017A6  EFD7  F00B         	goto	u4780
  2487  0017AA                     u4781:
  2488  0017AA  EFAB  F00D         	goto	l4370
  2489  0017AE                     u4780:
  2490  0017AE                     
  2491                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2492  0017AE  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2493  0017B2  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2494  0017B6  2ADE               	incf	postinc2,f,c
  2495  0017B8  0E00               	movlw	0
  2496  0017BA  22DD               	addwfc	postdec2,f,c
  2497  0017BC                     
  2498                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2499  0017BC  0E00               	movlw	0
  2500  0017BE  0100               	movlb	0	; () banked
  2501  0017C0  6FDD               	movwf	(_width+1)& (0+255),b
  2502  0017C2  0E00               	movlw	0
  2503  0017C4  6FDC               	movwf	_width& (0+255),b
  2504  0017C6  C0DC  F0E0         	movff	_width,_flags
  2505  0017CA  C0DD  F0E1         	movff	_width+1,_flags+1
  2506  0017CE                     
  2507                           ; BSR set to: 0
  2508                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2509  0017CE  69DE               	setf	_prec& (0+255),b
  2510  0017D0  69DF               	setf	(_prec+1)& (0+255),b
  2511  0017D2                     
  2512                           ; BSR set to: 0
  2513                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  2514  0017D2  0E00               	movlw	0
  2515  0017D4  6FC9               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2516  0017D6  0E00               	movlw	0
  2517  0017D8  6FC8               	movwf	vfpfcnvrt@done& (0+255),b
  2518                           
  2519                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2520  0017DA  EF37  F00C         	goto	l4314
  2521  0017DE                     l4288:
  2522                           
  2523                           ; BSR set to: 0
  2524                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  2525  0017DE  81E0               	bsf	_flags& (0+255),0,b
  2526  0017E0                     l4290:
  2527                           
  2528                           ; BSR set to: 0
  2529                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  2530  0017E0  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2531  0017E4  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2532  0017E8  2ADE               	incf	postinc2,f,c
  2533  0017EA  0E00               	movlw	0
  2534  0017EC  22DD               	addwfc	postdec2,f,c
  2535                           
  2536                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  2537  0017EE  EF37  F00C         	goto	l4314
  2538  0017F2                     l4292:
  2539                           
  2540                           ; BSR set to: 0
  2541                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  2542  0017F2  83E0               	bsf	_flags& (0+255),1,b
  2543  0017F4  EFF0  F00B         	goto	l4290
  2544  0017F8                     l4296:
  2545                           
  2546                           ; BSR set to: 0
  2547                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  2548  0017F8  85E0               	bsf	_flags& (0+255),2,b
  2549  0017FA  EFF0  F00B         	goto	l4290
  2550  0017FE                     l4300:
  2551                           
  2552                           ; BSR set to: 0
  2553                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  2554  0017FE  87E0               	bsf	_flags& (0+255),3,b
  2555  001800  EFF0  F00B         	goto	l4290
  2556  001804                     l4304:
  2557                           
  2558                           ; BSR set to: 0
  2559                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  2560  001804  89E0               	bsf	_flags& (0+255),4,b
  2561  001806  EFF0  F00B         	goto	l4290
  2562  00180A                     l4308:
  2563                           
  2564                           ; BSR set to: 0
  2565                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  2566  00180A  0E00               	movlw	0
  2567  00180C  6FC9               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2568  00180E  0E01               	movlw	1
  2569  001810  6FC8               	movwf	vfpfcnvrt@done& (0+255),b
  2570                           
  2571                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  2572  001812  EF37  F00C         	goto	l4314
  2573  001816                     l4312:
  2574                           
  2575                           ; BSR set to: 0
  2576  001816  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2577  00181A  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2578  00181E  CFDE FFF6          	movff	postinc2,tblptrl
  2579  001822  CFDD FFF7          	movff	postdec2,tblptrh
  2580  001826                     	if	0	;tblptru may be non-zero
  2581  001826                     	endif
  2582  001826                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2583  001826  0E00               	movlw	low (__mediumconst shr (0+16))
  2584  001828  6EF8               	movwf	tblptru,c
  2585  00182A                     	endif
  2586  00182A  0008               	tblrd		*
  2587  00182C  50F5               	movf	tablat,w,c
  2588  00182E  6FBA               	movwf	??_vfpfcnvrt& (0+255),b
  2589  001830  6BBB               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2590                           
  2591                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2592                           ; Switch size 1, requested type "simple"
  2593                           ; Number of cases is 1, Range of values is 0 to 0
  2594                           ; switch strategies available:
  2595                           ; Name         Instructions Cycles
  2596                           ; simple_byte            4     3 (average)
  2597                           ;	Chosen strategy is simple_byte
  2598  001832  51BB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2599  001834  0A00               	xorlw	0	; case 0
  2600  001836  B4D8               	btfsc	status,2,c
  2601  001838  EF20  F00C         	goto	l5116
  2602  00183C  EF05  F00C         	goto	l4308
  2603  001840                     l5116:
  2604                           
  2605                           ; BSR set to: 0
  2606                           ; Switch size 1, requested type "simple"
  2607                           ; Number of cases is 5, Range of values is 32 to 48
  2608                           ; switch strategies available:
  2609                           ; Name         Instructions Cycles
  2610                           ; simple_byte           16     9 (average)
  2611                           ;	Chosen strategy is simple_byte
  2612  001840  51BA               	movf	??_vfpfcnvrt& (0+255),w,b
  2613  001842  0A20               	xorlw	32	; case 32
  2614  001844  B4D8               	btfsc	status,2,c
  2615  001846  EFFF  F00B         	goto	l4300
  2616  00184A  0A03               	xorlw	3	; case 35
  2617  00184C  B4D8               	btfsc	status,2,c
  2618  00184E  EF02  F00C         	goto	l4304
  2619  001852  0A08               	xorlw	8	; case 43
  2620  001854  B4D8               	btfsc	status,2,c
  2621  001856  EFFC  F00B         	goto	l4296
  2622  00185A  0A06               	xorlw	6	; case 45
  2623  00185C  B4D8               	btfsc	status,2,c
  2624  00185E  EFEF  F00B         	goto	l4288
  2625  001862  0A1D               	xorlw	29	; case 48
  2626  001864  B4D8               	btfsc	status,2,c
  2627  001866  EFF9  F00B         	goto	l4292
  2628  00186A  EF05  F00C         	goto	l4308
  2629  00186E                     l4314:
  2630                           
  2631                           ; BSR set to: 0
  2632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2633  00186E  51C8               	movf	vfpfcnvrt@done& (0+255),w,b
  2634  001870  11C9               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2635  001872  B4D8               	btfsc	status,2,c
  2636  001874  EF3E  F00C         	goto	u4791
  2637  001878  EF40  F00C         	goto	u4790
  2638  00187C                     u4791:
  2639  00187C  EF0B  F00C         	goto	l4312
  2640  001880                     u4790:
  2641  001880                     
  2642                           ; BSR set to: 0
  2643                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  2644  001880  A1E0               	btfss	_flags& (0+255),0,b
  2645  001882  EF45  F00C         	goto	u4801
  2646  001886  EF47  F00C         	goto	u4800
  2647  00188A                     u4801:
  2648  00188A  EF48  F00C         	goto	l4318
  2649  00188E                     u4800:
  2650  00188E                     
  2651                           ; BSR set to: 0
  2652                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  2653  00188E  93E0               	bcf	_flags& (0+255),1,b
  2654  001890                     l4318:
  2655                           
  2656                           ; BSR set to: 0
  2657                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2658  001890  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2659  001894  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2660  001898  CFDE FFF6          	movff	postinc2,tblptrl
  2661  00189C  CFDD FFF7          	movff	postdec2,tblptrh
  2662  0018A0                     	if	0	;tblptru may be non-zero
  2663  0018A0                     	endif
  2664  0018A0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2665  0018A0  0E00               	movlw	low (__mediumconst shr (0+16))
  2666  0018A2  6EF8               	movwf	tblptru,c
  2667  0018A4                     	endif
  2668  0018A4  0008               	tblrd		*
  2669  0018A6  50F5               	movf	tablat,w,c
  2670  0018A8  0A2A               	xorlw	42
  2671  0018AA  A4D8               	btfss	status,2,c
  2672  0018AC  EF5A  F00C         	goto	u4811
  2673  0018B0  EF5C  F00C         	goto	u4810
  2674  0018B4                     u4811:
  2675  0018B4  EF85  F00C         	goto	l4326
  2676  0018B8                     u4810:
  2677  0018B8                     
  2678                           ; BSR set to: 0
  2679                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2680  0018B8  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2681  0018BC  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2682  0018C0  2ADE               	incf	postinc2,f,c
  2683  0018C2  0E00               	movlw	0
  2684  0018C4  22DD               	addwfc	postdec2,f,c
  2685                           
  2686                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2687  0018C6  C0B8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2688  0018CA  C0B9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2689  0018CE  CFDF F0BA          	movff	indf2,??_vfpfcnvrt
  2690  0018D2  0E02               	movlw	2
  2691  0018D4  26DE               	addwf	postinc2,f,c
  2692  0018D6  CFDF F0BB          	movff	indf2,??_vfpfcnvrt+1
  2693  0018DA  0E00               	movlw	0
  2694  0018DC  22DD               	addwfc	postdec2,f,c
  2695  0018DE  C0BA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2696  0018E2  C0BB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2697  0018E6  CFDE F0DC          	movff	postinc2,_width
  2698  0018EA  CFDD F0DD          	movff	postdec2,_width+1
  2699  0018EE                     
  2700                           ; BSR set to: 0
  2701                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2702  0018EE  BFDD               	btfsc	(_width+1)& (0+255),7,b
  2703  0018F0  EF7E  F00C         	goto	u4820
  2704  0018F4  EF7C  F00C         	goto	u4821
  2705  0018F8                     u4821:
  2706  0018F8  EFCB  F00C         	goto	l4336
  2707  0018FC                     u4820:
  2708  0018FC                     
  2709                           ; BSR set to: 0
  2710                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2711  0018FC  81E0               	bsf	_flags& (0+255),0,b
  2712                           
  2713                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2714  0018FE  6DDC               	negf	_width& (0+255),b
  2715  001900  1FDD               	comf	(_width+1)& (0+255),f,b
  2716  001902  B0D8               	btfsc	status,0,c
  2717  001904  2BDD               	incf	(_width+1)& (0+255),f,b
  2718  001906  EFCB  F00C         	goto	l4336
  2719  00190A                     l4326:
  2720                           
  2721                           ; BSR set to: 0
  2722                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2723  00190A  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2724  00190E  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2725  001912  CFDE F07C          	movff	postinc2,atoi@s
  2726  001916  CFDD F07D          	movff	postdec2,atoi@s+1
  2727  00191A  EC8C  F011         	call	_atoi	;wreg free
  2728  00191E  C07C  F0DC         	movff	?_atoi,_width
  2729  001922  C07D  F0DD         	movff	?_atoi+1,_width+1
  2730                           
  2731                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2732  001926  EF9C  F00C         	goto	l4330
  2733  00192A                     l4328:
  2734                           
  2735                           ; BSR set to: 0
  2736                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2737  00192A  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2738  00192E  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2739  001932  2ADE               	incf	postinc2,f,c
  2740  001934  0E00               	movlw	0
  2741  001936  22DD               	addwfc	postdec2,f,c
  2742  001938                     l4330:
  2743  001938  0ED0               	movlw	208
  2744  00193A  0100               	movlb	0	; () banked
  2745  00193C  6FBA               	movwf	??_vfpfcnvrt& (0+255),b
  2746  00193E  0EFF               	movlw	255
  2747  001940  6FBB               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2748  001942  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2749  001946  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2750  00194A  CFDE FFF6          	movff	postinc2,tblptrl
  2751  00194E  CFDD FFF7          	movff	postdec2,tblptrh
  2752  001952                     	if	0	;tblptru may be non-zero
  2753  001952                     	endif
  2754  001952                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2755  001952  0E00               	movlw	low (__mediumconst shr (0+16))
  2756  001954  6EF8               	movwf	tblptru,c
  2757  001956                     	endif
  2758  001956  0008               	tblrd		*
  2759  001958  50F5               	movf	tablat,w,c
  2760  00195A  6FBC               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2761  00195C  6BBD               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2762  00195E  51BA               	movf	??_vfpfcnvrt& (0+255),w,b
  2763  001960  27BC               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2764  001962  51BB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2765  001964  23BD               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2766  001966  51BD               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2767  001968  E10A               	bnz	u4830
  2768  00196A  0E0A               	movlw	10
  2769  00196C  5DBC               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2770  00196E  A0D8               	btfss	status,0,c
  2771  001970  EFBC  F00C         	goto	u4831
  2772  001974  EFBF  F00C         	goto	u4830
  2773  001978                     u4831:
  2774  001978  0E01               	movlw	1
  2775  00197A  EFC0  F00C         	goto	u4840
  2776  00197E                     u4830:
  2777  00197E  0E00               	movlw	0
  2778  001980                     u4840:
  2779  001980  6FCA               	movwf	_vfpfcnvrt$1810& (0+255),b
  2780  001982  6BCB               	clrf	(_vfpfcnvrt$1810+1)& (0+255),b
  2781  001984                     
  2782                           ; BSR set to: 0
  2783  001984  51CA               	movf	_vfpfcnvrt$1810& (0+255),w,b
  2784  001986  11CB               	iorwf	(_vfpfcnvrt$1810+1)& (0+255),w,b
  2785  001988  A4D8               	btfss	status,2,c
  2786  00198A  EFC9  F00C         	goto	u4851
  2787  00198E  EFCB  F00C         	goto	u4850
  2788  001992                     u4851:
  2789  001992  EF95  F00C         	goto	l4328
  2790  001996                     u4850:
  2791  001996                     l4336:
  2792                           
  2793                           ; BSR set to: 0
  2794                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2795  001996  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2796  00199A  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2797  00199E  CFDE FFF6          	movff	postinc2,tblptrl
  2798  0019A2  CFDD FFF7          	movff	postdec2,tblptrh
  2799  0019A6                     	if	0	;tblptru may be non-zero
  2800  0019A6                     	endif
  2801  0019A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2802  0019A6  0E00               	movlw	low (__mediumconst shr (0+16))
  2803  0019A8  6EF8               	movwf	tblptru,c
  2804  0019AA                     	endif
  2805  0019AA  0008               	tblrd		*
  2806  0019AC  50F5               	movf	tablat,w,c
  2807  0019AE  0A64               	xorlw	100
  2808  0019B0  B4D8               	btfsc	status,2,c
  2809  0019B2  EFDD  F00C         	goto	u4861
  2810  0019B6  EFDF  F00C         	goto	u4860
  2811  0019BA                     u4861:
  2812  0019BA  EFF3  F00C         	goto	l4340
  2813  0019BE                     u4860:
  2814  0019BE                     
  2815                           ; BSR set to: 0
  2816  0019BE  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2817  0019C2  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2818  0019C6  CFDE FFF6          	movff	postinc2,tblptrl
  2819  0019CA  CFDD FFF7          	movff	postdec2,tblptrh
  2820  0019CE                     	if	0	;tblptru may be non-zero
  2821  0019CE                     	endif
  2822  0019CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2823  0019CE  0E00               	movlw	low (__mediumconst shr (0+16))
  2824  0019D0  6EF8               	movwf	tblptru,c
  2825  0019D2                     	endif
  2826  0019D2  0008               	tblrd		*
  2827  0019D4  50F5               	movf	tablat,w,c
  2828  0019D6  0A69               	xorlw	105
  2829  0019D8  A4D8               	btfss	status,2,c
  2830  0019DA  EFF1  F00C         	goto	u4871
  2831  0019DE  EFF3  F00C         	goto	u4870
  2832  0019E2                     u4871:
  2833  0019E2  EF33  F00D         	goto	l4346
  2834  0019E6                     u4870:
  2835  0019E6                     l4340:
  2836                           
  2837                           ; BSR set to: 0
  2838                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2839  0019E6  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2840  0019EA  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2841  0019EE  2ADE               	incf	postinc2,f,c
  2842  0019F0  0E00               	movlw	0
  2843  0019F2  22DD               	addwfc	postdec2,f,c
  2844                           
  2845                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2846  0019F4  C0B8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2847  0019F8  C0B9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2848  0019FC  CFDF F0BA          	movff	indf2,??_vfpfcnvrt
  2849  001A00  0E02               	movlw	2
  2850  001A02  26DE               	addwf	postinc2,f,c
  2851  001A04  CFDF F0BB          	movff	indf2,??_vfpfcnvrt+1
  2852  001A08  0E00               	movlw	0
  2853  001A0A  22DD               	addwfc	postdec2,f,c
  2854  001A0C  C0BA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2855  001A10  C0BB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2856  001A14  CFDE F0BE          	movff	postinc2,vfpfcnvrt@ll
  2857  001A18  CFDD F0BF          	movff	postdec2,vfpfcnvrt@ll+1
  2858  001A1C  0E00               	movlw	0
  2859  001A1E  BFBF               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2860  001A20  0EFF               	movlw	-1
  2861  001A22  6FC0               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2862  001A24  6FC1               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2863  001A26  6FC2               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2864  001A28  6FC3               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2865  001A2A  6FC4               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2866  001A2C  6FC5               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2867  001A2E                     
  2868                           ; BSR set to: 0
  2869                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2870  001A2E  C0B4  F090         	movff	vfpfcnvrt@fp,dtoa@fp
  2871  001A32  C0B5  F091         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2872  001A36  C0BE  F092         	movff	vfpfcnvrt@ll,dtoa@d
  2873  001A3A  C0BF  F093         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2874  001A3E  C0C0  F094         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2875  001A42  C0C1  F095         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2876  001A46  C0C2  F096         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2877  001A4A  C0C3  F097         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2878  001A4E  C0C4  F098         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2879  001A52  C0C5  F099         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2880  001A56  ECCA  F00D         	call	_dtoa	;wreg free
  2881  001A5A  C090  F0B4         	movff	?_dtoa,?_vfpfcnvrt
  2882  001A5E  C091  F0B5         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2883  001A62  EFC9  F00D         	goto	l1034
  2884  001A66                     l4346:
  2885                           
  2886                           ; BSR set to: 0
  2887                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1171:         if 
      +                          (*fmt[0] == 's') {
  2888  001A66  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2889  001A6A  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2890  001A6E  CFDE FFF6          	movff	postinc2,tblptrl
  2891  001A72  CFDD FFF7          	movff	postdec2,tblptrh
  2892  001A76                     	if	0	;tblptru may be non-zero
  2893  001A76                     	endif
  2894  001A76                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2895  001A76  0E00               	movlw	low (__mediumconst shr (0+16))
  2896  001A78  6EF8               	movwf	tblptru,c
  2897  001A7A                     	endif
  2898  001A7A  0008               	tblrd		*
  2899  001A7C  50F5               	movf	tablat,w,c
  2900  001A7E  0A73               	xorlw	115
  2901  001A80  A4D8               	btfss	status,2,c
  2902  001A82  EF45  F00D         	goto	u4881
  2903  001A86  EF47  F00D         	goto	u4880
  2904  001A8A                     u4881:
  2905  001A8A  EF72  F00D         	goto	l4354
  2906  001A8E                     u4880:
  2907  001A8E                     
  2908                           ; BSR set to: 0
  2909                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1173:            
      +                           ++*fmt;
  2910  001A8E  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2911  001A92  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2912  001A96  2ADE               	incf	postinc2,f,c
  2913  001A98  0E00               	movlw	0
  2914  001A9A  22DD               	addwfc	postdec2,f,c
  2915                           
  2916                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1174:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  2917  001A9C  C0B8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2918  001AA0  C0B9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2919  001AA4  CFDF F0BA          	movff	indf2,??_vfpfcnvrt
  2920  001AA8  0E02               	movlw	2
  2921  001AAA  26DE               	addwf	postinc2,f,c
  2922  001AAC  CFDF F0BB          	movff	indf2,??_vfpfcnvrt+1
  2923  001AB0  0E00               	movlw	0
  2924  001AB2  22DD               	addwfc	postdec2,f,c
  2925  001AB4  C0BA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2926  001AB8  C0BB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2927  001ABC  CFDE F0C6          	movff	postinc2,vfpfcnvrt@cp
  2928  001AC0  CFDD F0C7          	movff	postdec2,vfpfcnvrt@cp+1
  2929  001AC4                     
  2930                           ; BSR set to: 0
  2931                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1176:            
      +                           return stoa(fp, cp);
  2932  001AC4  C0B4  F07E         	movff	vfpfcnvrt@fp,stoa@fp
  2933  001AC8  C0B5  F07F         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  2934  001ACC  C0C6  F080         	movff	vfpfcnvrt@cp,stoa@s
  2935  001AD0  C0C7  F081         	movff	vfpfcnvrt@cp+1,stoa@s+1
  2936  001AD4  EC32  F013         	call	_stoa	;wreg free
  2937  001AD8  C07E  F0B4         	movff	?_stoa,?_vfpfcnvrt
  2938  001ADC  C07F  F0B5         	movff	?_stoa+1,?_vfpfcnvrt+1
  2939  001AE0  EFC9  F00D         	goto	l1034
  2940  001AE4                     l4354:
  2941                           
  2942                           ; BSR set to: 0
  2943                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2944  001AE4  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2945  001AE8  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2946  001AEC  CFDE FFF6          	movff	postinc2,tblptrl
  2947  001AF0  CFDD FFF7          	movff	postdec2,tblptrh
  2948  001AF4                     	if	0	;tblptru may be non-zero
  2949  001AF4                     	endif
  2950  001AF4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2951  001AF4  0E00               	movlw	low (__mediumconst shr (0+16))
  2952  001AF6  6EF8               	movwf	tblptru,c
  2953  001AF8                     	endif
  2954  001AF8  0008               	tblrd		*
  2955  001AFA  50F5               	movf	tablat,w,c
  2956  001AFC  0A25               	xorlw	37
  2957  001AFE  A4D8               	btfss	status,2,c
  2958  001B00  EF84  F00D         	goto	u4891
  2959  001B04  EF86  F00D         	goto	u4890
  2960  001B08                     u4891:
  2961  001B08  EF9E  F00D         	goto	l4364
  2962  001B0C                     u4890:
  2963  001B0C                     
  2964                           ; BSR set to: 0
  2965                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2966  001B0C  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2967  001B10  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2968  001B14  2ADE               	incf	postinc2,f,c
  2969  001B16  0E00               	movlw	0
  2970  001B18  22DD               	addwfc	postdec2,f,c
  2971  001B1A                     
  2972                           ; BSR set to: 0
  2973                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2974  001B1A  0E00               	movlw	0
  2975  001B1C  6F76               	movwf	(fputc@c+1)& (0+255),b
  2976  001B1E  0E25               	movlw	37
  2977  001B20  6F75               	movwf	fputc@c& (0+255),b
  2978  001B22  C0B4  F077         	movff	vfpfcnvrt@fp,fputc@fp
  2979  001B26  C0B5  F078         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2980  001B2A  ECA9  F017         	call	_fputc	;wreg free
  2981  001B2E                     l4360:
  2982                           
  2983                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2984  001B2E  0E00               	movlw	0
  2985  001B30  0100               	movlb	0	; () banked
  2986  001B32  6FB5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2987  001B34  0E01               	movlw	1
  2988  001B36  6FB4               	movwf	?_vfpfcnvrt& (0+255),b
  2989  001B38  EFC9  F00D         	goto	l1034
  2990  001B3C                     l4364:
  2991                           
  2992                           ; BSR set to: 0
  2993                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2994  001B3C  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2995  001B40  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2996  001B44  2ADE               	incf	postinc2,f,c
  2997  001B46  0E00               	movlw	0
  2998  001B48  22DD               	addwfc	postdec2,f,c
  2999  001B4A                     
  3000                           ; BSR set to: 0
  3001                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3002  001B4A  0E00               	movlw	0
  3003  001B4C  6FB5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3004  001B4E  0E00               	movlw	0
  3005  001B50  6FB4               	movwf	?_vfpfcnvrt& (0+255),b
  3006  001B52  EFC9  F00D         	goto	l1034
  3007  001B56                     l4370:
  3008                           
  3009                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3010  001B56  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3011  001B5A  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3012  001B5E  CFDE FFF6          	movff	postinc2,tblptrl
  3013  001B62  CFDD FFF7          	movff	postdec2,tblptrh
  3014  001B66                     	if	0	;tblptru may be non-zero
  3015  001B66                     	endif
  3016  001B66                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3017  001B66  0E00               	movlw	low (__mediumconst shr (0+16))
  3018  001B68  6EF8               	movwf	tblptru,c
  3019  001B6A                     	endif
  3020  001B6A  0008               	tblrd		*
  3021  001B6C  50F5               	movf	tablat,w,c
  3022  001B6E  0100               	movlb	0	; () banked
  3023  001B70  6F75               	movwf	fputc@c& (0+255),b
  3024  001B72  6B76               	clrf	(fputc@c+1)& (0+255),b
  3025  001B74  C0B4  F077         	movff	vfpfcnvrt@fp,fputc@fp
  3026  001B78  C0B5  F078         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3027  001B7C  ECA9  F017         	call	_fputc	;wreg free
  3028  001B80                     
  3029                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3030  001B80  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3031  001B84  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3032  001B88  2ADE               	incf	postinc2,f,c
  3033  001B8A  0E00               	movlw	0
  3034  001B8C  22DD               	addwfc	postdec2,f,c
  3035  001B8E  EF97  F00D         	goto	l4360
  3036  001B92                     l1034:
  3037  001B92  0012               	return		;funcret
  3038  001B94                     __end_of_vfpfcnvrt:
  3039                           	callstack 0
  3040                           
  3041 ;; *************** function _stoa *****************
  3042 ;; Defined at:
  3043 ;;		line 568 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;  fp              2   30[BANK0 ] PTR struct _IO_FILE
  3046 ;;		 -> NULL(0), sprintf@f(6), 
  3047 ;;  s               2   32[BANK0 ] PTR unsigned char 
  3048 ;;		 -> ?_printf(2), ?_sprintf(2), time_now@daylist(70), 
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;  nuls            7   35[BANK0 ] unsigned char [7]
  3051 ;;  l               2   50[BANK0 ] int 
  3052 ;;  p               2   48[BANK0 ] int 
  3053 ;;  cp              2   46[BANK0 ] PTR unsigned char 
  3054 ;;		 -> ?_printf(2), stoa@nuls(7), ?_sprintf(2), time_now@daylist(70), 
  3055 ;;  w               2   44[BANK0 ] int 
  3056 ;;  i               2   42[BANK0 ] int 
  3057 ;; Return value:  Size  Location     Type
  3058 ;;                  2   30[BANK0 ] int 
  3059 ;; Registers used:
  3060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3066 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3067 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3068 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3069 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3070 ;;Total ram usage:       22 bytes
  3071 ;; Hardware stack levels used:    1
  3072 ;; Hardware stack levels required when called:   12
  3073 ;; This function calls:
  3074 ;;		_fputc
  3075 ;;		_strlen
  3076 ;; This function is called by:
  3077 ;;		_vfpfcnvrt
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           	psect	text5
  3082  002664                     __ptext5:
  3083                           	callstack 0
  3084  002664                     _stoa:
  3085                           	callstack 14
  3086  002664                     
  3087                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 568: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 569: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 570:  
      +                             char *cp, nuls[] = "(null)";
  3088  002664  EE20  F0E3         	lfsr	2,stoa@F1141
  3089  002668  EE10  F083         	lfsr	1,stoa@nuls
  3090  00266C  0E06               	movlw	6
  3091  00266E                     u4401:
  3092  00266E  CFDB FFE3          	movff	plusw2,plusw1
  3093  002672  06E8               	decf	wreg,f,c
  3094  002674  E2FC               	bc	u4401
  3095  002676                     
  3096                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 571:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 574:     c
      +                          p = s;
  3097  002676  C080  F08E         	movff	stoa@s,stoa@cp
  3098  00267A  C081  F08F         	movff	stoa@s+1,stoa@cp+1
  3099  00267E                     
  3100                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 575:     if (!cp)
      +                           {
  3101  00267E  0100               	movlb	0	; () banked
  3102  002680  518E               	movf	stoa@cp& (0+255),w,b
  3103  002682  118F               	iorwf	(stoa@cp+1)& (0+255),w,b
  3104  002684  A4D8               	btfss	status,2,c
  3105  002686  EF47  F013         	goto	u4411
  3106  00268A  EF49  F013         	goto	u4410
  3107  00268E                     u4411:
  3108  00268E  EF4D  F013         	goto	l4068
  3109  002692                     u4410:
  3110  002692                     
  3111                           ; BSR set to: 0
  3112                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 576:         cp =
      +                           nuls;
  3113  002692  0E83               	movlw	low stoa@nuls
  3114  002694  6F8E               	movwf	stoa@cp& (0+255),b
  3115  002696  0E00               	movlw	high stoa@nuls
  3116  002698  6F8F               	movwf	(stoa@cp+1)& (0+255),b
  3117  00269A                     l4068:
  3118                           
  3119                           ; BSR set to: 0
  3120                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 580:     l = (int
      +                          )strlen(cp);
  3121  00269A  C08E  F075         	movff	stoa@cp,strlen@s
  3122  00269E  C08F  F076         	movff	stoa@cp+1,strlen@s+1
  3123  0026A2  ECAF  F01C         	call	_strlen	;wreg free
  3124  0026A6  C075  F092         	movff	?_strlen,stoa@l
  3125  0026AA  C076  F093         	movff	?_strlen+1,stoa@l+1
  3126  0026AE                     
  3127                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 581:     p = prec
      +                          ;
  3128  0026AE  C0DE  F090         	movff	_prec,stoa@p
  3129  0026B2  C0DF  F091         	movff	_prec+1,stoa@p+1
  3130  0026B6                     
  3131                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 582:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  3132  0026B6  0100               	movlb	0	; () banked
  3133  0026B8  BF91               	btfsc	(stoa@p+1)& (0+255),7,b
  3134  0026BA  EF61  F013         	goto	u4421
  3135  0026BE  EF63  F013         	goto	u4420
  3136  0026C2                     u4421:
  3137  0026C2  EF78  F013         	goto	l991
  3138  0026C6                     u4420:
  3139  0026C6                     
  3140                           ; BSR set to: 0
  3141  0026C6  5192               	movf	stoa@l& (0+255),w,b
  3142  0026C8  5D90               	subwf	stoa@p& (0+255),w,b
  3143  0026CA  5191               	movf	(stoa@p+1)& (0+255),w,b
  3144  0026CC  0A80               	xorlw	128
  3145  0026CE  6F82               	movwf	??_stoa& (0+255),b
  3146  0026D0  5193               	movf	(stoa@l+1)& (0+255),w,b
  3147  0026D2  0A80               	xorlw	128
  3148  0026D4  5982               	subwfb	??_stoa& (0+255),w,b
  3149  0026D6  A0D8               	btfss	status,0,c
  3150  0026D8  EF70  F013         	goto	u4431
  3151  0026DC  EF72  F013         	goto	u4430
  3152  0026E0                     u4431:
  3153  0026E0  EF74  F013         	goto	l989
  3154  0026E4                     u4430:
  3155  0026E4  EF78  F013         	goto	l991
  3156  0026E8                     l989:
  3157                           
  3158                           ; BSR set to: 0
  3159  0026E8  C090  F092         	movff	stoa@p,stoa@l
  3160  0026EC  C091  F093         	movff	stoa@p+1,stoa@l+1
  3161  0026F0                     l991:
  3162                           
  3163                           ; BSR set to: 0
  3164                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 583:     p = l;
  3165  0026F0  C092  F090         	movff	stoa@l,stoa@p
  3166  0026F4  C093  F091         	movff	stoa@l+1,stoa@p+1
  3167                           
  3168                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 584:     w = widt
      +                          h;
  3169  0026F8  C0DC  F08C         	movff	_width,stoa@w
  3170  0026FC  C0DD  F08D         	movff	_width+1,stoa@w+1
  3171                           
  3172                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 587:     if (!(fl
      +                          ags & (1 << 0))) {
  3173  002700  B1E0               	btfsc	_flags& (0+255),0,b
  3174  002702  EF85  F013         	goto	u4441
  3175  002706  EF87  F013         	goto	u4440
  3176  00270A                     u4441:
  3177  00270A  EFA5  F013         	goto	l4084
  3178  00270E                     u4440:
  3179  00270E  EF96  F013         	goto	l4082
  3180  002712                     l4078:
  3181                           
  3182                           ; BSR set to: 0
  3183                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 589:             
      +                          fputc(' ', fp);
  3184  002712  0E00               	movlw	0
  3185  002714  6F76               	movwf	(fputc@c+1)& (0+255),b
  3186  002716  0E20               	movlw	32
  3187  002718  6F75               	movwf	fputc@c& (0+255),b
  3188  00271A  C07E  F077         	movff	stoa@fp,fputc@fp
  3189  00271E  C07F  F078         	movff	stoa@fp+1,fputc@fp+1
  3190  002722  ECA9  F017         	call	_fputc	;wreg free
  3191  002726                     
  3192                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 590:             
      +                          ++l;
  3193  002726  0100               	movlb	0	; () banked
  3194  002728  4B92               	infsnz	stoa@l& (0+255),f,b
  3195  00272A  2B93               	incf	(stoa@l+1)& (0+255),f,b
  3196  00272C                     l4082:
  3197                           
  3198                           ; BSR set to: 0
  3199                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 588:         whil
      +                          e (l < w) {
  3200  00272C  518C               	movf	stoa@w& (0+255),w,b
  3201  00272E  5D92               	subwf	stoa@l& (0+255),w,b
  3202  002730  5193               	movf	(stoa@l+1)& (0+255),w,b
  3203  002732  0A80               	xorlw	128
  3204  002734  6F82               	movwf	??_stoa& (0+255),b
  3205  002736  518D               	movf	(stoa@w+1)& (0+255),w,b
  3206  002738  0A80               	xorlw	128
  3207  00273A  5982               	subwfb	??_stoa& (0+255),w,b
  3208  00273C  A0D8               	btfss	status,0,c
  3209  00273E  EFA3  F013         	goto	u4451
  3210  002742  EFA5  F013         	goto	u4450
  3211  002746                     u4451:
  3212  002746  EF89  F013         	goto	l4078
  3213  00274A                     u4450:
  3214  00274A                     l4084:
  3215                           
  3216                           ; BSR set to: 0
  3217                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 595:     i = 0;
  3218  00274A  0E00               	movlw	0
  3219  00274C  6F8B               	movwf	(stoa@i+1)& (0+255),b
  3220  00274E  0E00               	movlw	0
  3221  002750  6F8A               	movwf	stoa@i& (0+255),b
  3222                           
  3223                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  3224  002752  EFBF  F013         	goto	l4092
  3225  002756                     l4086:
  3226                           
  3227                           ; BSR set to: 0
  3228                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 597:         fput
      +                          c(*cp, fp);
  3229  002756  C08E  FFD9         	movff	stoa@cp,fsr2l
  3230  00275A  C08F  FFDA         	movff	stoa@cp+1,fsr2h
  3231  00275E  50DF               	movf	indf2,w,c
  3232  002760  6F82               	movwf	??_stoa& (0+255),b
  3233  002762  5182               	movf	??_stoa& (0+255),w,b
  3234  002764  6F75               	movwf	fputc@c& (0+255),b
  3235  002766  6B76               	clrf	(fputc@c+1)& (0+255),b
  3236  002768  C07E  F077         	movff	stoa@fp,fputc@fp
  3237  00276C  C07F  F078         	movff	stoa@fp+1,fputc@fp+1
  3238  002770  ECA9  F017         	call	_fputc	;wreg free
  3239  002774                     
  3240                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 598:         ++cp
      +                          ;
  3241  002774  0100               	movlb	0	; () banked
  3242  002776  4B8E               	infsnz	stoa@cp& (0+255),f,b
  3243  002778  2B8F               	incf	(stoa@cp+1)& (0+255),f,b
  3244  00277A                     
  3245                           ; BSR set to: 0
  3246                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 599:         ++i;
  3247  00277A  4B8A               	infsnz	stoa@i& (0+255),f,b
  3248  00277C  2B8B               	incf	(stoa@i+1)& (0+255),f,b
  3249  00277E                     l4092:
  3250                           
  3251                           ; BSR set to: 0
  3252                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  3253  00277E  5190               	movf	stoa@p& (0+255),w,b
  3254  002780  5D8A               	subwf	stoa@i& (0+255),w,b
  3255  002782  518B               	movf	(stoa@i+1)& (0+255),w,b
  3256  002784  0A80               	xorlw	128
  3257  002786  6F82               	movwf	??_stoa& (0+255),b
  3258  002788  5191               	movf	(stoa@p+1)& (0+255),w,b
  3259  00278A  0A80               	xorlw	128
  3260  00278C  5982               	subwfb	??_stoa& (0+255),w,b
  3261  00278E  A0D8               	btfss	status,0,c
  3262  002790  EFCC  F013         	goto	u4461
  3263  002794  EFCE  F013         	goto	u4460
  3264  002798                     u4461:
  3265  002798  EFAB  F013         	goto	l4086
  3266  00279C                     u4460:
  3267  00279C                     
  3268                           ; BSR set to: 0
  3269                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 603:     if (flag
      +                          s & (1 << 0)) {
  3270  00279C  A1E0               	btfss	_flags& (0+255),0,b
  3271  00279E  EFD3  F013         	goto	u4471
  3272  0027A2  EFD5  F013         	goto	u4470
  3273  0027A6                     u4471:
  3274  0027A6  EFF3  F013         	goto	l1001
  3275  0027AA                     u4470:
  3276  0027AA  EFE4  F013         	goto	l4100
  3277  0027AE                     l4096:
  3278                           
  3279                           ; BSR set to: 0
  3280                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 605:             
      +                          fputc(' ', fp);
  3281  0027AE  0E00               	movlw	0
  3282  0027B0  6F76               	movwf	(fputc@c+1)& (0+255),b
  3283  0027B2  0E20               	movlw	32
  3284  0027B4  6F75               	movwf	fputc@c& (0+255),b
  3285  0027B6  C07E  F077         	movff	stoa@fp,fputc@fp
  3286  0027BA  C07F  F078         	movff	stoa@fp+1,fputc@fp+1
  3287  0027BE  ECA9  F017         	call	_fputc	;wreg free
  3288  0027C2                     
  3289                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 606:             
      +                          ++l;
  3290  0027C2  0100               	movlb	0	; () banked
  3291  0027C4  4B92               	infsnz	stoa@l& (0+255),f,b
  3292  0027C6  2B93               	incf	(stoa@l+1)& (0+255),f,b
  3293  0027C8                     l4100:
  3294                           
  3295                           ; BSR set to: 0
  3296                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 604:         whil
      +                          e (l < w) {
  3297  0027C8  518C               	movf	stoa@w& (0+255),w,b
  3298  0027CA  5D92               	subwf	stoa@l& (0+255),w,b
  3299  0027CC  5193               	movf	(stoa@l+1)& (0+255),w,b
  3300  0027CE  0A80               	xorlw	128
  3301  0027D0  6F82               	movwf	??_stoa& (0+255),b
  3302  0027D2  518D               	movf	(stoa@w+1)& (0+255),w,b
  3303  0027D4  0A80               	xorlw	128
  3304  0027D6  5982               	subwfb	??_stoa& (0+255),w,b
  3305  0027D8  A0D8               	btfss	status,0,c
  3306  0027DA  EFF1  F013         	goto	u4481
  3307  0027DE  EFF3  F013         	goto	u4480
  3308  0027E2                     u4481:
  3309  0027E2  EFD7  F013         	goto	l4096
  3310  0027E6                     u4480:
  3311  0027E6                     l1001:
  3312                           
  3313                           ; BSR set to: 0
  3314                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 610:     return l
      +                          ;
  3315  0027E6  C092  F07E         	movff	stoa@l,?_stoa
  3316  0027EA  C093  F07F         	movff	stoa@l+1,?_stoa+1
  3317  0027EE                     
  3318                           ; BSR set to: 0
  3319  0027EE  0012               	return		;funcret
  3320  0027F0                     __end_of_stoa:
  3321                           	callstack 0
  3322                           
  3323 ;; *************** function _dtoa *****************
  3324 ;; Defined at:
  3325 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;  fp              2   48[BANK0 ] PTR struct _IO_FILE
  3328 ;;		 -> NULL(0), sprintf@f(6), 
  3329 ;;  d               8   50[BANK0 ] long long 
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;  n               8   74[BANK0 ] long long 
  3332 ;;  i               2   82[BANK0 ] int 
  3333 ;;  s               2   72[BANK0 ] int 
  3334 ;;  w               2   70[BANK0 ] int 
  3335 ;;  p               2   68[BANK0 ] int 
  3336 ;; Return value:  Size  Location     Type
  3337 ;;                  2   48[BANK0 ] int 
  3338 ;; Registers used:
  3339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3340 ;; Tracked objects:
  3341 ;;		On entry : 0/0
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3345 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3346 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3347 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3348 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3349 ;;Total ram usage:       36 bytes
  3350 ;; Hardware stack levels used:    1
  3351 ;; Hardware stack levels required when called:   14
  3352 ;; This function calls:
  3353 ;;		___aodiv
  3354 ;;		___aomod
  3355 ;;		_abs
  3356 ;;		_pad
  3357 ;; This function is called by:
  3358 ;;		_vfpfcnvrt
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362                           	psect	text6
  3363  001B94                     __ptext6:
  3364                           	callstack 0
  3365  001B94                     _dtoa:
  3366                           	callstack 12
  3367  001B94                     
  3368                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  3369  001B94  C092  F0AA         	movff	dtoa@d,dtoa@n
  3370  001B98  C093  F0AB         	movff	dtoa@d+1,dtoa@n+1
  3371  001B9C  C094  F0AC         	movff	dtoa@d+2,dtoa@n+2
  3372  001BA0  C095  F0AD         	movff	dtoa@d+3,dtoa@n+3
  3373  001BA4  C096  F0AE         	movff	dtoa@d+4,dtoa@n+4
  3374  001BA8  C097  F0AF         	movff	dtoa@d+5,dtoa@n+5
  3375  001BAC  C098  F0B0         	movff	dtoa@d+6,dtoa@n+6
  3376  001BB0  C099  F0B1         	movff	dtoa@d+7,dtoa@n+7
  3377  001BB4                     
  3378                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  3379  001BB4  0100               	movlb	0	; () banked
  3380  001BB6  BFB1               	btfsc	(dtoa@n+7)& (0+255),7,b
  3381  001BB8  EFE0  F00D         	goto	u4251
  3382  001BBC  EFE3  F00D         	goto	u4250
  3383  001BC0                     u4251:
  3384  001BC0  0E01               	movlw	1
  3385  001BC2  EFE4  F00D         	goto	u4260
  3386  001BC6                     u4250:
  3387  001BC6  0E00               	movlw	0
  3388  001BC8                     u4260:
  3389  001BC8  6FA8               	movwf	dtoa@s& (0+255),b
  3390  001BCA  6BA9               	clrf	(dtoa@s+1)& (0+255),b
  3391                           
  3392                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  3393  001BCC  51A8               	movf	dtoa@s& (0+255),w,b
  3394  001BCE  11A9               	iorwf	(dtoa@s+1)& (0+255),w,b
  3395  001BD0  B4D8               	btfsc	status,2,c
  3396  001BD2  EFED  F00D         	goto	u4271
  3397  001BD6  EFEF  F00D         	goto	u4270
  3398  001BDA                     u4271:
  3399  001BDA  EFFF  F00D         	goto	l4004
  3400  001BDE                     u4270:
  3401  001BDE                     
  3402                           ; BSR set to: 0
  3403                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  3404  001BDE  1FB1               	comf	(dtoa@n+7)& (0+255),f,b
  3405  001BE0  1FB0               	comf	(dtoa@n+6)& (0+255),f,b
  3406  001BE2  1FAF               	comf	(dtoa@n+5)& (0+255),f,b
  3407  001BE4  1FAE               	comf	(dtoa@n+4)& (0+255),f,b
  3408  001BE6  1FAD               	comf	(dtoa@n+3)& (0+255),f,b
  3409  001BE8  1FAC               	comf	(dtoa@n+2)& (0+255),f,b
  3410  001BEA  1FAB               	comf	(dtoa@n+1)& (0+255),f,b
  3411  001BEC  6DAA               	negf	dtoa@n& (0+255),b
  3412  001BEE  0E00               	movlw	0
  3413  001BF0  23AB               	addwfc	(dtoa@n+1)& (0+255),f,b
  3414  001BF2  23AC               	addwfc	(dtoa@n+2)& (0+255),f,b
  3415  001BF4  23AD               	addwfc	(dtoa@n+3)& (0+255),f,b
  3416  001BF6  23AE               	addwfc	(dtoa@n+4)& (0+255),f,b
  3417  001BF8  23AF               	addwfc	(dtoa@n+5)& (0+255),f,b
  3418  001BFA  23B0               	addwfc	(dtoa@n+6)& (0+255),f,b
  3419  001BFC  23B1               	addwfc	(dtoa@n+7)& (0+255),f,b
  3420  001BFE                     l4004:
  3421                           
  3422                           ; BSR set to: 0
  3423                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  3424  001BFE  BFDF               	btfsc	(_prec+1)& (0+255),7,b
  3425  001C00  EF04  F00E         	goto	u4281
  3426  001C04  EF06  F00E         	goto	u4280
  3427  001C08                     u4281:
  3428  001C08  EF07  F00E         	goto	l4008
  3429  001C0C                     u4280:
  3430  001C0C                     
  3431                           ; BSR set to: 0
  3432                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  3433  001C0C  93E0               	bcf	_flags& (0+255),1,b
  3434  001C0E                     l4008:
  3435                           
  3436                           ; BSR set to: 0
  3437                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  3438  001C0E  BFDF               	btfsc	(_prec+1)& (0+255),7,b
  3439  001C10  EF14  F00E         	goto	u4290
  3440  001C14  51DF               	movf	(_prec+1)& (0+255),w,b
  3441  001C16  E106               	bnz	u4291
  3442  001C18  05DE               	decf	_prec& (0+255),w,b
  3443  001C1A  B0D8               	btfsc	status,0,c
  3444  001C1C  EF12  F00E         	goto	u4291
  3445  001C20  EF14  F00E         	goto	u4290
  3446  001C24                     u4291:
  3447  001C24  EF1A  F00E         	goto	l962
  3448  001C28                     u4290:
  3449  001C28                     
  3450                           ; BSR set to: 0
  3451  001C28  0E00               	movlw	0
  3452  001C2A  6FA5               	movwf	(dtoa@p+1)& (0+255),b
  3453  001C2C  0E01               	movlw	1
  3454  001C2E  6FA4               	movwf	dtoa@p& (0+255),b
  3455  001C30  EF1E  F00E         	goto	l964
  3456  001C34                     l962:
  3457                           
  3458                           ; BSR set to: 0
  3459  001C34  C0DE  F0A4         	movff	_prec,dtoa@p
  3460  001C38  C0DF  F0A5         	movff	_prec+1,dtoa@p+1
  3461  001C3C                     l964:
  3462                           
  3463                           ; BSR set to: 0
  3464                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  3465  001C3C  C0DC  F0A6         	movff	_width,dtoa@w
  3466  001C40  C0DD  F0A7         	movff	_width+1,dtoa@w+1
  3467  001C44                     
  3468                           ; BSR set to: 0
  3469                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  3470  001C44  51A8               	movf	dtoa@s& (0+255),w,b
  3471  001C46  11A9               	iorwf	(dtoa@s+1)& (0+255),w,b
  3472  001C48  A4D8               	btfss	status,2,c
  3473  001C4A  EF29  F00E         	goto	u4301
  3474  001C4E  EF2B  F00E         	goto	u4300
  3475  001C52                     u4301:
  3476  001C52  EF32  F00E         	goto	l4016
  3477  001C56                     u4300:
  3478  001C56                     
  3479                           ; BSR set to: 0
  3480  001C56  A5E0               	btfss	_flags& (0+255),2,b
  3481  001C58  EF30  F00E         	goto	u4311
  3482  001C5C  EF32  F00E         	goto	u4310
  3483  001C60                     u4311:
  3484  001C60  EF35  F00E         	goto	l4018
  3485  001C64                     u4310:
  3486  001C64                     l4016:
  3487                           
  3488                           ; BSR set to: 0
  3489                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  3490  001C64  07A6               	decf	dtoa@w& (0+255),f,b
  3491  001C66  A0D8               	btfss	status,0,c
  3492  001C68  07A7               	decf	(dtoa@w+1)& (0+255),f,b
  3493  001C6A                     l4018:
  3494                           
  3495                           ; BSR set to: 0
  3496                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  3497  001C6A  0E00               	movlw	0
  3498  001C6C  6FB3               	movwf	(dtoa@i+1)& (0+255),b
  3499  001C6E  0E1F               	movlw	31
  3500  001C70  6FB2               	movwf	dtoa@i& (0+255),b
  3501  001C72                     
  3502                           ; BSR set to: 0
  3503                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  3504  001C72  0E00               	movlw	0
  3505  001C74  0102               	movlb	2	; () banked
  3506  001C76  6FE3               	movwf	(_dbuf+31)& (0+255),b
  3507                           
  3508                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3509  001C78  EFBB  F00E         	goto	l4032
  3510  001C7C                     l4022:
  3511                           
  3512                           ; BSR set to: 0
  3513                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  3514  001C7C  07B2               	decf	dtoa@i& (0+255),f,b
  3515  001C7E  A0D8               	btfss	status,0,c
  3516  001C80  07B3               	decf	(dtoa@i+1)& (0+255),f,b
  3517  001C82                     
  3518                           ; BSR set to: 0
  3519                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3520  001C82  0EC4               	movlw	low _dbuf
  3521  001C84  25B2               	addwf	dtoa@i& (0+255),w,b
  3522  001C86  6ED9               	movwf	fsr2l,c
  3523  001C88  0E02               	movlw	high _dbuf
  3524  001C8A  21B3               	addwfc	(dtoa@i+1)& (0+255),w,b
  3525  001C8C  6EDA               	movwf	fsr2h,c
  3526  001C8E  C0AA  F075         	movff	dtoa@n,___aomod@dividend
  3527  001C92  C0AB  F076         	movff	dtoa@n+1,___aomod@dividend+1
  3528  001C96  C0AC  F077         	movff	dtoa@n+2,___aomod@dividend+2
  3529  001C9A  C0AD  F078         	movff	dtoa@n+3,___aomod@dividend+3
  3530  001C9E  C0AE  F079         	movff	dtoa@n+4,___aomod@dividend+4
  3531  001CA2  C0AF  F07A         	movff	dtoa@n+5,___aomod@dividend+5
  3532  001CA6  C0B0  F07B         	movff	dtoa@n+6,___aomod@dividend+6
  3533  001CAA  C0B1  F07C         	movff	dtoa@n+7,___aomod@dividend+7
  3534  001CAE  0E0A               	movlw	10
  3535  001CB0  6F7D               	movwf	___aomod@divisor& (0+255),b
  3536  001CB2  0E00               	movlw	0
  3537  001CB4  6F7E               	movwf	(___aomod@divisor+1)& (0+255),b
  3538  001CB6  0E00               	movlw	0
  3539  001CB8  6F7F               	movwf	(___aomod@divisor+2)& (0+255),b
  3540  001CBA  0E00               	movlw	0
  3541  001CBC  6F80               	movwf	(___aomod@divisor+3)& (0+255),b
  3542  001CBE  0E00               	movlw	0
  3543  001CC0  6F81               	movwf	(___aomod@divisor+4)& (0+255),b
  3544  001CC2  0E00               	movlw	0
  3545  001CC4  6F82               	movwf	(___aomod@divisor+5)& (0+255),b
  3546  001CC6  0E00               	movlw	0
  3547  001CC8  6F83               	movwf	(___aomod@divisor+6)& (0+255),b
  3548  001CCA  0E00               	movlw	0
  3549  001CCC  6F84               	movwf	(___aomod@divisor+7)& (0+255),b
  3550  001CCE  EC44  F016         	call	___aomod	;wreg free
  3551  001CD2  C075  F09A         	movff	?___aomod,??_dtoa
  3552  001CD6  C076  F09B         	movff	?___aomod+1,??_dtoa+1
  3553  001CDA  C077  F09C         	movff	?___aomod+2,??_dtoa+2
  3554  001CDE  C078  F09D         	movff	?___aomod+3,??_dtoa+3
  3555  001CE2  C079  F09E         	movff	?___aomod+4,??_dtoa+4
  3556  001CE6  C07A  F09F         	movff	?___aomod+5,??_dtoa+5
  3557  001CEA  C07B  F0A0         	movff	?___aomod+6,??_dtoa+6
  3558  001CEE  C07C  F0A1         	movff	?___aomod+7,??_dtoa+7
  3559  001CF2  C09A  F087         	movff	??_dtoa,abs@a
  3560  001CF6  C09C  F088         	movff	??_dtoa+2,abs@a+1
  3561  001CFA  EC30  F01C         	call	_abs	;wreg free
  3562  001CFE  0100               	movlb	0	; () banked
  3563  001D00  5187               	movf	?_abs& (0+255),w,b
  3564  001D02  0F30               	addlw	48
  3565  001D04  6EDF               	movwf	indf2,c
  3566  001D06                     
  3567                           ; BSR set to: 0
  3568                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  3569  001D06  07A4               	decf	dtoa@p& (0+255),f,b
  3570  001D08  A0D8               	btfss	status,0,c
  3571  001D0A  07A5               	decf	(dtoa@p+1)& (0+255),f,b
  3572  001D0C                     
  3573                           ; BSR set to: 0
  3574                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  3575  001D0C  07A6               	decf	dtoa@w& (0+255),f,b
  3576  001D0E  A0D8               	btfss	status,0,c
  3577  001D10  07A7               	decf	(dtoa@w+1)& (0+255),f,b
  3578  001D12                     
  3579                           ; BSR set to: 0
  3580                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  3581  001D12  C0AA  F075         	movff	dtoa@n,___aodiv@dividend
  3582  001D16  C0AB  F076         	movff	dtoa@n+1,___aodiv@dividend+1
  3583  001D1A  C0AC  F077         	movff	dtoa@n+2,___aodiv@dividend+2
  3584  001D1E  C0AD  F078         	movff	dtoa@n+3,___aodiv@dividend+3
  3585  001D22  C0AE  F079         	movff	dtoa@n+4,___aodiv@dividend+4
  3586  001D26  C0AF  F07A         	movff	dtoa@n+5,___aodiv@dividend+5
  3587  001D2A  C0B0  F07B         	movff	dtoa@n+6,___aodiv@dividend+6
  3588  001D2E  C0B1  F07C         	movff	dtoa@n+7,___aodiv@dividend+7
  3589  001D32  0E0A               	movlw	10
  3590  001D34  6F7D               	movwf	___aodiv@divisor& (0+255),b
  3591  001D36  0E00               	movlw	0
  3592  001D38  6F7E               	movwf	(___aodiv@divisor+1)& (0+255),b
  3593  001D3A  0E00               	movlw	0
  3594  001D3C  6F7F               	movwf	(___aodiv@divisor+2)& (0+255),b
  3595  001D3E  0E00               	movlw	0
  3596  001D40  6F80               	movwf	(___aodiv@divisor+3)& (0+255),b
  3597  001D42  0E00               	movlw	0
  3598  001D44  6F81               	movwf	(___aodiv@divisor+4)& (0+255),b
  3599  001D46  0E00               	movlw	0
  3600  001D48  6F82               	movwf	(___aodiv@divisor+5)& (0+255),b
  3601  001D4A  0E00               	movlw	0
  3602  001D4C  6F83               	movwf	(___aodiv@divisor+6)& (0+255),b
  3603  001D4E  0E00               	movlw	0
  3604  001D50  6F84               	movwf	(___aodiv@divisor+7)& (0+255),b
  3605  001D52  ECF8  F013         	call	___aodiv	;wreg free
  3606  001D56  C075  F0AA         	movff	?___aodiv,dtoa@n
  3607  001D5A  C076  F0AB         	movff	?___aodiv+1,dtoa@n+1
  3608  001D5E  C077  F0AC         	movff	?___aodiv+2,dtoa@n+2
  3609  001D62  C078  F0AD         	movff	?___aodiv+3,dtoa@n+3
  3610  001D66  C079  F0AE         	movff	?___aodiv+4,dtoa@n+4
  3611  001D6A  C07A  F0AF         	movff	?___aodiv+5,dtoa@n+5
  3612  001D6E  C07B  F0B0         	movff	?___aodiv+6,dtoa@n+6
  3613  001D72  C07C  F0B1         	movff	?___aodiv+7,dtoa@n+7
  3614  001D76                     l4032:
  3615                           
  3616                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3617  001D76  0100               	movlb	0	; () banked
  3618  001D78  BFB3               	btfsc	(dtoa@i+1)& (0+255),7,b
  3619  001D7A  EFC7  F00E         	goto	u4321
  3620  001D7E  51B3               	movf	(dtoa@i+1)& (0+255),w,b
  3621  001D80  E108               	bnz	u4320
  3622  001D82  05B2               	decf	dtoa@i& (0+255),w,b
  3623  001D84  A0D8               	btfss	status,0,c
  3624  001D86  EFC7  F00E         	goto	u4321
  3625  001D8A  EFC9  F00E         	goto	u4320
  3626  001D8E                     u4321:
  3627  001D8E  EFF9  F00E         	goto	l4042
  3628  001D92                     u4320:
  3629  001D92                     
  3630                           ; BSR set to: 0
  3631  001D92  51AA               	movf	dtoa@n& (0+255),w,b
  3632  001D94  11AB               	iorwf	(dtoa@n+1)& (0+255),w,b
  3633  001D96  11AC               	iorwf	(dtoa@n+2)& (0+255),w,b
  3634  001D98  11AD               	iorwf	(dtoa@n+3)& (0+255),w,b
  3635  001D9A  11AE               	iorwf	(dtoa@n+4)& (0+255),w,b
  3636  001D9C  11AF               	iorwf	(dtoa@n+5)& (0+255),w,b
  3637  001D9E  11B0               	iorwf	(dtoa@n+6)& (0+255),w,b
  3638  001DA0  11B1               	iorwf	(dtoa@n+7)& (0+255),w,b
  3639  001DA2  A4D8               	btfss	status,2,c
  3640  001DA4  EFD6  F00E         	goto	u4331
  3641  001DA8  EFD8  F00E         	goto	u4330
  3642  001DAC                     u4331:
  3643  001DAC  EF3E  F00E         	goto	l4022
  3644  001DB0                     u4330:
  3645  001DB0                     
  3646                           ; BSR set to: 0
  3647  001DB0  BFA5               	btfsc	(dtoa@p+1)& (0+255),7,b
  3648  001DB2  EFE5  F00E         	goto	u4340
  3649  001DB6  51A5               	movf	(dtoa@p+1)& (0+255),w,b
  3650  001DB8  E106               	bnz	u4341
  3651  001DBA  05A4               	decf	dtoa@p& (0+255),w,b
  3652  001DBC  B0D8               	btfsc	status,0,c
  3653  001DBE  EFE3  F00E         	goto	u4341
  3654  001DC2  EFE5  F00E         	goto	u4340
  3655  001DC6                     u4341:
  3656  001DC6  EF3E  F00E         	goto	l4022
  3657  001DCA                     u4340:
  3658  001DCA                     
  3659                           ; BSR set to: 0
  3660  001DCA  BFA7               	btfsc	(dtoa@w+1)& (0+255),7,b
  3661  001DCC  EFF0  F00E         	goto	u4351
  3662  001DD0  51A7               	movf	(dtoa@w+1)& (0+255),w,b
  3663  001DD2  E108               	bnz	u4350
  3664  001DD4  05A6               	decf	dtoa@w& (0+255),w,b
  3665  001DD6  A0D8               	btfss	status,0,c
  3666  001DD8  EFF0  F00E         	goto	u4351
  3667  001DDC  EFF2  F00E         	goto	u4350
  3668  001DE0                     u4351:
  3669  001DE0  EFF9  F00E         	goto	l4042
  3670  001DE4                     u4350:
  3671  001DE4                     
  3672                           ; BSR set to: 0
  3673  001DE4  B3E0               	btfsc	_flags& (0+255),1,b
  3674  001DE6  EFF7  F00E         	goto	u4361
  3675  001DEA  EFF9  F00E         	goto	u4360
  3676  001DEE                     u4361:
  3677  001DEE  EF3E  F00E         	goto	l4022
  3678  001DF2                     u4360:
  3679  001DF2                     l4042:
  3680                           
  3681                           ; BSR set to: 0
  3682                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  3683  001DF2  51A8               	movf	dtoa@s& (0+255),w,b
  3684  001DF4  11A9               	iorwf	(dtoa@s+1)& (0+255),w,b
  3685  001DF6  A4D8               	btfss	status,2,c
  3686  001DF8  EF00  F00F         	goto	u4371
  3687  001DFC  EF02  F00F         	goto	u4370
  3688  001E00                     u4371:
  3689  001E00  EF09  F00F         	goto	l4046
  3690  001E04                     u4370:
  3691  001E04                     
  3692                           ; BSR set to: 0
  3693  001E04  A5E0               	btfss	_flags& (0+255),2,b
  3694  001E06  EF07  F00F         	goto	u4381
  3695  001E0A  EF09  F00F         	goto	u4380
  3696  001E0E                     u4381:
  3697  001E0E  EF27  F00F         	goto	l4056
  3698  001E12                     u4380:
  3699  001E12                     l4046:
  3700                           
  3701                           ; BSR set to: 0
  3702                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  3703  001E12  07B2               	decf	dtoa@i& (0+255),f,b
  3704  001E14  A0D8               	btfss	status,0,c
  3705  001E16  07B3               	decf	(dtoa@i+1)& (0+255),f,b
  3706  001E18                     
  3707                           ; BSR set to: 0
  3708                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  3709  001E18  51A8               	movf	dtoa@s& (0+255),w,b
  3710  001E1A  11A9               	iorwf	(dtoa@s+1)& (0+255),w,b
  3711  001E1C  A4D8               	btfss	status,2,c
  3712  001E1E  EF13  F00F         	goto	u4391
  3713  001E22  EF15  F00F         	goto	u4390
  3714  001E26                     u4391:
  3715  001E26  EF1B  F00F         	goto	l4052
  3716  001E2A                     u4390:
  3717  001E2A                     
  3718                           ; BSR set to: 0
  3719  001E2A  0E00               	movlw	0
  3720  001E2C  6FA3               	movwf	(_dtoa$1784+1)& (0+255),b
  3721  001E2E  0E2B               	movlw	43
  3722  001E30  6FA2               	movwf	_dtoa$1784& (0+255),b
  3723  001E32  EF1F  F00F         	goto	l4054
  3724  001E36                     l4052:
  3725                           
  3726                           ; BSR set to: 0
  3727  001E36  0E00               	movlw	0
  3728  001E38  6FA3               	movwf	(_dtoa$1784+1)& (0+255),b
  3729  001E3A  0E2D               	movlw	45
  3730  001E3C  6FA2               	movwf	_dtoa$1784& (0+255),b
  3731  001E3E                     l4054:
  3732                           
  3733                           ; BSR set to: 0
  3734  001E3E  0EC4               	movlw	low _dbuf
  3735  001E40  25B2               	addwf	dtoa@i& (0+255),w,b
  3736  001E42  6ED9               	movwf	fsr2l,c
  3737  001E44  0E02               	movlw	high _dbuf
  3738  001E46  21B3               	addwfc	(dtoa@i+1)& (0+255),w,b
  3739  001E48  6EDA               	movwf	fsr2h,c
  3740  001E4A  C0A2  FFDF         	movff	_dtoa$1784,indf2
  3741  001E4E                     l4056:
  3742                           
  3743                           ; BSR set to: 0
  3744                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  3745  001E4E  C090  F085         	movff	dtoa@fp,pad@fp
  3746  001E52  C091  F086         	movff	dtoa@fp+1,pad@fp+1
  3747  001E56  0EC4               	movlw	low _dbuf
  3748  001E58  25B2               	addwf	dtoa@i& (0+255),w,b
  3749  001E5A  6F87               	movwf	pad@buf& (0+255),b
  3750  001E5C  0E02               	movlw	high _dbuf
  3751  001E5E  21B3               	addwfc	(dtoa@i+1)& (0+255),w,b
  3752  001E60  6F88               	movwf	(pad@buf+1)& (0+255),b
  3753  001E62  C0A6  F089         	movff	dtoa@w,pad@p
  3754  001E66  C0A7  F08A         	movff	dtoa@w+1,pad@p+1
  3755  001E6A  EC0F  F018         	call	_pad	;wreg free
  3756  001E6E  C085  F090         	movff	?_pad,?_dtoa
  3757  001E72  C086  F091         	movff	?_pad+1,?_dtoa+1
  3758  001E76  0012               	return		;funcret
  3759  001E78                     __end_of_dtoa:
  3760                           	callstack 0
  3761                           
  3762 ;; *************** function _pad *****************
  3763 ;; Defined at:
  3764 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;  fp              2   37[BANK0 ] PTR struct _IO_FILE
  3767 ;;		 -> NULL(0), sprintf@f(6), 
  3768 ;;  buf             2   39[BANK0 ] PTR unsigned char 
  3769 ;;		 -> dbuf(32), 
  3770 ;;  p               2   41[BANK0 ] int 
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;  w               2   46[BANK0 ] int 
  3773 ;;  i               2   44[BANK0 ] int 
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  2   37[BANK0 ] int 
  3776 ;; Registers used:
  3777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3783 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3784 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3785 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3786 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3787 ;;Total ram usage:       11 bytes
  3788 ;; Hardware stack levels used:    1
  3789 ;; Hardware stack levels required when called:   13
  3790 ;; This function calls:
  3791 ;;		_fputc
  3792 ;;		_fputs
  3793 ;;		_strlen
  3794 ;; This function is called by:
  3795 ;;		_dtoa
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           
  3799                           	psect	text7
  3800  00301E                     __ptext7:
  3801                           	callstack 0
  3802  00301E                     _pad:
  3803                           	callstack 12
  3804  00301E                     
  3805                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3806  00301E  0100               	movlb	0	; () banked
  3807  003020  A1E0               	btfss	_flags& (0+255),0,b
  3808  003022  EF15  F018         	goto	u4141
  3809  003026  EF17  F018         	goto	u4140
  3810  00302A                     u4141:
  3811  00302A  EF21  F018         	goto	l3942
  3812  00302E                     u4140:
  3813  00302E                     
  3814                           ; BSR set to: 0
  3815                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3816  00302E  C087  F07E         	movff	pad@buf,fputs@s
  3817  003032  C088  F07F         	movff	pad@buf+1,fputs@s+1
  3818  003036  C085  F080         	movff	pad@fp,fputs@fp
  3819  00303A  C086  F081         	movff	pad@fp+1,fputs@fp+1
  3820  00303E  ECC7  F01B         	call	_fputs	;wreg free
  3821  003042                     l3942:
  3822                           
  3823                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3824  003042  0100               	movlb	0	; () banked
  3825  003044  BF8A               	btfsc	(pad@p+1)& (0+255),7,b
  3826  003046  EF27  F018         	goto	u4151
  3827  00304A  EF29  F018         	goto	u4150
  3828  00304E                     u4151:
  3829  00304E  EF2F  F018         	goto	l3946
  3830  003052                     u4150:
  3831  003052                     
  3832                           ; BSR set to: 0
  3833  003052  C089  F08E         	movff	pad@p,pad@w
  3834  003056  C08A  F08F         	movff	pad@p+1,pad@w+1
  3835  00305A  EF33  F018         	goto	l951
  3836  00305E                     l3946:
  3837                           
  3838                           ; BSR set to: 0
  3839  00305E  0E00               	movlw	0
  3840  003060  6F8F               	movwf	(pad@w+1)& (0+255),b
  3841  003062  0E00               	movlw	0
  3842  003064  6F8E               	movwf	pad@w& (0+255),b
  3843  003066                     l951:
  3844                           
  3845                           ; BSR set to: 0
  3846                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3847  003066  0E00               	movlw	0
  3848  003068  6F8D               	movwf	(pad@i+1)& (0+255),b
  3849  00306A  0E00               	movlw	0
  3850  00306C  6F8C               	movwf	pad@i& (0+255),b
  3851                           
  3852                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3853  00306E  EF46  F018         	goto	l3952
  3854  003072                     l3948:
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3858  003072  0E00               	movlw	0
  3859  003074  6F76               	movwf	(fputc@c+1)& (0+255),b
  3860  003076  0E20               	movlw	32
  3861  003078  6F75               	movwf	fputc@c& (0+255),b
  3862  00307A  C085  F077         	movff	pad@fp,fputc@fp
  3863  00307E  C086  F078         	movff	pad@fp+1,fputc@fp+1
  3864  003082  ECA9  F017         	call	_fputc	;wreg free
  3865  003086                     
  3866                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3867  003086  0100               	movlb	0	; () banked
  3868  003088  4B8C               	infsnz	pad@i& (0+255),f,b
  3869  00308A  2B8D               	incf	(pad@i+1)& (0+255),f,b
  3870  00308C                     l3952:
  3871                           
  3872                           ; BSR set to: 0
  3873                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3874  00308C  518E               	movf	pad@w& (0+255),w,b
  3875  00308E  5D8C               	subwf	pad@i& (0+255),w,b
  3876  003090  518D               	movf	(pad@i+1)& (0+255),w,b
  3877  003092  0A80               	xorlw	128
  3878  003094  6F8B               	movwf	??_pad& (0+255),b
  3879  003096  518F               	movf	(pad@w+1)& (0+255),w,b
  3880  003098  0A80               	xorlw	128
  3881  00309A  598B               	subwfb	??_pad& (0+255),w,b
  3882  00309C  A0D8               	btfss	status,0,c
  3883  00309E  EF53  F018         	goto	u4161
  3884  0030A2  EF55  F018         	goto	u4160
  3885  0030A6                     u4161:
  3886  0030A6  EF39  F018         	goto	l3948
  3887  0030AA                     u4160:
  3888  0030AA                     
  3889                           ; BSR set to: 0
  3890                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3891  0030AA  B1E0               	btfsc	_flags& (0+255),0,b
  3892  0030AC  EF5A  F018         	goto	u4171
  3893  0030B0  EF5C  F018         	goto	u4170
  3894  0030B4                     u4171:
  3895  0030B4  EF66  F018         	goto	l3956
  3896  0030B8                     u4170:
  3897  0030B8                     
  3898                           ; BSR set to: 0
  3899                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3900  0030B8  C087  F07E         	movff	pad@buf,fputs@s
  3901  0030BC  C088  F07F         	movff	pad@buf+1,fputs@s+1
  3902  0030C0  C085  F080         	movff	pad@fp,fputs@fp
  3903  0030C4  C086  F081         	movff	pad@fp+1,fputs@fp+1
  3904  0030C8  ECC7  F01B         	call	_fputs	;wreg free
  3905  0030CC                     l3956:
  3906                           
  3907                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3908  0030CC  C087  F075         	movff	pad@buf,strlen@s
  3909  0030D0  C088  F076         	movff	pad@buf+1,strlen@s+1
  3910  0030D4  ECAF  F01C         	call	_strlen	;wreg free
  3911  0030D8  0100               	movlb	0	; () banked
  3912  0030DA  518E               	movf	pad@w& (0+255),w,b
  3913  0030DC  2575               	addwf	?_strlen& (0+255),w,b
  3914  0030DE  6F85               	movwf	?_pad& (0+255),b
  3915  0030E0  518F               	movf	(pad@w+1)& (0+255),w,b
  3916  0030E2  2176               	addwfc	(?_strlen+1)& (0+255),w,b
  3917  0030E4  6F86               	movwf	(?_pad+1)& (0+255),b
  3918  0030E6                     
  3919                           ; BSR set to: 0
  3920  0030E6  0012               	return		;funcret
  3921  0030E8                     __end_of_pad:
  3922                           	callstack 0
  3923                           
  3924 ;; *************** function _strlen *****************
  3925 ;; Defined at:
  3926 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  3927 ;; Parameters:    Size  Location     Type
  3928 ;;  s               2   21[BANK0 ] PTR const unsigned char 
  3929 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), ?_sprintf(2), 
  3930 ;;		 -> time_now@daylist(70), 
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;  a               2   23[BANK0 ] PTR const unsigned char 
  3933 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), ?_sprintf(2), 
  3934 ;;		 -> time_now@daylist(70), 
  3935 ;; Return value:  Size  Location     Type
  3936 ;;                  2   21[BANK0 ] unsigned int 
  3937 ;; Registers used:
  3938 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3939 ;; Tracked objects:
  3940 ;;		On entry : 0/0
  3941 ;;		On exit  : 0/0
  3942 ;;		Unchanged: 0/0
  3943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3944 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3945 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3947 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3948 ;;Total ram usage:        4 bytes
  3949 ;; Hardware stack levels used:    1
  3950 ;; Hardware stack levels required when called:   10
  3951 ;; This function calls:
  3952 ;;		Nothing
  3953 ;; This function is called by:
  3954 ;;		_pad
  3955 ;;		_stoa
  3956 ;; This function uses a non-reentrant model
  3957 ;;
  3958                           
  3959                           	psect	text8
  3960  00395E                     __ptext8:
  3961                           	callstack 0
  3962  00395E                     _strlen:
  3963                           	callstack 15
  3964  00395E  C075  F077         	movff	strlen@s,strlen@a
  3965  003962  C076  F078         	movff	strlen@s+1,strlen@a+1
  3966  003966  EFB8  F01C         	goto	l3832
  3967  00396A                     l3830:
  3968  00396A  0100               	movlb	0	; () banked
  3969  00396C  4B75               	infsnz	strlen@s& (0+255),f,b
  3970  00396E  2B76               	incf	(strlen@s+1)& (0+255),f,b
  3971  003970                     l3832:
  3972  003970  C075  FFD9         	movff	strlen@s,fsr2l
  3973  003974  C076  FFDA         	movff	strlen@s+1,fsr2h
  3974  003978  50DF               	movf	indf2,w,c
  3975  00397A  A4D8               	btfss	status,2,c
  3976  00397C  EFC2  F01C         	goto	u3961
  3977  003980  EFC4  F01C         	goto	u3960
  3978  003984                     u3961:
  3979  003984  EFB5  F01C         	goto	l3830
  3980  003988                     u3960:
  3981  003988  0100               	movlb	0	; () banked
  3982  00398A  5177               	movf	strlen@a& (0+255),w,b
  3983  00398C  5D75               	subwf	strlen@s& (0+255),w,b
  3984  00398E  6F75               	movwf	?_strlen& (0+255),b
  3985  003990  5178               	movf	(strlen@a+1)& (0+255),w,b
  3986  003992  5976               	subwfb	(strlen@s+1)& (0+255),w,b
  3987  003994  6F76               	movwf	(?_strlen+1)& (0+255),b
  3988  003996                     
  3989                           ; BSR set to: 0
  3990  003996  0012               	return		;funcret
  3991  003998                     __end_of_strlen:
  3992                           	callstack 0
  3993                           
  3994 ;; *************** function _fputs *****************
  3995 ;; Defined at:
  3996 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;  s               2   30[BANK0 ] PTR const unsigned char 
  3999 ;;		 -> dbuf(32), 
  4000 ;;  fp              2   32[BANK0 ] PTR struct _IO_FILE
  4001 ;;		 -> NULL(0), sprintf@f(6), 
  4002 ;; Auto vars:     Size  Location     Type
  4003 ;;  i               2   35[BANK0 ] int 
  4004 ;;  c               1   34[BANK0 ] unsigned char 
  4005 ;; Return value:  Size  Location     Type
  4006 ;;                  2   30[BANK0 ] int 
  4007 ;; Registers used:
  4008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : 0/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4014 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4015 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4017 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4018 ;;Total ram usage:        7 bytes
  4019 ;; Hardware stack levels used:    1
  4020 ;; Hardware stack levels required when called:   12
  4021 ;; This function calls:
  4022 ;;		_fputc
  4023 ;; This function is called by:
  4024 ;;		_pad
  4025 ;; This function uses a non-reentrant model
  4026 ;;
  4027                           
  4028                           	psect	text9
  4029  00378E                     __ptext9:
  4030                           	callstack 0
  4031  00378E                     _fputs:
  4032                           	callstack 12
  4033  00378E  0E00               	movlw	0
  4034  003790  0100               	movlb	0	; () banked
  4035  003792  6F84               	movwf	(fputs@i+1)& (0+255),b
  4036  003794  0E00               	movlw	0
  4037  003796  6F83               	movwf	fputs@i& (0+255),b
  4038  003798  EFDA  F01B         	goto	l3826
  4039  00379C                     l3822:
  4040                           
  4041                           ; BSR set to: 0
  4042  00379C  C082  F075         	movff	fputs@c,fputc@c
  4043  0037A0  6B76               	clrf	(fputc@c+1)& (0+255),b
  4044  0037A2  C080  F077         	movff	fputs@fp,fputc@fp
  4045  0037A6  C081  F078         	movff	fputs@fp+1,fputc@fp+1
  4046  0037AA  ECA9  F017         	call	_fputc	;wreg free
  4047  0037AE  0100               	movlb	0	; () banked
  4048  0037B0  4B83               	infsnz	fputs@i& (0+255),f,b
  4049  0037B2  2B84               	incf	(fputs@i+1)& (0+255),f,b
  4050  0037B4                     l3826:
  4051                           
  4052                           ; BSR set to: 0
  4053  0037B4  5183               	movf	fputs@i& (0+255),w,b
  4054  0037B6  257E               	addwf	fputs@s& (0+255),w,b
  4055  0037B8  6ED9               	movwf	fsr2l,c
  4056  0037BA  5184               	movf	(fputs@i+1)& (0+255),w,b
  4057  0037BC  217F               	addwfc	(fputs@s+1)& (0+255),w,b
  4058  0037BE  6EDA               	movwf	fsr2h,c
  4059  0037C0  50DF               	movf	indf2,w,c
  4060  0037C2  6F82               	movwf	fputs@c& (0+255),b
  4061  0037C4  5182               	movf	fputs@c& (0+255),w,b
  4062  0037C6  A4D8               	btfss	status,2,c
  4063  0037C8  EFE8  F01B         	goto	u3951
  4064  0037CC  EFEA  F01B         	goto	u3950
  4065  0037D0                     u3951:
  4066  0037D0  EFCE  F01B         	goto	l3822
  4067  0037D4                     u3950:
  4068  0037D4                     
  4069                           ; BSR set to: 0
  4070  0037D4  0012               	return		;funcret
  4071  0037D6                     __end_of_fputs:
  4072                           	callstack 0
  4073                           
  4074 ;; *************** function _fputc *****************
  4075 ;; Defined at:
  4076 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  4077 ;; Parameters:    Size  Location     Type
  4078 ;;  c               2   21[BANK0 ] int 
  4079 ;;  fp              2   23[BANK0 ] PTR struct _IO_FILE
  4080 ;;		 -> NULL(0), sprintf@f(6), 
  4081 ;; Auto vars:     Size  Location     Type
  4082 ;;		None
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  2   21[BANK0 ] int 
  4085 ;; Registers used:
  4086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4092 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4094 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4095 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4096 ;;Total ram usage:        9 bytes
  4097 ;; Hardware stack levels used:    1
  4098 ;; Hardware stack levels required when called:   11
  4099 ;; This function calls:
  4100 ;;		_putch
  4101 ;; This function is called by:
  4102 ;;		_pad
  4103 ;;		_stoa
  4104 ;;		_vfpfcnvrt
  4105 ;;		_fputs
  4106 ;; This function uses a non-reentrant model
  4107 ;;
  4108                           
  4109                           	psect	text10
  4110  002F52                     __ptext10:
  4111                           	callstack 0
  4112  002F52                     _fputc:
  4113                           	callstack 14
  4114  002F52  0100               	movlb	0	; () banked
  4115  002F54  5177               	movf	fputc@fp& (0+255),w,b
  4116  002F56  1178               	iorwf	(fputc@fp+1)& (0+255),w,b
  4117  002F58  B4D8               	btfsc	status,2,c
  4118  002F5A  EFB1  F017         	goto	u3911
  4119  002F5E  EFB3  F017         	goto	u3910
  4120  002F62                     u3911:
  4121  002F62  EFBC  F017         	goto	l3810
  4122  002F66                     u3910:
  4123  002F66                     
  4124                           ; BSR set to: 0
  4125  002F66  5177               	movf	fputc@fp& (0+255),w,b
  4126  002F68  1178               	iorwf	(fputc@fp+1)& (0+255),w,b
  4127  002F6A  A4D8               	btfss	status,2,c
  4128  002F6C  EFBA  F017         	goto	u3921
  4129  002F70  EFBC  F017         	goto	u3920
  4130  002F74                     u3921:
  4131  002F74  EFC1  F017         	goto	l3812
  4132  002F78                     u3920:
  4133  002F78                     l3810:
  4134                           
  4135                           ; BSR set to: 0
  4136  002F78  5175               	movf	fputc@c& (0+255),w,b
  4137  002F7A  ECE9  F01D         	call	_putch
  4138  002F7E  EF0E  F018         	goto	l1106
  4139  002F82                     l3812:
  4140                           
  4141                           ; BSR set to: 0
  4142  002F82  EE20 F004          	lfsr	2,4
  4143  002F86  5177               	movf	fputc@fp& (0+255),w,b
  4144  002F88  26D9               	addwf	fsr2l,f,c
  4145  002F8A  5178               	movf	(fputc@fp+1)& (0+255),w,b
  4146  002F8C  22DA               	addwfc	fsr2h,f,c
  4147  002F8E  50DE               	movf	postinc2,w,c
  4148  002F90  10DE               	iorwf	postinc2,w,c
  4149  002F92  B4D8               	btfsc	status,2,c
  4150  002F94  EFCE  F017         	goto	u3931
  4151  002F98  EFD0  F017         	goto	u3930
  4152  002F9C                     u3931:
  4153  002F9C  EFEB  F017         	goto	l3816
  4154  002FA0                     u3930:
  4155  002FA0                     
  4156                           ; BSR set to: 0
  4157  002FA0  EE20 F004          	lfsr	2,4
  4158  002FA4  5177               	movf	fputc@fp& (0+255),w,b
  4159  002FA6  26D9               	addwf	fsr2l,f,c
  4160  002FA8  5178               	movf	(fputc@fp+1)& (0+255),w,b
  4161  002FAA  22DA               	addwfc	fsr2h,f,c
  4162  002FAC  EE10 F002          	lfsr	1,2
  4163  002FB0  5177               	movf	fputc@fp& (0+255),w,b
  4164  002FB2  26E1               	addwf	fsr1l,f,c
  4165  002FB4  5178               	movf	(fputc@fp+1)& (0+255),w,b
  4166  002FB6  22E2               	addwfc	fsr1h,f,c
  4167  002FB8  50DE               	movf	postinc2,w,c
  4168  002FBA  5CE6               	subwf	postinc1,w,c
  4169  002FBC  50E6               	movf	postinc1,w,c
  4170  002FBE  0A80               	xorlw	128
  4171  002FC0  6F7D               	movwf	(??_fputc+4)& (0+255),b
  4172  002FC2  50DE               	movf	postinc2,w,c
  4173  002FC4  0A80               	xorlw	128
  4174  002FC6  597D               	subwfb	(??_fputc+4)& (0+255),w,b
  4175  002FC8  B0D8               	btfsc	status,0,c
  4176  002FCA  EFE9  F017         	goto	u3941
  4177  002FCE  EFEB  F017         	goto	u3940
  4178  002FD2                     u3941:
  4179  002FD2  EF0E  F018         	goto	l1106
  4180  002FD6                     u3940:
  4181  002FD6                     l3816:
  4182                           
  4183                           ; BSR set to: 0
  4184  002FD6  EE20 F002          	lfsr	2,2
  4185  002FDA  5177               	movf	fputc@fp& (0+255),w,b
  4186  002FDC  26D9               	addwf	fsr2l,f,c
  4187  002FDE  5178               	movf	(fputc@fp+1)& (0+255),w,b
  4188  002FE0  22DA               	addwfc	fsr2h,f,c
  4189  002FE2  CFDE F079          	movff	postinc2,??_fputc
  4190  002FE6  CFDD F07A          	movff	postdec2,??_fputc+1
  4191  002FEA  C077  FFD9         	movff	fputc@fp,fsr2l
  4192  002FEE  C078  FFDA         	movff	fputc@fp+1,fsr2h
  4193  002FF2  CFDE F07B          	movff	postinc2,??_fputc+2
  4194  002FF6  CFDD F07C          	movff	postdec2,??_fputc+3
  4195  002FFA  5179               	movf	??_fputc& (0+255),w,b
  4196  002FFC  257B               	addwf	(??_fputc+2)& (0+255),w,b
  4197  002FFE  6ED9               	movwf	fsr2l,c
  4198  003000  517A               	movf	(??_fputc+1)& (0+255),w,b
  4199  003002  217C               	addwfc	(??_fputc+3)& (0+255),w,b
  4200  003004  6EDA               	movwf	fsr2h,c
  4201  003006  C075  FFDF         	movff	fputc@c,indf2
  4202  00300A  EE20 F002          	lfsr	2,2
  4203  00300E  5177               	movf	fputc@fp& (0+255),w,b
  4204  003010  26D9               	addwf	fsr2l,f,c
  4205  003012  5178               	movf	(fputc@fp+1)& (0+255),w,b
  4206  003014  22DA               	addwfc	fsr2h,f,c
  4207  003016  2ADE               	incf	postinc2,f,c
  4208  003018  0E00               	movlw	0
  4209  00301A  22DD               	addwfc	postdec2,f,c
  4210  00301C                     l1106:
  4211  00301C  0012               	return		;funcret
  4212  00301E                     __end_of_fputc:
  4213                           	callstack 0
  4214                           
  4215 ;; *************** function _putch *****************
  4216 ;; Defined at:
  4217 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;  c               1    wreg     unsigned char 
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;  c               1    0[COMRAM] unsigned char 
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  1    wreg      void 
  4224 ;; Registers used:
  4225 ;;		wreg
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4235 ;;Total ram usage:        0 bytes
  4236 ;; Hardware stack levels used:    1
  4237 ;; Hardware stack levels required when called:   10
  4238 ;; This function calls:
  4239 ;;		Nothing
  4240 ;; This function is called by:
  4241 ;;		_fputc
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245                           	psect	text11
  4246  003BD2                     __ptext11:
  4247                           	callstack 0
  4248  003BD2                     _putch:
  4249                           	callstack 14
  4250  003BD2  0012               	return		;funcret
  4251  003BD4                     __end_of_putch:
  4252                           	callstack 0
  4253                           
  4254 ;; *************** function _abs *****************
  4255 ;; Defined at:
  4256 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  4257 ;; Parameters:    Size  Location     Type
  4258 ;;  a               2   39[BANK0 ] int 
  4259 ;; Auto vars:     Size  Location     Type
  4260 ;;		None
  4261 ;; Return value:  Size  Location     Type
  4262 ;;                  2   39[BANK0 ] int 
  4263 ;; Registers used:
  4264 ;;		wreg, status,2, status,0
  4265 ;; Tracked objects:
  4266 ;;		On entry : 0/0
  4267 ;;		On exit  : 0/0
  4268 ;;		Unchanged: 0/0
  4269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4270 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4272 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4273 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4274 ;;Total ram usage:        4 bytes
  4275 ;; Hardware stack levels used:    1
  4276 ;; Hardware stack levels required when called:   10
  4277 ;; This function calls:
  4278 ;;		Nothing
  4279 ;; This function is called by:
  4280 ;;		_dtoa
  4281 ;; This function uses a non-reentrant model
  4282 ;;
  4283                           
  4284                           	psect	text12
  4285  003860                     __ptext12:
  4286                           	callstack 0
  4287  003860                     _abs:
  4288                           	callstack 15
  4289  003860  0100               	movlb	0	; () banked
  4290  003862  BF88               	btfsc	(abs@a+1)& (0+255),7,b
  4291  003864  EF3E  F01C         	goto	u4180
  4292  003868  5188               	movf	(abs@a+1)& (0+255),w,b
  4293  00386A  E106               	bnz	u4181
  4294  00386C  0587               	decf	abs@a& (0+255),w,b
  4295  00386E  B0D8               	btfsc	status,0,c
  4296  003870  EF3C  F01C         	goto	u4181
  4297  003874  EF3E  F01C         	goto	u4180
  4298  003878                     u4181:
  4299  003878  EF4C  F01C         	goto	l1046
  4300  00387C                     u4180:
  4301  00387C                     
  4302                           ; BSR set to: 0
  4303  00387C  C087  F089         	movff	abs@a,??_abs
  4304  003880  C088  F08A         	movff	abs@a+1,??_abs+1
  4305  003884  1F89               	comf	??_abs& (0+255),f,b
  4306  003886  1F8A               	comf	(??_abs+1)& (0+255),f,b
  4307  003888  4B89               	infsnz	??_abs& (0+255),f,b
  4308  00388A  2B8A               	incf	(??_abs+1)& (0+255),f,b
  4309  00388C  C089  F087         	movff	??_abs,?_abs
  4310  003890  C08A  F088         	movff	??_abs+1,?_abs+1
  4311  003894  EF50  F01C         	goto	l1049
  4312  003898                     l1046:
  4313                           
  4314                           ; BSR set to: 0
  4315  003898  C087  F087         	movff	abs@a,?_abs
  4316  00389C  C088  F088         	movff	abs@a+1,?_abs+1
  4317  0038A0                     l1049:
  4318                           
  4319                           ; BSR set to: 0
  4320  0038A0  0012               	return		;funcret
  4321  0038A2                     __end_of_abs:
  4322                           	callstack 0
  4323                           
  4324 ;; *************** function ___aomod *****************
  4325 ;; Defined at:
  4326 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  4327 ;; Parameters:    Size  Location     Type
  4328 ;;  dividend        8   21[BANK0 ] long long 
  4329 ;;  divisor         8   29[BANK0 ] long long 
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;  sign            1   38[BANK0 ] unsigned char 
  4332 ;;  counter         1   37[BANK0 ] unsigned char 
  4333 ;; Return value:  Size  Location     Type
  4334 ;;                  8   21[BANK0 ] long long 
  4335 ;; Registers used:
  4336 ;;		wreg, status,2, status,0
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4342 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4343 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4345 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4346 ;;Total ram usage:       18 bytes
  4347 ;; Hardware stack levels used:    1
  4348 ;; Hardware stack levels required when called:   10
  4349 ;; This function calls:
  4350 ;;		Nothing
  4351 ;; This function is called by:
  4352 ;;		_dtoa
  4353 ;; This function uses a non-reentrant model
  4354 ;;
  4355                           
  4356                           	psect	text13
  4357  002C88                     __ptext13:
  4358                           	callstack 0
  4359  002C88                     ___aomod:
  4360                           	callstack 15
  4361  002C88  0E00               	movlw	0
  4362  002C8A  0100               	movlb	0	; () banked
  4363  002C8C  6F86               	movwf	___aomod@sign& (0+255),b
  4364  002C8E                     
  4365                           ; BSR set to: 0
  4366  002C8E  BF7C               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  4367  002C90  EF4E  F016         	goto	u4080
  4368  002C94  EF4C  F016         	goto	u4081
  4369  002C98                     u4081:
  4370  002C98  EF60  F016         	goto	l3910
  4371  002C9C                     u4080:
  4372  002C9C                     
  4373                           ; BSR set to: 0
  4374  002C9C  1F7C               	comf	(___aomod@dividend+7)& (0+255),f,b
  4375  002C9E  1F7B               	comf	(___aomod@dividend+6)& (0+255),f,b
  4376  002CA0  1F7A               	comf	(___aomod@dividend+5)& (0+255),f,b
  4377  002CA2  1F79               	comf	(___aomod@dividend+4)& (0+255),f,b
  4378  002CA4  1F78               	comf	(___aomod@dividend+3)& (0+255),f,b
  4379  002CA6  1F77               	comf	(___aomod@dividend+2)& (0+255),f,b
  4380  002CA8  1F76               	comf	(___aomod@dividend+1)& (0+255),f,b
  4381  002CAA  6D75               	negf	___aomod@dividend& (0+255),b
  4382  002CAC  0E00               	movlw	0
  4383  002CAE  2376               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  4384  002CB0  2377               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  4385  002CB2  2378               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  4386  002CB4  2379               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  4387  002CB6  237A               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  4388  002CB8  237B               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  4389  002CBA  237C               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  4390  002CBC                     
  4391                           ; BSR set to: 0
  4392  002CBC  0E01               	movlw	1
  4393  002CBE  6F86               	movwf	___aomod@sign& (0+255),b
  4394  002CC0                     l3910:
  4395                           
  4396                           ; BSR set to: 0
  4397  002CC0  BF84               	btfsc	(___aomod@divisor+7)& (0+255),7,b
  4398  002CC2  EF67  F016         	goto	u4090
  4399  002CC6  EF65  F016         	goto	u4091
  4400  002CCA                     u4091:
  4401  002CCA  EF77  F016         	goto	l3914
  4402  002CCE                     u4090:
  4403  002CCE                     
  4404                           ; BSR set to: 0
  4405  002CCE  1F84               	comf	(___aomod@divisor+7)& (0+255),f,b
  4406  002CD0  1F83               	comf	(___aomod@divisor+6)& (0+255),f,b
  4407  002CD2  1F82               	comf	(___aomod@divisor+5)& (0+255),f,b
  4408  002CD4  1F81               	comf	(___aomod@divisor+4)& (0+255),f,b
  4409  002CD6  1F80               	comf	(___aomod@divisor+3)& (0+255),f,b
  4410  002CD8  1F7F               	comf	(___aomod@divisor+2)& (0+255),f,b
  4411  002CDA  1F7E               	comf	(___aomod@divisor+1)& (0+255),f,b
  4412  002CDC  6D7D               	negf	___aomod@divisor& (0+255),b
  4413  002CDE  0E00               	movlw	0
  4414  002CE0  237E               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  4415  002CE2  237F               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  4416  002CE4  2380               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  4417  002CE6  2381               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  4418  002CE8  2382               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  4419  002CEA  2383               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  4420  002CEC  2384               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  4421  002CEE                     l3914:
  4422                           
  4423                           ; BSR set to: 0
  4424  002CEE  517D               	movf	___aomod@divisor& (0+255),w,b
  4425  002CF0  117E               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  4426  002CF2  117F               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  4427  002CF4  1180               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  4428  002CF6  1181               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  4429  002CF8  1182               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  4430  002CFA  1183               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  4431  002CFC  1184               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  4432  002CFE  B4D8               	btfsc	status,2,c
  4433  002D00  EF84  F016         	goto	u4101
  4434  002D04  EF86  F016         	goto	u4100
  4435  002D08                     u4101:
  4436  002D08  EFCE  F016         	goto	l3930
  4437  002D0C                     u4100:
  4438  002D0C                     
  4439                           ; BSR set to: 0
  4440  002D0C  0E01               	movlw	1
  4441  002D0E  6F85               	movwf	___aomod@counter& (0+255),b
  4442  002D10  EF94  F016         	goto	l3920
  4443  002D14                     l3918:
  4444                           
  4445                           ; BSR set to: 0
  4446  002D14  90D8               	bcf	status,0,c
  4447  002D16  377D               	rlcf	___aomod@divisor& (0+255),f,b
  4448  002D18  377E               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  4449  002D1A  377F               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  4450  002D1C  3780               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  4451  002D1E  3781               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  4452  002D20  3782               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  4453  002D22  3783               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  4454  002D24  3784               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  4455  002D26  2B85               	incf	___aomod@counter& (0+255),f,b
  4456  002D28                     l3920:
  4457                           
  4458                           ; BSR set to: 0
  4459  002D28  AF84               	btfss	(___aomod@divisor+7)& (0+255),7,b
  4460  002D2A  EF99  F016         	goto	u4111
  4461  002D2E  EF9B  F016         	goto	u4110
  4462  002D32                     u4111:
  4463  002D32  EF8A  F016         	goto	l3918
  4464  002D36                     u4110:
  4465  002D36                     l3922:
  4466                           
  4467                           ; BSR set to: 0
  4468  002D36  517D               	movf	___aomod@divisor& (0+255),w,b
  4469  002D38  5D75               	subwf	___aomod@dividend& (0+255),w,b
  4470  002D3A  517E               	movf	(___aomod@divisor+1)& (0+255),w,b
  4471  002D3C  5976               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  4472  002D3E  517F               	movf	(___aomod@divisor+2)& (0+255),w,b
  4473  002D40  5977               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  4474  002D42  5180               	movf	(___aomod@divisor+3)& (0+255),w,b
  4475  002D44  5978               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  4476  002D46  5181               	movf	(___aomod@divisor+4)& (0+255),w,b
  4477  002D48  5979               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  4478  002D4A  5182               	movf	(___aomod@divisor+5)& (0+255),w,b
  4479  002D4C  597A               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  4480  002D4E  5183               	movf	(___aomod@divisor+6)& (0+255),w,b
  4481  002D50  597B               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  4482  002D52  5184               	movf	(___aomod@divisor+7)& (0+255),w,b
  4483  002D54  597C               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  4484  002D56  A0D8               	btfss	status,0,c
  4485  002D58  EFB0  F016         	goto	u4121
  4486  002D5C  EFB2  F016         	goto	u4120
  4487  002D60                     u4121:
  4488  002D60  EFC2  F016         	goto	l3926
  4489  002D64                     u4120:
  4490  002D64                     
  4491                           ; BSR set to: 0
  4492  002D64  517D               	movf	___aomod@divisor& (0+255),w,b
  4493  002D66  5F75               	subwf	___aomod@dividend& (0+255),f,b
  4494  002D68  517E               	movf	(___aomod@divisor+1)& (0+255),w,b
  4495  002D6A  5B76               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  4496  002D6C  517F               	movf	(___aomod@divisor+2)& (0+255),w,b
  4497  002D6E  5B77               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  4498  002D70  5180               	movf	(___aomod@divisor+3)& (0+255),w,b
  4499  002D72  5B78               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  4500  002D74  5181               	movf	(___aomod@divisor+4)& (0+255),w,b
  4501  002D76  5B79               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  4502  002D78  5182               	movf	(___aomod@divisor+5)& (0+255),w,b
  4503  002D7A  5B7A               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  4504  002D7C  5183               	movf	(___aomod@divisor+6)& (0+255),w,b
  4505  002D7E  5B7B               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  4506  002D80  5184               	movf	(___aomod@divisor+7)& (0+255),w,b
  4507  002D82  5B7C               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  4508  002D84                     l3926:
  4509                           
  4510                           ; BSR set to: 0
  4511  002D84  90D8               	bcf	status,0,c
  4512  002D86  3384               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  4513  002D88  3383               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  4514  002D8A  3382               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  4515  002D8C  3381               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  4516  002D8E  3380               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  4517  002D90  337F               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  4518  002D92  337E               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  4519  002D94  337D               	rrcf	___aomod@divisor& (0+255),f,b
  4520  002D96                     
  4521                           ; BSR set to: 0
  4522  002D96  2F85               	decfsz	___aomod@counter& (0+255),f,b
  4523  002D98  EF9B  F016         	goto	l3922
  4524  002D9C                     l3930:
  4525                           
  4526                           ; BSR set to: 0
  4527  002D9C  5186               	movf	___aomod@sign& (0+255),w,b
  4528  002D9E  B4D8               	btfsc	status,2,c
  4529  002DA0  EFD4  F016         	goto	u4131
  4530  002DA4  EFD6  F016         	goto	u4130
  4531  002DA8                     u4131:
  4532  002DA8  EFE6  F016         	goto	l3934
  4533  002DAC                     u4130:
  4534  002DAC                     
  4535                           ; BSR set to: 0
  4536  002DAC  1F7C               	comf	(___aomod@dividend+7)& (0+255),f,b
  4537  002DAE  1F7B               	comf	(___aomod@dividend+6)& (0+255),f,b
  4538  002DB0  1F7A               	comf	(___aomod@dividend+5)& (0+255),f,b
  4539  002DB2  1F79               	comf	(___aomod@dividend+4)& (0+255),f,b
  4540  002DB4  1F78               	comf	(___aomod@dividend+3)& (0+255),f,b
  4541  002DB6  1F77               	comf	(___aomod@dividend+2)& (0+255),f,b
  4542  002DB8  1F76               	comf	(___aomod@dividend+1)& (0+255),f,b
  4543  002DBA  6D75               	negf	___aomod@dividend& (0+255),b
  4544  002DBC  0E00               	movlw	0
  4545  002DBE  2376               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  4546  002DC0  2377               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  4547  002DC2  2378               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  4548  002DC4  2379               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  4549  002DC6  237A               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  4550  002DC8  237B               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  4551  002DCA  237C               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  4552  002DCC                     l3934:
  4553                           
  4554                           ; BSR set to: 0
  4555  002DCC  C075  F075         	movff	___aomod@dividend,?___aomod
  4556  002DD0  C076  F076         	movff	___aomod@dividend+1,?___aomod+1
  4557  002DD4  C077  F077         	movff	___aomod@dividend+2,?___aomod+2
  4558  002DD8  C078  F078         	movff	___aomod@dividend+3,?___aomod+3
  4559  002DDC  C079  F079         	movff	___aomod@dividend+4,?___aomod+4
  4560  002DE0  C07A  F07A         	movff	___aomod@dividend+5,?___aomod+5
  4561  002DE4  C07B  F07B         	movff	___aomod@dividend+6,?___aomod+6
  4562  002DE8  C07C  F07C         	movff	___aomod@dividend+7,?___aomod+7
  4563  002DEC                     
  4564                           ; BSR set to: 0
  4565  002DEC  0012               	return		;funcret
  4566  002DEE                     __end_of___aomod:
  4567                           	callstack 0
  4568                           
  4569 ;; *************** function ___aodiv *****************
  4570 ;; Defined at:
  4571 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;  dividend        8   21[BANK0 ] long long 
  4574 ;;  divisor         8   29[BANK0 ] long long 
  4575 ;; Auto vars:     Size  Location     Type
  4576 ;;  quotient        8   39[BANK0 ] long long 
  4577 ;;  sign            1   38[BANK0 ] unsigned char 
  4578 ;;  counter         1   37[BANK0 ] unsigned char 
  4579 ;; Return value:  Size  Location     Type
  4580 ;;                  8   21[BANK0 ] long long 
  4581 ;; Registers used:
  4582 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4583 ;; Tracked objects:
  4584 ;;		On entry : 0/0
  4585 ;;		On exit  : 0/0
  4586 ;;		Unchanged: 0/0
  4587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4588 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4589 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4591 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4592 ;;Total ram usage:       26 bytes
  4593 ;; Hardware stack levels used:    1
  4594 ;; Hardware stack levels required when called:   10
  4595 ;; This function calls:
  4596 ;;		Nothing
  4597 ;; This function is called by:
  4598 ;;		_dtoa
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601                           
  4602                           	psect	text14
  4603  0027F0                     __ptext14:
  4604                           	callstack 0
  4605  0027F0                     ___aodiv:
  4606                           	callstack 15
  4607  0027F0  0E00               	movlw	0
  4608  0027F2  0100               	movlb	0	; () banked
  4609  0027F4  6F86               	movwf	___aodiv@sign& (0+255),b
  4610  0027F6                     
  4611                           ; BSR set to: 0
  4612  0027F6  BF84               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
  4613  0027F8  EF02  F014         	goto	u4010
  4614  0027FC  EF00  F014         	goto	u4011
  4615  002800                     u4011:
  4616  002800  EF14  F014         	goto	l3866
  4617  002804                     u4010:
  4618  002804                     
  4619                           ; BSR set to: 0
  4620  002804  1F84               	comf	(___aodiv@divisor+7)& (0+255),f,b
  4621  002806  1F83               	comf	(___aodiv@divisor+6)& (0+255),f,b
  4622  002808  1F82               	comf	(___aodiv@divisor+5)& (0+255),f,b
  4623  00280A  1F81               	comf	(___aodiv@divisor+4)& (0+255),f,b
  4624  00280C  1F80               	comf	(___aodiv@divisor+3)& (0+255),f,b
  4625  00280E  1F7F               	comf	(___aodiv@divisor+2)& (0+255),f,b
  4626  002810  1F7E               	comf	(___aodiv@divisor+1)& (0+255),f,b
  4627  002812  6D7D               	negf	___aodiv@divisor& (0+255),b
  4628  002814  0E00               	movlw	0
  4629  002816  237E               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  4630  002818  237F               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  4631  00281A  2380               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  4632  00281C  2381               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  4633  00281E  2382               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  4634  002820  2383               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  4635  002822  2384               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  4636  002824                     
  4637                           ; BSR set to: 0
  4638  002824  0E01               	movlw	1
  4639  002826  6F86               	movwf	___aodiv@sign& (0+255),b
  4640  002828                     l3866:
  4641                           
  4642                           ; BSR set to: 0
  4643  002828  BF7C               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
  4644  00282A  EF1B  F014         	goto	u4020
  4645  00282E  EF19  F014         	goto	u4021
  4646  002832                     u4021:
  4647  002832  EF2D  F014         	goto	l3872
  4648  002836                     u4020:
  4649  002836                     
  4650                           ; BSR set to: 0
  4651  002836  1F7C               	comf	(___aodiv@dividend+7)& (0+255),f,b
  4652  002838  1F7B               	comf	(___aodiv@dividend+6)& (0+255),f,b
  4653  00283A  1F7A               	comf	(___aodiv@dividend+5)& (0+255),f,b
  4654  00283C  1F79               	comf	(___aodiv@dividend+4)& (0+255),f,b
  4655  00283E  1F78               	comf	(___aodiv@dividend+3)& (0+255),f,b
  4656  002840  1F77               	comf	(___aodiv@dividend+2)& (0+255),f,b
  4657  002842  1F76               	comf	(___aodiv@dividend+1)& (0+255),f,b
  4658  002844  6D75               	negf	___aodiv@dividend& (0+255),b
  4659  002846  0E00               	movlw	0
  4660  002848  2376               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  4661  00284A  2377               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  4662  00284C  2378               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  4663  00284E  2379               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  4664  002850  237A               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  4665  002852  237B               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  4666  002854  237C               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  4667  002856                     
  4668                           ; BSR set to: 0
  4669  002856  0E01               	movlw	1
  4670  002858  1B86               	xorwf	___aodiv@sign& (0+255),f,b
  4671  00285A                     l3872:
  4672                           
  4673                           ; BSR set to: 0
  4674  00285A  EE20  F087         	lfsr	2,___aodiv@quotient
  4675  00285E  0E07               	movlw	7
  4676  002860                     u4031:
  4677  002860  6ADE               	clrf	postinc2,c
  4678  002862  06E8               	decf	wreg,f,c
  4679  002864  E2FD               	bc	u4031
  4680  002866                     
  4681                           ; BSR set to: 0
  4682  002866  517D               	movf	___aodiv@divisor& (0+255),w,b
  4683  002868  117E               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  4684  00286A  117F               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  4685  00286C  1180               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  4686  00286E  1181               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  4687  002870  1182               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  4688  002872  1183               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  4689  002874  1184               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  4690  002876  B4D8               	btfsc	status,2,c
  4691  002878  EF40  F014         	goto	u4041
  4692  00287C  EF42  F014         	goto	u4040
  4693  002880                     u4041:
  4694  002880  EF94  F014         	goto	l3894
  4695  002884                     u4040:
  4696  002884                     
  4697                           ; BSR set to: 0
  4698  002884  0E01               	movlw	1
  4699  002886  6F85               	movwf	___aodiv@counter& (0+255),b
  4700  002888  EF50  F014         	goto	l3880
  4701  00288C                     l3878:
  4702                           
  4703                           ; BSR set to: 0
  4704  00288C  90D8               	bcf	status,0,c
  4705  00288E  377D               	rlcf	___aodiv@divisor& (0+255),f,b
  4706  002890  377E               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  4707  002892  377F               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  4708  002894  3780               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  4709  002896  3781               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  4710  002898  3782               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  4711  00289A  3783               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  4712  00289C  3784               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  4713  00289E  2B85               	incf	___aodiv@counter& (0+255),f,b
  4714  0028A0                     l3880:
  4715                           
  4716                           ; BSR set to: 0
  4717  0028A0  AF84               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  4718  0028A2  EF55  F014         	goto	u4051
  4719  0028A6  EF57  F014         	goto	u4050
  4720  0028AA                     u4051:
  4721  0028AA  EF46  F014         	goto	l3878
  4722  0028AE                     u4050:
  4723  0028AE                     l3882:
  4724                           
  4725                           ; BSR set to: 0
  4726  0028AE  90D8               	bcf	status,0,c
  4727  0028B0  3787               	rlcf	___aodiv@quotient& (0+255),f,b
  4728  0028B2  3788               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  4729  0028B4  3789               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  4730  0028B6  378A               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  4731  0028B8  378B               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  4732  0028BA  378C               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  4733  0028BC  378D               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  4734  0028BE  378E               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  4735  0028C0                     
  4736                           ; BSR set to: 0
  4737  0028C0  517D               	movf	___aodiv@divisor& (0+255),w,b
  4738  0028C2  5D75               	subwf	___aodiv@dividend& (0+255),w,b
  4739  0028C4  517E               	movf	(___aodiv@divisor+1)& (0+255),w,b
  4740  0028C6  5976               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  4741  0028C8  517F               	movf	(___aodiv@divisor+2)& (0+255),w,b
  4742  0028CA  5977               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  4743  0028CC  5180               	movf	(___aodiv@divisor+3)& (0+255),w,b
  4744  0028CE  5978               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  4745  0028D0  5181               	movf	(___aodiv@divisor+4)& (0+255),w,b
  4746  0028D2  5979               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  4747  0028D4  5182               	movf	(___aodiv@divisor+5)& (0+255),w,b
  4748  0028D6  597A               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  4749  0028D8  5183               	movf	(___aodiv@divisor+6)& (0+255),w,b
  4750  0028DA  597B               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  4751  0028DC  5184               	movf	(___aodiv@divisor+7)& (0+255),w,b
  4752  0028DE  597C               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  4753  0028E0  A0D8               	btfss	status,0,c
  4754  0028E2  EF75  F014         	goto	u4061
  4755  0028E6  EF77  F014         	goto	u4060
  4756  0028EA                     u4061:
  4757  0028EA  EF88  F014         	goto	l3890
  4758  0028EE                     u4060:
  4759  0028EE                     
  4760                           ; BSR set to: 0
  4761  0028EE  517D               	movf	___aodiv@divisor& (0+255),w,b
  4762  0028F0  5F75               	subwf	___aodiv@dividend& (0+255),f,b
  4763  0028F2  517E               	movf	(___aodiv@divisor+1)& (0+255),w,b
  4764  0028F4  5B76               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  4765  0028F6  517F               	movf	(___aodiv@divisor+2)& (0+255),w,b
  4766  0028F8  5B77               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  4767  0028FA  5180               	movf	(___aodiv@divisor+3)& (0+255),w,b
  4768  0028FC  5B78               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  4769  0028FE  5181               	movf	(___aodiv@divisor+4)& (0+255),w,b
  4770  002900  5B79               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  4771  002902  5182               	movf	(___aodiv@divisor+5)& (0+255),w,b
  4772  002904  5B7A               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  4773  002906  5183               	movf	(___aodiv@divisor+6)& (0+255),w,b
  4774  002908  5B7B               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  4775  00290A  5184               	movf	(___aodiv@divisor+7)& (0+255),w,b
  4776  00290C  5B7C               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  4777  00290E                     
  4778                           ; BSR set to: 0
  4779  00290E  8187               	bsf	___aodiv@quotient& (0+255),0,b
  4780  002910                     l3890:
  4781                           
  4782                           ; BSR set to: 0
  4783  002910  90D8               	bcf	status,0,c
  4784  002912  3384               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  4785  002914  3383               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  4786  002916  3382               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  4787  002918  3381               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  4788  00291A  3380               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  4789  00291C  337F               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  4790  00291E  337E               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  4791  002920  337D               	rrcf	___aodiv@divisor& (0+255),f,b
  4792  002922                     
  4793                           ; BSR set to: 0
  4794  002922  2F85               	decfsz	___aodiv@counter& (0+255),f,b
  4795  002924  EF57  F014         	goto	l3882
  4796  002928                     l3894:
  4797                           
  4798                           ; BSR set to: 0
  4799  002928  5186               	movf	___aodiv@sign& (0+255),w,b
  4800  00292A  B4D8               	btfsc	status,2,c
  4801  00292C  EF9A  F014         	goto	u4071
  4802  002930  EF9C  F014         	goto	u4070
  4803  002934                     u4071:
  4804  002934  EFAC  F014         	goto	l3898
  4805  002938                     u4070:
  4806  002938                     
  4807                           ; BSR set to: 0
  4808  002938  1F8E               	comf	(___aodiv@quotient+7)& (0+255),f,b
  4809  00293A  1F8D               	comf	(___aodiv@quotient+6)& (0+255),f,b
  4810  00293C  1F8C               	comf	(___aodiv@quotient+5)& (0+255),f,b
  4811  00293E  1F8B               	comf	(___aodiv@quotient+4)& (0+255),f,b
  4812  002940  1F8A               	comf	(___aodiv@quotient+3)& (0+255),f,b
  4813  002942  1F89               	comf	(___aodiv@quotient+2)& (0+255),f,b
  4814  002944  1F88               	comf	(___aodiv@quotient+1)& (0+255),f,b
  4815  002946  6D87               	negf	___aodiv@quotient& (0+255),b
  4816  002948  0E00               	movlw	0
  4817  00294A  2388               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  4818  00294C  2389               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  4819  00294E  238A               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  4820  002950  238B               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  4821  002952  238C               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  4822  002954  238D               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  4823  002956  238E               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  4824  002958                     l3898:
  4825                           
  4826                           ; BSR set to: 0
  4827  002958  C087  F075         	movff	___aodiv@quotient,?___aodiv
  4828  00295C  C088  F076         	movff	___aodiv@quotient+1,?___aodiv+1
  4829  002960  C089  F077         	movff	___aodiv@quotient+2,?___aodiv+2
  4830  002964  C08A  F078         	movff	___aodiv@quotient+3,?___aodiv+3
  4831  002968  C08B  F079         	movff	___aodiv@quotient+4,?___aodiv+4
  4832  00296C  C08C  F07A         	movff	___aodiv@quotient+5,?___aodiv+5
  4833  002970  C08D  F07B         	movff	___aodiv@quotient+6,?___aodiv+6
  4834  002974  C08E  F07C         	movff	___aodiv@quotient+7,?___aodiv+7
  4835  002978                     
  4836                           ; BSR set to: 0
  4837  002978  0012               	return		;funcret
  4838  00297A                     __end_of___aodiv:
  4839                           	callstack 0
  4840                           
  4841 ;; *************** function _atoi *****************
  4842 ;; Defined at:
  4843 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  4844 ;; Parameters:    Size  Location     Type
  4845 ;;  s               2   28[BANK0 ] PTR const unsigned char 
  4846 ;;		 -> STR_4(6), STR_3(19), STR_2(19), STR_1(5), 
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;  n               2   41[BANK0 ] int 
  4849 ;;  neg             2   34[BANK0 ] int 
  4850 ;; Return value:  Size  Location     Type
  4851 ;;                  2   28[BANK0 ] int 
  4852 ;; Registers used:
  4853 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4854 ;; Tracked objects:
  4855 ;;		On entry : 0/0
  4856 ;;		On exit  : 0/0
  4857 ;;		Unchanged: 0/0
  4858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4859 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4860 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4861 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4862 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4863 ;;Total ram usage:       15 bytes
  4864 ;; Hardware stack levels used:    1
  4865 ;; Hardware stack levels required when called:   11
  4866 ;; This function calls:
  4867 ;;		___wmul
  4868 ;;		_isdigit
  4869 ;;		_isspace
  4870 ;; This function is called by:
  4871 ;;		_vfpfcnvrt
  4872 ;; This function uses a non-reentrant model
  4873 ;;
  4874                           
  4875                           	psect	text15
  4876  002318                     __ptext15:
  4877                           	callstack 0
  4878  002318                     _atoi:
  4879                           	callstack 15
  4880  002318  0E00               	movlw	0
  4881  00231A  0100               	movlb	0	; () banked
  4882  00231C  6F8A               	movwf	(atoi@n+1)& (0+255),b
  4883  00231E  0E00               	movlw	0
  4884  002320  6F89               	movwf	atoi@n& (0+255),b
  4885  002322  0E00               	movlw	0
  4886  002324  6F83               	movwf	(atoi@neg+1)& (0+255),b
  4887  002326  0E00               	movlw	0
  4888  002328  6F82               	movwf	atoi@neg& (0+255),b
  4889  00232A  EF99  F011         	goto	l4106
  4890  00232E                     l4104:
  4891                           
  4892                           ; BSR set to: 0
  4893  00232E  4B7C               	infsnz	atoi@s& (0+255),f,b
  4894  002330  2B7D               	incf	(atoi@s+1)& (0+255),f,b
  4895  002332                     l4106:
  4896                           
  4897                           ; BSR set to: 0
  4898  002332  0E01               	movlw	1
  4899  002334  6F88               	movwf	_atoi$1832& (0+255),b
  4900  002336                     
  4901                           ; BSR set to: 0
  4902  002336  C07C  FFF6         	movff	atoi@s,tblptrl
  4903  00233A  C07D  FFF7         	movff	atoi@s+1,tblptrh
  4904  00233E                     	if	0	;tblptru may be non-zero
  4905  00233E                     	endif
  4906  00233E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4907  00233E  0E00               	movlw	low (__mediumconst shr (0+16))
  4908  002340  6EF8               	movwf	tblptru,c
  4909  002342                     	endif
  4910  002342  0008               	tblrd		*
  4911  002344  50F5               	movf	tablat,w,c
  4912  002346  0A20               	xorlw	32
  4913  002348  B4D8               	btfsc	status,2,c
  4914  00234A  EFA9  F011         	goto	u4491
  4915  00234E  EFAB  F011         	goto	u4490
  4916  002352                     u4491:
  4917  002352  EFCA  F011         	goto	l4114
  4918  002356                     u4490:
  4919  002356                     
  4920                           ; BSR set to: 0
  4921  002356  0EF7               	movlw	247
  4922  002358  6F7E               	movwf	??_atoi& (0+255),b
  4923  00235A  0EFF               	movlw	255
  4924  00235C  6F7F               	movwf	(??_atoi+1)& (0+255),b
  4925  00235E  C07C  FFF6         	movff	atoi@s,tblptrl
  4926  002362  C07D  FFF7         	movff	atoi@s+1,tblptrh
  4927  002366                     	if	0	;tblptru may be non-zero
  4928  002366                     	endif
  4929  002366                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4930  002366  0E00               	movlw	low (__mediumconst shr (0+16))
  4931  002368  6EF8               	movwf	tblptru,c
  4932  00236A                     	endif
  4933  00236A  0008               	tblrd		*
  4934  00236C  50F5               	movf	tablat,w,c
  4935  00236E  6F80               	movwf	(??_atoi+2)& (0+255),b
  4936  002370  6B81               	clrf	(??_atoi+3)& (0+255),b
  4937  002372  517E               	movf	??_atoi& (0+255),w,b
  4938  002374  2780               	addwf	(??_atoi+2)& (0+255),f,b
  4939  002376  517F               	movf	(??_atoi+1)& (0+255),w,b
  4940  002378  2381               	addwfc	(??_atoi+3)& (0+255),f,b
  4941  00237A  5181               	movf	(??_atoi+3)& (0+255),w,b
  4942  00237C  E109               	bnz	u4500
  4943  00237E  0E05               	movlw	5
  4944  002380  5D80               	subwf	(??_atoi+2)& (0+255),w,b
  4945  002382  A0D8               	btfss	status,0,c
  4946  002384  EFC6  F011         	goto	u4501
  4947  002388  EFC8  F011         	goto	u4500
  4948  00238C                     u4501:
  4949  00238C  EFCA  F011         	goto	l4114
  4950  002390                     u4500:
  4951  002390                     
  4952                           ; BSR set to: 0
  4953  002390  0E00               	movlw	0
  4954  002392  6F88               	movwf	_atoi$1832& (0+255),b
  4955  002394                     l4114:
  4956                           
  4957                           ; BSR set to: 0
  4958  002394  C088  F084         	movff	_atoi$1832,_atoi$1831
  4959  002398  6B85               	clrf	(_atoi$1831+1)& (0+255),b
  4960  00239A                     
  4961                           ; BSR set to: 0
  4962  00239A  5184               	movf	_atoi$1831& (0+255),w,b
  4963  00239C  1185               	iorwf	(_atoi$1831+1)& (0+255),w,b
  4964  00239E  A4D8               	btfss	status,2,c
  4965  0023A0  EFD4  F011         	goto	u4511
  4966  0023A4  EFD6  F011         	goto	u4510
  4967  0023A8                     u4511:
  4968  0023A8  EF97  F011         	goto	l4104
  4969  0023AC                     u4510:
  4970  0023AC  EFE0  F011         	goto	l4124
  4971  0023B0                     l4120:
  4972                           
  4973                           ; BSR set to: 0
  4974  0023B0  0E00               	movlw	0
  4975  0023B2  6F83               	movwf	(atoi@neg+1)& (0+255),b
  4976  0023B4  0E01               	movlw	1
  4977  0023B6  6F82               	movwf	atoi@neg& (0+255),b
  4978  0023B8                     l4122:
  4979                           
  4980                           ; BSR set to: 0
  4981  0023B8  4B7C               	infsnz	atoi@s& (0+255),f,b
  4982  0023BA  2B7D               	incf	(atoi@s+1)& (0+255),f,b
  4983  0023BC  EF1A  F012         	goto	l4130
  4984  0023C0                     l4124:
  4985                           
  4986                           ; BSR set to: 0
  4987  0023C0  C07C  FFF6         	movff	atoi@s,tblptrl
  4988  0023C4  C07D  FFF7         	movff	atoi@s+1,tblptrh
  4989  0023C8                     	if	0	;tblptru may be non-zero
  4990  0023C8                     	endif
  4991  0023C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4992  0023C8  0E00               	movlw	low (__mediumconst shr (0+16))
  4993  0023CA  6EF8               	movwf	tblptru,c
  4994  0023CC                     	endif
  4995  0023CC  0008               	tblrd		*
  4996  0023CE  50F5               	movf	tablat,w,c
  4997  0023D0  6F7E               	movwf	??_atoi& (0+255),b
  4998  0023D2  6B7F               	clrf	(??_atoi+1)& (0+255),b
  4999                           
  5000                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5001                           ; Switch size 1, requested type "simple"
  5002                           ; Number of cases is 1, Range of values is 0 to 0
  5003                           ; switch strategies available:
  5004                           ; Name         Instructions Cycles
  5005                           ; simple_byte            4     3 (average)
  5006                           ;	Chosen strategy is simple_byte
  5007  0023D4  517F               	movf	(??_atoi+1)& (0+255),w,b
  5008  0023D6  0A00               	xorlw	0	; case 0
  5009  0023D8  B4D8               	btfsc	status,2,c
  5010  0023DA  EFF1  F011         	goto	l5118
  5011  0023DE  EF1A  F012         	goto	l4130
  5012  0023E2                     l5118:
  5013                           
  5014                           ; BSR set to: 0
  5015                           ; Switch size 1, requested type "simple"
  5016                           ; Number of cases is 2, Range of values is 43 to 45
  5017                           ; switch strategies available:
  5018                           ; Name         Instructions Cycles
  5019                           ; simple_byte            7     4 (average)
  5020                           ;	Chosen strategy is simple_byte
  5021  0023E2  517E               	movf	??_atoi& (0+255),w,b
  5022  0023E4  0A2B               	xorlw	43	; case 43
  5023  0023E6  B4D8               	btfsc	status,2,c
  5024  0023E8  EFDC  F011         	goto	l4122
  5025  0023EC  0A06               	xorlw	6	; case 45
  5026  0023EE  B4D8               	btfsc	status,2,c
  5027  0023F0  EFD8  F011         	goto	l4120
  5028  0023F4  EF1A  F012         	goto	l4130
  5029  0023F8                     l4126:
  5030                           
  5031                           ; BSR set to: 0
  5032  0023F8  C089  F075         	movff	atoi@n,___wmul@multiplier
  5033  0023FC  C08A  F076         	movff	atoi@n+1,___wmul@multiplier+1
  5034  002400  0E00               	movlw	0
  5035  002402  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5036  002404  0E0A               	movlw	10
  5037  002406  6F77               	movwf	___wmul@multiplicand& (0+255),b
  5038  002408  EC53  F01D         	call	___wmul	;wreg free
  5039  00240C  C07C  FFF6         	movff	atoi@s,tblptrl
  5040  002410  C07D  FFF7         	movff	atoi@s+1,tblptrh
  5041  002414                     	if	0	;tblptru may be non-zero
  5042  002414                     	endif
  5043  002414                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5044  002414  0E00               	movlw	low (__mediumconst shr (0+16))
  5045  002416  6EF8               	movwf	tblptru,c
  5046  002418                     	endif
  5047  002418  0008               	tblrd		*
  5048  00241A  50F5               	movf	tablat,w,c
  5049  00241C  0100               	movlb	0	; () banked
  5050  00241E  5F75               	subwf	?___wmul& (0+255),f,b
  5051  002420  0E00               	movlw	0
  5052  002422  5B76               	subwfb	(?___wmul+1)& (0+255),f,b
  5053  002424  0E30               	movlw	48
  5054  002426  2575               	addwf	?___wmul& (0+255),w,b
  5055  002428  6F89               	movwf	atoi@n& (0+255),b
  5056  00242A  0E00               	movlw	0
  5057  00242C  2176               	addwfc	(?___wmul+1)& (0+255),w,b
  5058  00242E  6F8A               	movwf	(atoi@n+1)& (0+255),b
  5059  002430  EFDC  F011         	goto	l4122
  5060  002434                     l4130:
  5061                           
  5062                           ; BSR set to: 0
  5063  002434  0ED0               	movlw	208
  5064  002436  6F7E               	movwf	??_atoi& (0+255),b
  5065  002438  0EFF               	movlw	255
  5066  00243A  6F7F               	movwf	(??_atoi+1)& (0+255),b
  5067  00243C  C07C  FFF6         	movff	atoi@s,tblptrl
  5068  002440  C07D  FFF7         	movff	atoi@s+1,tblptrh
  5069  002444                     	if	0	;tblptru may be non-zero
  5070  002444                     	endif
  5071  002444                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5072  002444  0E00               	movlw	low (__mediumconst shr (0+16))
  5073  002446  6EF8               	movwf	tblptru,c
  5074  002448                     	endif
  5075  002448  0008               	tblrd		*
  5076  00244A  50F5               	movf	tablat,w,c
  5077  00244C  6F80               	movwf	(??_atoi+2)& (0+255),b
  5078  00244E  6B81               	clrf	(??_atoi+3)& (0+255),b
  5079  002450  517E               	movf	??_atoi& (0+255),w,b
  5080  002452  2780               	addwf	(??_atoi+2)& (0+255),f,b
  5081  002454  517F               	movf	(??_atoi+1)& (0+255),w,b
  5082  002456  2381               	addwfc	(??_atoi+3)& (0+255),f,b
  5083  002458  5181               	movf	(??_atoi+3)& (0+255),w,b
  5084  00245A  E10A               	bnz	u4520
  5085  00245C  0E0A               	movlw	10
  5086  00245E  5D80               	subwf	(??_atoi+2)& (0+255),w,b
  5087  002460  A0D8               	btfss	status,0,c
  5088  002462  EF35  F012         	goto	u4521
  5089  002466  EF38  F012         	goto	u4520
  5090  00246A                     u4521:
  5091  00246A  0E01               	movlw	1
  5092  00246C  EF39  F012         	goto	u4530
  5093  002470                     u4520:
  5094  002470  0E00               	movlw	0
  5095  002472                     u4530:
  5096  002472  6F86               	movwf	_atoi$1833& (0+255),b
  5097  002474  6B87               	clrf	(_atoi$1833+1)& (0+255),b
  5098  002476                     
  5099                           ; BSR set to: 0
  5100  002476  5186               	movf	_atoi$1833& (0+255),w,b
  5101  002478  1187               	iorwf	(_atoi$1833+1)& (0+255),w,b
  5102  00247A  A4D8               	btfss	status,2,c
  5103  00247C  EF42  F012         	goto	u4541
  5104  002480  EF44  F012         	goto	u4540
  5105  002484                     u4541:
  5106  002484  EFFC  F011         	goto	l4126
  5107  002488                     u4540:
  5108  002488                     
  5109                           ; BSR set to: 0
  5110  002488  5182               	movf	atoi@neg& (0+255),w,b
  5111  00248A  1183               	iorwf	(atoi@neg+1)& (0+255),w,b
  5112  00248C  A4D8               	btfss	status,2,c
  5113  00248E  EF4B  F012         	goto	u4551
  5114  002492  EF4D  F012         	goto	u4550
  5115  002496                     u4551:
  5116  002496  EF5B  F012         	goto	l1077
  5117  00249A                     u4550:
  5118  00249A                     
  5119                           ; BSR set to: 0
  5120  00249A  C089  F07E         	movff	atoi@n,??_atoi
  5121  00249E  C08A  F07F         	movff	atoi@n+1,??_atoi+1
  5122  0024A2  1F7E               	comf	??_atoi& (0+255),f,b
  5123  0024A4  1F7F               	comf	(??_atoi+1)& (0+255),f,b
  5124  0024A6  4B7E               	infsnz	??_atoi& (0+255),f,b
  5125  0024A8  2B7F               	incf	(??_atoi+1)& (0+255),f,b
  5126  0024AA  C07E  F07C         	movff	??_atoi,?_atoi
  5127  0024AE  C07F  F07D         	movff	??_atoi+1,?_atoi+1
  5128  0024B2  EF5F  F012         	goto	l1080
  5129  0024B6                     l1077:
  5130                           
  5131                           ; BSR set to: 0
  5132  0024B6  C089  F07C         	movff	atoi@n,?_atoi
  5133  0024BA  C08A  F07D         	movff	atoi@n+1,?_atoi+1
  5134  0024BE                     l1080:
  5135                           
  5136                           ; BSR set to: 0
  5137  0024BE  0012               	return		;funcret
  5138  0024C0                     __end_of_atoi:
  5139                           	callstack 0
  5140                           
  5141 ;; *************** function _isspace *****************
  5142 ;; Defined at:
  5143 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  5144 ;; Parameters:    Size  Location     Type
  5145 ;;  c               2   21[BANK0 ] int 
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;		None
  5148 ;; Return value:  Size  Location     Type
  5149 ;;                  2   21[BANK0 ] int 
  5150 ;; Registers used:
  5151 ;;		wreg, status,2, status,0
  5152 ;; Tracked objects:
  5153 ;;		On entry : 0/0
  5154 ;;		On exit  : 0/0
  5155 ;;		Unchanged: 0/0
  5156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5157 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5158 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5159 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5160 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5161 ;;Total ram usage:        7 bytes
  5162 ;; Hardware stack levels used:    1
  5163 ;; Hardware stack levels required when called:   10
  5164 ;; This function calls:
  5165 ;;		Nothing
  5166 ;; This function is called by:
  5167 ;;		_atoi
  5168 ;; This function uses a non-reentrant model
  5169 ;;
  5170                           
  5171                           	psect	text16
  5172  0036E8                     __ptext16:
  5173                           	callstack 0
  5174  0036E8                     _isspace:
  5175                           	callstack 15
  5176  0036E8  0E01               	movlw	1
  5177  0036EA  0100               	movlb	0	; () banked
  5178  0036EC  6F7B               	movwf	_isspace$1849& (0+255),b
  5179  0036EE                     
  5180                           ; BSR set to: 0
  5181  0036EE  0E20               	movlw	32
  5182  0036F0  1975               	xorwf	isspace@c& (0+255),w,b
  5183  0036F2  1176               	iorwf	(isspace@c+1)& (0+255),w,b
  5184  0036F4  B4D8               	btfsc	status,2,c
  5185  0036F6  EF7F  F01B         	goto	u4211
  5186  0036FA  EF81  F01B         	goto	u4210
  5187  0036FE                     u4211:
  5188  0036FE  EF9A  F01B         	goto	l3976
  5189  003702                     u4210:
  5190  003702                     
  5191                           ; BSR set to: 0
  5192  003702  0EF7               	movlw	247
  5193  003704  6F77               	movwf	??_isspace& (0+255),b
  5194  003706  0EFF               	movlw	255
  5195  003708  6F78               	movwf	(??_isspace+1)& (0+255),b
  5196  00370A  C075  F079         	movff	isspace@c,??_isspace+2
  5197  00370E  C076  F07A         	movff	isspace@c+1,??_isspace+3
  5198  003712  5177               	movf	??_isspace& (0+255),w,b
  5199  003714  2779               	addwf	(??_isspace+2)& (0+255),f,b
  5200  003716  5178               	movf	(??_isspace+1)& (0+255),w,b
  5201  003718  237A               	addwfc	(??_isspace+3)& (0+255),f,b
  5202  00371A  517A               	movf	(??_isspace+3)& (0+255),w,b
  5203  00371C  E109               	bnz	u4220
  5204  00371E  0E05               	movlw	5
  5205  003720  5D79               	subwf	(??_isspace+2)& (0+255),w,b
  5206  003722  A0D8               	btfss	status,0,c
  5207  003724  EF96  F01B         	goto	u4221
  5208  003728  EF98  F01B         	goto	u4220
  5209  00372C                     u4221:
  5210  00372C  EF9A  F01B         	goto	l3976
  5211  003730                     u4220:
  5212  003730                     
  5213                           ; BSR set to: 0
  5214  003730  0E00               	movlw	0
  5215  003732  6F7B               	movwf	_isspace$1849& (0+255),b
  5216  003734                     l3976:
  5217                           
  5218                           ; BSR set to: 0
  5219  003734  C07B  F075         	movff	_isspace$1849,?_isspace
  5220  003738  6B76               	clrf	(?_isspace+1)& (0+255),b
  5221  00373A                     
  5222                           ; BSR set to: 0
  5223  00373A  0012               	return		;funcret
  5224  00373C                     __end_of_isspace:
  5225                           	callstack 0
  5226                           
  5227 ;; *************** function _isdigit *****************
  5228 ;; Defined at:
  5229 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  5230 ;; Parameters:    Size  Location     Type
  5231 ;;  c               2   21[BANK0 ] int 
  5232 ;; Auto vars:     Size  Location     Type
  5233 ;;		None
  5234 ;; Return value:  Size  Location     Type
  5235 ;;                  2   21[BANK0 ] int 
  5236 ;; Registers used:
  5237 ;;		wreg, status,2, status,0
  5238 ;; Tracked objects:
  5239 ;;		On entry : 0/0
  5240 ;;		On exit  : 0/0
  5241 ;;		Unchanged: 0/0
  5242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5243 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5245 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5246 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5247 ;;Total ram usage:        6 bytes
  5248 ;; Hardware stack levels used:    1
  5249 ;; Hardware stack levels required when called:   10
  5250 ;; This function calls:
  5251 ;;		Nothing
  5252 ;; This function is called by:
  5253 ;;		_vfpfcnvrt
  5254 ;;		_atoi
  5255 ;; This function uses a non-reentrant model
  5256 ;;
  5257                           
  5258                           	psect	text17
  5259  003998                     __ptext17:
  5260                           	callstack 0
  5261  003998                     _isdigit:
  5262                           	callstack 16
  5263  003998  0ED0               	movlw	208
  5264  00399A  0100               	movlb	0	; () banked
  5265  00399C  6F77               	movwf	??_isdigit& (0+255),b
  5266  00399E  0EFF               	movlw	255
  5267  0039A0  6F78               	movwf	(??_isdigit+1)& (0+255),b
  5268  0039A2  C075  F079         	movff	isdigit@c,??_isdigit+2
  5269  0039A6  C076  F07A         	movff	isdigit@c+1,??_isdigit+3
  5270  0039AA  5177               	movf	??_isdigit& (0+255),w,b
  5271  0039AC  2779               	addwf	(??_isdigit+2)& (0+255),f,b
  5272  0039AE  5178               	movf	(??_isdigit+1)& (0+255),w,b
  5273  0039B0  237A               	addwfc	(??_isdigit+3)& (0+255),f,b
  5274  0039B2  517A               	movf	(??_isdigit+3)& (0+255),w,b
  5275  0039B4  E10A               	bnz	u4190
  5276  0039B6  0E0A               	movlw	10
  5277  0039B8  5D79               	subwf	(??_isdigit+2)& (0+255),w,b
  5278  0039BA  A0D8               	btfss	status,0,c
  5279  0039BC  EFE2  F01C         	goto	u4191
  5280  0039C0  EFE5  F01C         	goto	u4190
  5281  0039C4                     u4191:
  5282  0039C4  0E01               	movlw	1
  5283  0039C6  EFE6  F01C         	goto	u4200
  5284  0039CA                     u4190:
  5285  0039CA  0E00               	movlw	0
  5286  0039CC                     u4200:
  5287  0039CC  6F75               	movwf	?_isdigit& (0+255),b
  5288  0039CE  6B76               	clrf	(?_isdigit+1)& (0+255),b
  5289  0039D0                     
  5290                           ; BSR set to: 0
  5291  0039D0  0012               	return		;funcret
  5292  0039D2                     __end_of_isdigit:
  5293                           	callstack 0
  5294                           
  5295 ;; *************** function ___wmul *****************
  5296 ;; Defined at:
  5297 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  5298 ;; Parameters:    Size  Location     Type
  5299 ;;  multiplier      2   21[BANK0 ] unsigned int 
  5300 ;;  multiplicand    2   23[BANK0 ] unsigned int 
  5301 ;; Auto vars:     Size  Location     Type
  5302 ;;  product         2   25[BANK0 ] unsigned int 
  5303 ;; Return value:  Size  Location     Type
  5304 ;;                  2   21[BANK0 ] unsigned int 
  5305 ;; Registers used:
  5306 ;;		wreg, status,2, status,0, prodl, prodh
  5307 ;; Tracked objects:
  5308 ;;		On entry : 0/0
  5309 ;;		On exit  : 0/0
  5310 ;;		Unchanged: 0/0
  5311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5312 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5313 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5315 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5316 ;;Total ram usage:        6 bytes
  5317 ;; Hardware stack levels used:    1
  5318 ;; Hardware stack levels required when called:   10
  5319 ;; This function calls:
  5320 ;;		Nothing
  5321 ;; This function is called by:
  5322 ;;		_time_now
  5323 ;;		_atoi
  5324 ;; This function uses a non-reentrant model
  5325 ;;
  5326                           
  5327                           	psect	text18
  5328  003AA6                     __ptext18:
  5329                           	callstack 0
  5330  003AA6                     ___wmul:
  5331                           	callstack 15
  5332  003AA6  0100               	movlb	0	; () banked
  5333  003AA8  5175               	movf	___wmul@multiplier& (0+255),w,b
  5334  003AAA  0377               	mulwf	___wmul@multiplicand& (0+255),b
  5335  003AAC  CFF3 F079          	movff	prodl,___wmul@product
  5336  003AB0  CFF4 F07A          	movff	prodh,___wmul@product+1
  5337  003AB4  5175               	movf	___wmul@multiplier& (0+255),w,b
  5338  003AB6  0378               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5339  003AB8  50F3               	movf	243,w,c
  5340  003ABA  277A               	addwf	(___wmul@product+1)& (0+255),f,b
  5341  003ABC  5176               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5342  003ABE  0377               	mulwf	___wmul@multiplicand& (0+255),b
  5343  003AC0  50F3               	movf	243,w,c
  5344  003AC2  277A               	addwf	(___wmul@product+1)& (0+255),f,b
  5345  003AC4                     
  5346                           ; BSR set to: 0
  5347  003AC4  C079  F075         	movff	___wmul@product,?___wmul
  5348  003AC8  C07A  F076         	movff	___wmul@product+1,?___wmul+1
  5349  003ACC                     
  5350                           ; BSR set to: 0
  5351  003ACC  0012               	return		;funcret
  5352  003ACE                     __end_of___wmul:
  5353                           	callstack 0
  5354                           
  5355 ;; *************** function ___lwmod *****************
  5356 ;; Defined at:
  5357 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwmod.c"
  5358 ;; Parameters:    Size  Location     Type
  5359 ;;  dividend        2   21[BANK0 ] unsigned int 
  5360 ;;  divisor         2   23[BANK0 ] unsigned int 
  5361 ;; Auto vars:     Size  Location     Type
  5362 ;;  counter         1   25[BANK0 ] unsigned char 
  5363 ;; Return value:  Size  Location     Type
  5364 ;;                  2   21[BANK0 ] unsigned int 
  5365 ;; Registers used:
  5366 ;;		wreg, status,2, status,0
  5367 ;; Tracked objects:
  5368 ;;		On entry : 0/0
  5369 ;;		On exit  : 0/0
  5370 ;;		Unchanged: 0/0
  5371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5372 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5373 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5375 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5376 ;;Total ram usage:        5 bytes
  5377 ;; Hardware stack levels used:    1
  5378 ;; Hardware stack levels required when called:   10
  5379 ;; This function calls:
  5380 ;;		Nothing
  5381 ;; This function is called by:
  5382 ;;		_time_now
  5383 ;; This function uses a non-reentrant model
  5384 ;;
  5385                           
  5386                           	psect	text19
  5387  0035C8                     __ptext19:
  5388                           	callstack 0
  5389  0035C8                     ___lwmod:
  5390                           	callstack 19
  5391  0035C8  0100               	movlb	0	; () banked
  5392  0035CA  5177               	movf	___lwmod@divisor& (0+255),w,b
  5393  0035CC  1178               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  5394  0035CE  B4D8               	btfsc	status,2,c
  5395  0035D0  EFEC  F01A         	goto	u5421
  5396  0035D4  EFEE  F01A         	goto	u5420
  5397  0035D8                     u5421:
  5398  0035D8  EF12  F01B         	goto	l743
  5399  0035DC                     u5420:
  5400  0035DC                     
  5401                           ; BSR set to: 0
  5402  0035DC  0E01               	movlw	1
  5403  0035DE  6F79               	movwf	___lwmod@counter& (0+255),b
  5404  0035E0  EFF6  F01A         	goto	l4716
  5405  0035E4                     l4714:
  5406                           
  5407                           ; BSR set to: 0
  5408  0035E4  90D8               	bcf	status,0,c
  5409  0035E6  3777               	rlcf	___lwmod@divisor& (0+255),f,b
  5410  0035E8  3778               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  5411  0035EA  2B79               	incf	___lwmod@counter& (0+255),f,b
  5412  0035EC                     l4716:
  5413                           
  5414                           ; BSR set to: 0
  5415  0035EC  AF78               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  5416  0035EE  EFFB  F01A         	goto	u5431
  5417  0035F2  EFFD  F01A         	goto	u5430
  5418  0035F6                     u5431:
  5419  0035F6  EFF2  F01A         	goto	l4714
  5420  0035FA                     u5430:
  5421  0035FA                     l4718:
  5422                           
  5423                           ; BSR set to: 0
  5424  0035FA  5177               	movf	___lwmod@divisor& (0+255),w,b
  5425  0035FC  5D75               	subwf	___lwmod@dividend& (0+255),w,b
  5426  0035FE  5178               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5427  003600  5976               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  5428  003602  A0D8               	btfss	status,0,c
  5429  003604  EF06  F01B         	goto	u5441
  5430  003608  EF08  F01B         	goto	u5440
  5431  00360C                     u5441:
  5432  00360C  EF0C  F01B         	goto	l4722
  5433  003610                     u5440:
  5434  003610                     
  5435                           ; BSR set to: 0
  5436  003610  5177               	movf	___lwmod@divisor& (0+255),w,b
  5437  003612  5F75               	subwf	___lwmod@dividend& (0+255),f,b
  5438  003614  5178               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5439  003616  5B76               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  5440  003618                     l4722:
  5441                           
  5442                           ; BSR set to: 0
  5443  003618  90D8               	bcf	status,0,c
  5444  00361A  3378               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  5445  00361C  3377               	rrcf	___lwmod@divisor& (0+255),f,b
  5446  00361E                     
  5447                           ; BSR set to: 0
  5448  00361E  2F79               	decfsz	___lwmod@counter& (0+255),f,b
  5449  003620  EFFD  F01A         	goto	l4718
  5450  003624                     l743:
  5451                           
  5452                           ; BSR set to: 0
  5453  003624  C075  F075         	movff	___lwmod@dividend,?___lwmod
  5454  003628  C076  F076         	movff	___lwmod@dividend+1,?___lwmod+1
  5455  00362C                     
  5456                           ; BSR set to: 0
  5457  00362C  0012               	return		;funcret
  5458  00362E                     __end_of___lwmod:
  5459                           	callstack 0
  5460                           
  5461 ;; *************** function ___lwdiv *****************
  5462 ;; Defined at:
  5463 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwdiv.c"
  5464 ;; Parameters:    Size  Location     Type
  5465 ;;  dividend        2   21[BANK0 ] unsigned int 
  5466 ;;  divisor         2   23[BANK0 ] unsigned int 
  5467 ;; Auto vars:     Size  Location     Type
  5468 ;;  quotient        2   26[BANK0 ] unsigned int 
  5469 ;;  counter         1   25[BANK0 ] unsigned char 
  5470 ;; Return value:  Size  Location     Type
  5471 ;;                  2   21[BANK0 ] unsigned int 
  5472 ;; Registers used:
  5473 ;;		wreg, status,2, status,0
  5474 ;; Tracked objects:
  5475 ;;		On entry : 0/0
  5476 ;;		On exit  : 0/0
  5477 ;;		Unchanged: 0/0
  5478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5479 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5480 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5482 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5483 ;;Total ram usage:        7 bytes
  5484 ;; Hardware stack levels used:    1
  5485 ;; Hardware stack levels required when called:   10
  5486 ;; This function calls:
  5487 ;;		Nothing
  5488 ;; This function is called by:
  5489 ;;		_time_now
  5490 ;; This function uses a non-reentrant model
  5491 ;;
  5492                           
  5493                           	psect	text20
  5494  003480                     __ptext20:
  5495                           	callstack 0
  5496  003480                     ___lwdiv:
  5497                           	callstack 19
  5498  003480  0E00               	movlw	0
  5499  003482  0100               	movlb	0	; () banked
  5500  003484  6F7B               	movwf	(___lwdiv@quotient+1)& (0+255),b
  5501  003486  0E00               	movlw	0
  5502  003488  6F7A               	movwf	___lwdiv@quotient& (0+255),b
  5503  00348A                     
  5504                           ; BSR set to: 0
  5505  00348A  5177               	movf	___lwdiv@divisor& (0+255),w,b
  5506  00348C  1178               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  5507  00348E  B4D8               	btfsc	status,2,c
  5508  003490  EF4C  F01A         	goto	u5391
  5509  003494  EF4E  F01A         	goto	u5390
  5510  003498                     u5391:
  5511  003498  EF76  F01A         	goto	l733
  5512  00349C                     u5390:
  5513  00349C                     
  5514                           ; BSR set to: 0
  5515  00349C  0E01               	movlw	1
  5516  00349E  6F79               	movwf	___lwdiv@counter& (0+255),b
  5517  0034A0  EF56  F01A         	goto	l4696
  5518  0034A4                     l4694:
  5519                           
  5520                           ; BSR set to: 0
  5521  0034A4  90D8               	bcf	status,0,c
  5522  0034A6  3777               	rlcf	___lwdiv@divisor& (0+255),f,b
  5523  0034A8  3778               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  5524  0034AA  2B79               	incf	___lwdiv@counter& (0+255),f,b
  5525  0034AC                     l4696:
  5526                           
  5527                           ; BSR set to: 0
  5528  0034AC  AF78               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  5529  0034AE  EF5B  F01A         	goto	u5401
  5530  0034B2  EF5D  F01A         	goto	u5400
  5531  0034B6                     u5401:
  5532  0034B6  EF52  F01A         	goto	l4694
  5533  0034BA                     u5400:
  5534  0034BA                     l4698:
  5535                           
  5536                           ; BSR set to: 0
  5537  0034BA  90D8               	bcf	status,0,c
  5538  0034BC  377A               	rlcf	___lwdiv@quotient& (0+255),f,b
  5539  0034BE  377B               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  5540  0034C0                     
  5541                           ; BSR set to: 0
  5542  0034C0  5177               	movf	___lwdiv@divisor& (0+255),w,b
  5543  0034C2  5D75               	subwf	___lwdiv@dividend& (0+255),w,b
  5544  0034C4  5178               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5545  0034C6  5976               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  5546  0034C8  A0D8               	btfss	status,0,c
  5547  0034CA  EF69  F01A         	goto	u5411
  5548  0034CE  EF6B  F01A         	goto	u5410
  5549  0034D2                     u5411:
  5550  0034D2  EF70  F01A         	goto	l4706
  5551  0034D6                     u5410:
  5552  0034D6                     
  5553                           ; BSR set to: 0
  5554  0034D6  5177               	movf	___lwdiv@divisor& (0+255),w,b
  5555  0034D8  5F75               	subwf	___lwdiv@dividend& (0+255),f,b
  5556  0034DA  5178               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5557  0034DC  5B76               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  5558  0034DE                     
  5559                           ; BSR set to: 0
  5560  0034DE  817A               	bsf	___lwdiv@quotient& (0+255),0,b
  5561  0034E0                     l4706:
  5562                           
  5563                           ; BSR set to: 0
  5564  0034E0  90D8               	bcf	status,0,c
  5565  0034E2  3378               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  5566  0034E4  3377               	rrcf	___lwdiv@divisor& (0+255),f,b
  5567  0034E6                     
  5568                           ; BSR set to: 0
  5569  0034E6  2F79               	decfsz	___lwdiv@counter& (0+255),f,b
  5570  0034E8  EF5D  F01A         	goto	l4698
  5571  0034EC                     l733:
  5572                           
  5573                           ; BSR set to: 0
  5574  0034EC  C07A  F075         	movff	___lwdiv@quotient,?___lwdiv
  5575  0034F0  C07B  F076         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5576  0034F4                     
  5577                           ; BSR set to: 0
  5578  0034F4  0012               	return		;funcret
  5579  0034F6                     __end_of___lwdiv:
  5580                           	callstack 0
  5581                           
  5582 ;; *************** function _Timer0_init *****************
  5583 ;; Defined at:
  5584 ;;		line 8 in file "timers.c"
  5585 ;; Parameters:    Size  Location     Type
  5586 ;;		None
  5587 ;; Auto vars:     Size  Location     Type
  5588 ;;		None
  5589 ;; Return value:  Size  Location     Type
  5590 ;;                  1    wreg      void 
  5591 ;; Registers used:
  5592 ;;		wreg, status,2
  5593 ;; Tracked objects:
  5594 ;;		On entry : 0/0
  5595 ;;		On exit  : 0/0
  5596 ;;		Unchanged: 0/0
  5597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5602 ;;Total ram usage:        0 bytes
  5603 ;; Hardware stack levels used:    1
  5604 ;; Hardware stack levels required when called:   10
  5605 ;; This function calls:
  5606 ;;		Nothing
  5607 ;; This function is called by:
  5608 ;;		_main
  5609 ;; This function uses a non-reentrant model
  5610 ;;
  5611                           
  5612                           	psect	text21
  5613  003B6A                     __ptext21:
  5614                           	callstack 0
  5615  003B6A                     _Timer0_init:
  5616                           	callstack 20
  5617  003B6A                     
  5618                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
  5619  003B6A  50D6               	movf	214,w,c	;volatile
  5620  003B6C  0B1F               	andlw	-225
  5621  003B6E  0940               	iorlw	64
  5622  003B70  6ED6               	movwf	214,c	;volatile
  5623  003B72                     
  5624                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
  5625  003B72  88D6               	bsf	214,4,c	;volatile
  5626                           
  5627                           ;timers.c: 13:     T0CON1bits.T0CKPS = (0b0000);
  5628  003B74  0EF0               	movlw	-16
  5629  003B76  16D6               	andwf	214,f,c	;volatile
  5630  003B78                     
  5631                           ;timers.c: 14:     T0CON0bits.T016BIT=1;
  5632  003B78  88D5               	bsf	213,4,c	;volatile
  5633                           
  5634                           ;timers.c: 17:     TMR0H = (0b11101110);
  5635  003B7A  0EEE               	movlw	238
  5636  003B7C  6ED4               	movwf	212,c	;volatile
  5637                           
  5638                           ;timers.c: 18:     TMR0L = (0b10100100);
  5639  003B7E  0EA4               	movlw	164
  5640  003B80  6ED3               	movwf	211,c	;volatile
  5641  003B82                     
  5642                           ;timers.c: 20:     T0CON0bits.T0EN=1;
  5643  003B82  8ED5               	bsf	213,7,c	;volatile
  5644  003B84  0012               	return		;funcret
  5645  003B86                     __end_of_Timer0_init:
  5646                           	callstack 0
  5647                           
  5648 ;; *************** function _LEDarray_init *****************
  5649 ;; Defined at:
  5650 ;;		line 7 in file "LEDarray.c"
  5651 ;; Parameters:    Size  Location     Type
  5652 ;;		None
  5653 ;; Auto vars:     Size  Location     Type
  5654 ;;		None
  5655 ;; Return value:  Size  Location     Type
  5656 ;;                  1    wreg      void 
  5657 ;; Registers used:
  5658 ;;		None
  5659 ;; Tracked objects:
  5660 ;;		On entry : 0/0
  5661 ;;		On exit  : 0/0
  5662 ;;		Unchanged: 0/0
  5663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5668 ;;Total ram usage:        0 bytes
  5669 ;; Hardware stack levels used:    1
  5670 ;; Hardware stack levels required when called:   10
  5671 ;; This function calls:
  5672 ;;		Nothing
  5673 ;; This function is called by:
  5674 ;;		_main
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           
  5678                           	psect	text22
  5679  003B1E                     __ptext22:
  5680                           	callstack 0
  5681  003B1E                     _LEDarray_init:
  5682                           	callstack 20
  5683  003B1E                     
  5684                           ;LEDarray.c: 11:     TRISGbits.TRISG0 = 0;
  5685  003B1E  9087               	bcf	135,0,c	;volatile
  5686                           
  5687                           ;LEDarray.c: 12:     TRISGbits.TRISG1 = 0;
  5688  003B20  9287               	bcf	135,1,c	;volatile
  5689                           
  5690                           ;LEDarray.c: 13:     TRISAbits.TRISA2 = 0;
  5691  003B22  9481               	bcf	129,2,c	;volatile
  5692                           
  5693                           ;LEDarray.c: 14:     TRISFbits.TRISF6 = 0;
  5694  003B24  9C86               	bcf	134,6,c	;volatile
  5695                           
  5696                           ;LEDarray.c: 15:     TRISAbits.TRISA4 = 0;
  5697  003B26  9881               	bcf	129,4,c	;volatile
  5698                           
  5699                           ;LEDarray.c: 16:     TRISAbits.TRISA5 = 0;
  5700  003B28  9A81               	bcf	129,5,c	;volatile
  5701                           
  5702                           ;LEDarray.c: 17:     TRISFbits.TRISF0 = 0;
  5703  003B2A  9086               	bcf	134,0,c	;volatile
  5704                           
  5705                           ;LEDarray.c: 18:     TRISBbits.TRISB0 = 0;
  5706  003B2C  9082               	bcf	130,0,c	;volatile
  5707                           
  5708                           ;LEDarray.c: 19:     TRISBbits.TRISB1 = 0;
  5709  003B2E  9282               	bcf	130,1,c	;volatile
  5710                           
  5711                           ;LEDarray.c: 23:     LATGbits.LATG0 = 0;
  5712  003B30  907F               	bcf	127,0,c	;volatile
  5713                           
  5714                           ;LEDarray.c: 24:     LATGbits.LATG1 = 0;
  5715  003B32  927F               	bcf	127,1,c	;volatile
  5716                           
  5717                           ;LEDarray.c: 25:     LATAbits.LATA2 = 0;
  5718  003B34  9479               	bcf	121,2,c	;volatile
  5719                           
  5720                           ;LEDarray.c: 26:     LATFbits.LATF6 = 0;
  5721  003B36  9C7E               	bcf	126,6,c	;volatile
  5722                           
  5723                           ;LEDarray.c: 27:     LATAbits.LATA4 = 0;
  5724  003B38  9879               	bcf	121,4,c	;volatile
  5725                           
  5726                           ;LEDarray.c: 28:     LATAbits.LATA5 = 0;
  5727  003B3A  9A79               	bcf	121,5,c	;volatile
  5728                           
  5729                           ;LEDarray.c: 29:     LATFbits.LATF0 = 0;
  5730  003B3C  907E               	bcf	126,0,c	;volatile
  5731                           
  5732                           ;LEDarray.c: 30:     LATBbits.LATB0 = 0;
  5733  003B3E  907A               	bcf	122,0,c	;volatile
  5734                           
  5735                           ;LEDarray.c: 31:     LATBbits.LATB1 = 0;
  5736  003B40  927A               	bcf	122,1,c	;volatile
  5737  003B42  0012               	return		;funcret
  5738  003B44                     __end_of_LEDarray_init:
  5739                           	callstack 0
  5740                           
  5741 ;; *************** function _LEDarray_disp_bin *****************
  5742 ;; Defined at:
  5743 ;;		line 37 in file "LEDarray.c"
  5744 ;; Parameters:    Size  Location     Type
  5745 ;;  number          2   21[BANK0 ] unsigned int 
  5746 ;; Auto vars:     Size  Location     Type
  5747 ;;		None
  5748 ;; Return value:  Size  Location     Type
  5749 ;;                  1    wreg      void 
  5750 ;; Registers used:
  5751 ;;		None
  5752 ;; Tracked objects:
  5753 ;;		On entry : 0/0
  5754 ;;		On exit  : 0/0
  5755 ;;		Unchanged: 0/0
  5756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5757 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5760 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5761 ;;Total ram usage:        2 bytes
  5762 ;; Hardware stack levels used:    1
  5763 ;; Hardware stack levels required when called:   10
  5764 ;; This function calls:
  5765 ;;		Nothing
  5766 ;; This function is called by:
  5767 ;;		_main
  5768 ;; This function uses a non-reentrant model
  5769 ;;
  5770                           
  5771                           	psect	text23
  5772  0030E8                     __ptext23:
  5773                           	callstack 0
  5774  0030E8                     _LEDarray_disp_bin:
  5775                           	callstack 20
  5776  0030E8                     
  5777                           ;LEDarray.c: 37: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 38: {;LEDarray.
      +                          c: 39:     if (number & 0b000000001){LATGbits.LATG0 = 1;}
  5778  0030E8  0100               	movlb	0	; () banked
  5779  0030EA  A175               	btfss	LEDarray_disp_bin@number& (0+255),0,b
  5780  0030EC  EF7A  F018         	goto	u5491
  5781  0030F0  EF7C  F018         	goto	u5490
  5782  0030F4                     u5491:
  5783  0030F4  EF7F  F018         	goto	l77
  5784  0030F8                     u5490:
  5785  0030F8                     
  5786                           ; BSR set to: 0
  5787  0030F8  807F               	bsf	127,0,c	;volatile
  5788  0030FA  EF80  F018         	goto	l78
  5789  0030FE                     l77:
  5790                           
  5791                           ; BSR set to: 0
  5792  0030FE  907F               	bcf	127,0,c	;volatile
  5793  003100                     l78:
  5794                           
  5795                           ; BSR set to: 0
  5796                           ;LEDarray.c: 42:     if (number & 0b000000010){LATGbits.LATG1 = 1;}
  5797  003100  A375               	btfss	LEDarray_disp_bin@number& (0+255),1,b
  5798  003102  EF85  F018         	goto	u5501
  5799  003106  EF87  F018         	goto	u5500
  5800  00310A                     u5501:
  5801  00310A  EF8A  F018         	goto	l79
  5802  00310E                     u5500:
  5803  00310E                     
  5804                           ; BSR set to: 0
  5805  00310E  827F               	bsf	127,1,c	;volatile
  5806  003110  EF8B  F018         	goto	l80
  5807  003114                     l79:
  5808                           
  5809                           ; BSR set to: 0
  5810  003114  927F               	bcf	127,1,c	;volatile
  5811  003116                     l80:
  5812                           
  5813                           ; BSR set to: 0
  5814                           ;LEDarray.c: 45:     if (number & 0b000000100){LATAbits.LATA2 = 1;}
  5815  003116  A575               	btfss	LEDarray_disp_bin@number& (0+255),2,b
  5816  003118  EF90  F018         	goto	u5511
  5817  00311C  EF92  F018         	goto	u5510
  5818  003120                     u5511:
  5819  003120  EF95  F018         	goto	l81
  5820  003124                     u5510:
  5821  003124                     
  5822                           ; BSR set to: 0
  5823  003124  8479               	bsf	121,2,c	;volatile
  5824  003126  EF96  F018         	goto	l82
  5825  00312A                     l81:
  5826                           
  5827                           ; BSR set to: 0
  5828  00312A  9479               	bcf	121,2,c	;volatile
  5829  00312C                     l82:
  5830                           
  5831                           ; BSR set to: 0
  5832                           ;LEDarray.c: 48:     if (number & 0b000001000){LATFbits.LATF6 = 1;}
  5833  00312C  A775               	btfss	LEDarray_disp_bin@number& (0+255),3,b
  5834  00312E  EF9B  F018         	goto	u5521
  5835  003132  EF9D  F018         	goto	u5520
  5836  003136                     u5521:
  5837  003136  EFA0  F018         	goto	l83
  5838  00313A                     u5520:
  5839  00313A                     
  5840                           ; BSR set to: 0
  5841  00313A  8C7E               	bsf	126,6,c	;volatile
  5842  00313C  EFA1  F018         	goto	l84
  5843  003140                     l83:
  5844                           
  5845                           ; BSR set to: 0
  5846  003140  9C7E               	bcf	126,6,c	;volatile
  5847  003142                     l84:
  5848                           
  5849                           ; BSR set to: 0
  5850                           ;LEDarray.c: 51:     if (number & 0b000010000){LATAbits.LATA4 = 1;}
  5851  003142  A975               	btfss	LEDarray_disp_bin@number& (0+255),4,b
  5852  003144  EFA6  F018         	goto	u5531
  5853  003148  EFA8  F018         	goto	u5530
  5854  00314C                     u5531:
  5855  00314C  EFAB  F018         	goto	l85
  5856  003150                     u5530:
  5857  003150                     
  5858                           ; BSR set to: 0
  5859  003150  8879               	bsf	121,4,c	;volatile
  5860  003152  EFAC  F018         	goto	l86
  5861  003156                     l85:
  5862                           
  5863                           ; BSR set to: 0
  5864  003156  9879               	bcf	121,4,c	;volatile
  5865  003158                     l86:
  5866                           
  5867                           ; BSR set to: 0
  5868                           ;LEDarray.c: 54:     if (number & 0b000100000){LATAbits.LATA5 = 1;}
  5869  003158  AB75               	btfss	LEDarray_disp_bin@number& (0+255),5,b
  5870  00315A  EFB1  F018         	goto	u5541
  5871  00315E  EFB3  F018         	goto	u5540
  5872  003162                     u5541:
  5873  003162  EFB6  F018         	goto	l87
  5874  003166                     u5540:
  5875  003166                     
  5876                           ; BSR set to: 0
  5877  003166  8A79               	bsf	121,5,c	;volatile
  5878  003168  EFB7  F018         	goto	l88
  5879  00316C                     l87:
  5880                           
  5881                           ; BSR set to: 0
  5882  00316C  9A79               	bcf	121,5,c	;volatile
  5883  00316E                     l88:
  5884                           
  5885                           ; BSR set to: 0
  5886                           ;LEDarray.c: 57:     if (number & 0b001000000){LATFbits.LATF0 = 1;}
  5887  00316E  AD75               	btfss	LEDarray_disp_bin@number& (0+255),6,b
  5888  003170  EFBC  F018         	goto	u5551
  5889  003174  EFBE  F018         	goto	u5550
  5890  003178                     u5551:
  5891  003178  EFC1  F018         	goto	l89
  5892  00317C                     u5550:
  5893  00317C                     
  5894                           ; BSR set to: 0
  5895  00317C  807E               	bsf	126,0,c	;volatile
  5896  00317E  EFC2  F018         	goto	l90
  5897  003182                     l89:
  5898                           
  5899                           ; BSR set to: 0
  5900  003182  907E               	bcf	126,0,c	;volatile
  5901  003184                     l90:
  5902                           
  5903                           ; BSR set to: 0
  5904                           ;LEDarray.c: 60:     if (number & 0b010000000){LATBbits.LATB0 = 1;}
  5905  003184  AF75               	btfss	LEDarray_disp_bin@number& (0+255),7,b
  5906  003186  EFC7  F018         	goto	u5561
  5907  00318A  EFC9  F018         	goto	u5560
  5908  00318E                     u5561:
  5909  00318E  EFCC  F018         	goto	l91
  5910  003192                     u5560:
  5911  003192                     
  5912                           ; BSR set to: 0
  5913  003192  807A               	bsf	122,0,c	;volatile
  5914  003194  EFCD  F018         	goto	l92
  5915  003198                     l91:
  5916                           
  5917                           ; BSR set to: 0
  5918  003198  907A               	bcf	122,0,c	;volatile
  5919  00319A                     l92:
  5920                           
  5921                           ; BSR set to: 0
  5922                           ;LEDarray.c: 63:     if (number & 0b100000000){LATBbits.LATB1 = 1;}
  5923  00319A  A176               	btfss	(LEDarray_disp_bin@number+1)& (0+255),0,b
  5924  00319C  EFD2  F018         	goto	u5571
  5925  0031A0  EFD4  F018         	goto	u5570
  5926  0031A4                     u5571:
  5927  0031A4  EFD7  F018         	goto	l93
  5928  0031A8                     u5570:
  5929  0031A8                     
  5930                           ; BSR set to: 0
  5931  0031A8  827A               	bsf	122,1,c	;volatile
  5932  0031AA  EFD8  F018         	goto	l95
  5933  0031AE                     l93:
  5934                           
  5935                           ; BSR set to: 0
  5936  0031AE  927A               	bcf	122,1,c	;volatile
  5937  0031B0                     l95:
  5938                           
  5939                           ; BSR set to: 0
  5940  0031B0  0012               	return		;funcret
  5941  0031B2                     __end_of_LEDarray_disp_bin:
  5942                           	callstack 0
  5943                           
  5944 ;; *************** function _LCD_setline *****************
  5945 ;; Defined at:
  5946 ;;		line 129 in file "LCD.c"
  5947 ;; Parameters:    Size  Location     Type
  5948 ;;  line            1    wreg     unsigned char 
  5949 ;; Auto vars:     Size  Location     Type
  5950 ;;  line            1   24[BANK0 ] unsigned char 
  5951 ;; Return value:  Size  Location     Type
  5952 ;;                  1    wreg      void 
  5953 ;; Registers used:
  5954 ;;		wreg, status,2, status,0, cstack
  5955 ;; Tracked objects:
  5956 ;;		On entry : 0/0
  5957 ;;		On exit  : 0/0
  5958 ;;		Unchanged: 0/0
  5959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5961 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5963 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5964 ;;Total ram usage:        1 bytes
  5965 ;; Hardware stack levels used:    1
  5966 ;; Hardware stack levels required when called:   13
  5967 ;; This function calls:
  5968 ;;		_LCD_sendbyte
  5969 ;; This function is called by:
  5970 ;;		_main
  5971 ;; This function uses a non-reentrant model
  5972 ;;
  5973                           
  5974                           	psect	text24
  5975  0038A2                     __ptext24:
  5976                           	callstack 0
  5977  0038A2                     _LCD_setline:
  5978                           	callstack 17
  5979                           
  5980                           ; BSR set to: 0
  5981                           ;incstack = 0
  5982                           ;LCD_setline@line stored from wreg
  5983  0038A2  0100               	movlb	0	; () banked
  5984  0038A4  6F78               	movwf	LCD_setline@line& (0+255),b
  5985  0038A6                     
  5986                           ;LCD.c: 130:     if (line == 1) {
  5987  0038A6  0100               	movlb	0	; () banked
  5988  0038A8  0578               	decf	LCD_setline@line& (0+255),w,b
  5989  0038AA  A4D8               	btfss	status,2,c
  5990  0038AC  EF5A  F01C         	goto	u5461
  5991  0038B0  EF5C  F01C         	goto	u5460
  5992  0038B4                     u5461:
  5993  0038B4  EF61  F01C         	goto	l4766
  5994  0038B8                     u5460:
  5995  0038B8                     
  5996                           ; BSR set to: 0
  5997                           ;LCD.c: 131:         LCD_sendbyte(0x80, 0);
  5998  0038B8  0E00               	movlw	0
  5999  0038BA  6F76               	movwf	LCD_sendbyte@type& (0+255),b
  6000  0038BC  0E80               	movlw	128
  6001  0038BE  EC3C  F01D         	call	_LCD_sendbyte
  6002  0038C2                     l4766:
  6003                           
  6004                           ;LCD.c: 133:     if (line == 2) {
  6005  0038C2  0E02               	movlw	2
  6006  0038C4  0100               	movlb	0	; () banked
  6007  0038C6  1978               	xorwf	LCD_setline@line& (0+255),w,b
  6008  0038C8  A4D8               	btfss	status,2,c
  6009  0038CA  EF69  F01C         	goto	u5471
  6010  0038CE  EF6B  F01C         	goto	u5470
  6011  0038D2                     u5471:
  6012  0038D2  EF70  F01C         	goto	l41
  6013  0038D6                     u5470:
  6014  0038D6                     
  6015                           ; BSR set to: 0
  6016                           ;LCD.c: 134:         LCD_sendbyte(0xC0, 0);
  6017  0038D6  0E00               	movlw	0
  6018  0038D8  6F76               	movwf	LCD_sendbyte@type& (0+255),b
  6019  0038DA  0EC0               	movlw	192
  6020  0038DC  EC3C  F01D         	call	_LCD_sendbyte
  6021  0038E0                     l41:
  6022  0038E0  0012               	return		;funcret
  6023  0038E2                     __end_of_LCD_setline:
  6024                           	callstack 0
  6025                           
  6026 ;; *************** function _LCD_sendstring *****************
  6027 ;; Defined at:
  6028 ;;		line 141 in file "LCD.c"
  6029 ;; Parameters:    Size  Location     Type
  6030 ;;  string          2   24[BANK0 ] PTR unsigned char 
  6031 ;;		 -> main@datebuf(40), main@timebuf(40), 
  6032 ;; Auto vars:     Size  Location     Type
  6033 ;;		None
  6034 ;; Return value:  Size  Location     Type
  6035 ;;                  1    wreg      void 
  6036 ;; Registers used:
  6037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6038 ;; Tracked objects:
  6039 ;;		On entry : 0/0
  6040 ;;		On exit  : 0/0
  6041 ;;		Unchanged: 0/0
  6042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6043 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6046 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6047 ;;Total ram usage:        2 bytes
  6048 ;; Hardware stack levels used:    1
  6049 ;; Hardware stack levels required when called:   13
  6050 ;; This function calls:
  6051 ;;		_LCD_sendbyte
  6052 ;; This function is called by:
  6053 ;;		_main
  6054 ;; This function uses a non-reentrant model
  6055 ;;
  6056                           
  6057                           	psect	text25
  6058  0039D2                     __ptext25:
  6059                           	callstack 0
  6060  0039D2                     _LCD_sendstring:
  6061                           	callstack 17
  6062  0039D2                     
  6063                           ;LCD.c: 142:     while (*string != 0)
  6064  0039D2  EFF8  F01C         	goto	l4776
  6065  0039D6                     l4772:
  6066                           
  6067                           ;LCD.c: 143: {;LCD.c: 144:         LCD_sendbyte(*string++, 1);
  6068  0039D6  0E01               	movlw	1
  6069  0039D8  0100               	movlb	0	; () banked
  6070  0039DA  6F76               	movwf	LCD_sendbyte@type& (0+255),b
  6071  0039DC  C078  FFD9         	movff	LCD_sendstring@string,fsr2l
  6072  0039E0  C079  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  6073  0039E4  50DF               	movf	indf2,w,c
  6074  0039E6  EC3C  F01D         	call	_LCD_sendbyte
  6075  0039EA  0100               	movlb	0	; () banked
  6076  0039EC  4B78               	infsnz	LCD_sendstring@string& (0+255),f,b
  6077  0039EE  2B79               	incf	(LCD_sendstring@string+1)& (0+255),f,b
  6078  0039F0                     l4776:
  6079                           
  6080                           ;LCD.c: 142:     while (*string != 0)
  6081  0039F0  C078  FFD9         	movff	LCD_sendstring@string,fsr2l
  6082  0039F4  C079  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  6083  0039F8  50DF               	movf	indf2,w,c
  6084  0039FA  A4D8               	btfss	status,2,c
  6085  0039FC  EF02  F01D         	goto	u5481
  6086  003A00  EF04  F01D         	goto	u5480
  6087  003A04                     u5481:
  6088  003A04  EFEB  F01C         	goto	l4772
  6089  003A08                     u5480:
  6090  003A08  0012               	return		;funcret
  6091  003A0A                     __end_of_LCD_sendstring:
  6092                           	callstack 0
  6093                           
  6094 ;; *************** function _LCD_Init *****************
  6095 ;; Defined at:
  6096 ;;		line 66 in file "LCD.c"
  6097 ;; Parameters:    Size  Location     Type
  6098 ;;		None
  6099 ;; Auto vars:     Size  Location     Type
  6100 ;;		None
  6101 ;; Return value:  Size  Location     Type
  6102 ;;                  1    wreg      void 
  6103 ;; Registers used:
  6104 ;;		wreg, status,2, status,0, cstack
  6105 ;; Tracked objects:
  6106 ;;		On entry : 0/0
  6107 ;;		On exit  : 0/0
  6108 ;;		Unchanged: 0/0
  6109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6112 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6113 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6114 ;;Total ram usage:        2 bytes
  6115 ;; Hardware stack levels used:    1
  6116 ;; Hardware stack levels required when called:   13
  6117 ;; This function calls:
  6118 ;;		_LCD_sendbyte
  6119 ;;		_LCD_sendnibble
  6120 ;; This function is called by:
  6121 ;;		_main
  6122 ;; This function uses a non-reentrant model
  6123 ;;
  6124                           
  6125                           	psect	text26
  6126  003342                     __ptext26:
  6127                           	callstack 0
  6128  003342                     _LCD_Init:
  6129                           	callstack 17
  6130  003342                     
  6131                           ;LCD.c: 68:     TRISCbits.TRISC6 = 0;
  6132  003342  9C83               	bcf	131,6,c	;volatile
  6133                           
  6134                           ;LCD.c: 69:     TRISCbits.TRISC2 = 0;
  6135  003344  9483               	bcf	131,2,c	;volatile
  6136                           
  6137                           ;LCD.c: 70:     TRISBbits.TRISB3 = 0;
  6138  003346  9682               	bcf	130,3,c	;volatile
  6139                           
  6140                           ;LCD.c: 71:     TRISBbits.TRISB2 = 0;
  6141  003348  9482               	bcf	130,2,c	;volatile
  6142                           
  6143                           ;LCD.c: 72:     TRISEbits.TRISE3 = 0;
  6144  00334A  9685               	bcf	133,3,c	;volatile
  6145                           
  6146                           ;LCD.c: 73:     TRISEbits.TRISE1 = 0;
  6147  00334C  9285               	bcf	133,1,c	;volatile
  6148                           
  6149                           ;LCD.c: 78:     LATCbits.LATC6 = 0;
  6150  00334E  9C7B               	bcf	123,6,c	;volatile
  6151                           
  6152                           ;LCD.c: 79:     LATCbits.LATC2 = 0;
  6153  003350  947B               	bcf	123,2,c	;volatile
  6154                           
  6155                           ;LCD.c: 80:     LATBbits.LATB3 = 0;
  6156  003352  967A               	bcf	122,3,c	;volatile
  6157                           
  6158                           ;LCD.c: 81:     LATBbits.LATB2 = 0;
  6159  003354  947A               	bcf	122,2,c	;volatile
  6160                           
  6161                           ;LCD.c: 82:     LATEbits.LATE3 = 0;
  6162  003356  967D               	bcf	125,3,c	;volatile
  6163                           
  6164                           ;LCD.c: 83:     LATEbits.LATE1 = 0;
  6165  003358  927D               	bcf	125,1,c	;volatile
  6166  00335A                     
  6167                           ;LCD.c: 87:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6168  00335A  0E05               	movlw	5
  6169  00335C  0100               	movlb	0	; () banked
  6170  00335E  6F79               	movwf	(??_LCD_Init+1)& (0+255),b
  6171  003360  0E0F               	movlw	15
  6172  003362  6F78               	movwf	??_LCD_Init& (0+255),b
  6173  003364  0EF1               	movlw	241
  6174  003366                     u5847:
  6175  003366  2EE8               	decfsz	wreg,f,c
  6176  003368  D7FE               	bra	u5847
  6177  00336A  2F78               	decfsz	??_LCD_Init& (0+255),f,b
  6178  00336C  D7FC               	bra	u5847
  6179  00336E  2F79               	decfsz	(??_LCD_Init+1)& (0+255),f,b
  6180  003370  D7FA               	bra	u5847
  6181  003372                     
  6182                           ;LCD.c: 90:     LCD_sendnibble(0b0011);
  6183  003372  0E03               	movlw	3
  6184  003374  EC7B  F01A         	call	_LCD_sendnibble
  6185  003378                     
  6186                           ;LCD.c: 93:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  6187  003378  0ED5               	movlw	213
  6188  00337A                     u5857:
  6189  00337A  2EE8               	decfsz	wreg,f,c
  6190  00337C  D7FE               	bra	u5857
  6191  00337E  F000               	nop	
  6192  003380                     
  6193                           ;LCD.c: 96:     LCD_sendbyte(0b00101000, 0);
  6194  003380  0E00               	movlw	0
  6195  003382  0100               	movlb	0	; () banked
  6196  003384  6F76               	movwf	LCD_sendbyte@type& (0+255),b
  6197  003386  0E28               	movlw	40
  6198  003388  EC3C  F01D         	call	_LCD_sendbyte
  6199  00338C                     
  6200                           ;LCD.c: 99:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  6201  00338C  0ED5               	movlw	213
  6202  00338E                     u5867:
  6203  00338E  2EE8               	decfsz	wreg,f,c
  6204  003390  D7FE               	bra	u5867
  6205  003392  F000               	nop	
  6206  003394                     
  6207                           ;LCD.c: 102:     LCD_sendbyte(0b00101000, 0);
  6208  003394  0E00               	movlw	0
  6209  003396  0100               	movlb	0	; () banked
  6210  003398  6F76               	movwf	LCD_sendbyte@type& (0+255),b
  6211  00339A  0E28               	movlw	40
  6212  00339C  EC3C  F01D         	call	_LCD_sendbyte
  6213  0033A0                     
  6214                           ;LCD.c: 105:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  6215  0033A0  0ED5               	movlw	213
  6216  0033A2                     u5877:
  6217  0033A2  2EE8               	decfsz	wreg,f,c
  6218  0033A4  D7FE               	bra	u5877
  6219  0033A6  F000               	nop	
  6220  0033A8                     
  6221                           ;LCD.c: 108:     LCD_sendbyte(0b00001111, 0);
  6222  0033A8  0E00               	movlw	0
  6223  0033AA  0100               	movlb	0	; () banked
  6224  0033AC  6F76               	movwf	LCD_sendbyte@type& (0+255),b
  6225  0033AE  0E0F               	movlw	15
  6226  0033B0  EC3C  F01D         	call	_LCD_sendbyte
  6227  0033B4                     
  6228                           ;LCD.c: 111:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  6229  0033B4  0ED5               	movlw	213
  6230  0033B6                     u5887:
  6231  0033B6  2EE8               	decfsz	wreg,f,c
  6232  0033B8  D7FE               	bra	u5887
  6233  0033BA  F000               	nop	
  6234  0033BC                     
  6235                           ;LCD.c: 114:     LCD_sendbyte(0b00000001, 0);
  6236  0033BC  0E00               	movlw	0
  6237  0033BE  0100               	movlb	0	; () banked
  6238  0033C0  6F76               	movwf	LCD_sendbyte@type& (0+255),b
  6239  0033C2  0E01               	movlw	1
  6240  0033C4  EC3C  F01D         	call	_LCD_sendbyte
  6241  0033C8                     
  6242                           ;LCD.c: 117:     _delay((unsigned long)((1530)*(64000000/4000000.0)));
  6243  0033C8  0E20               	movlw	32
  6244  0033CA  0100               	movlb	0	; () banked
  6245  0033CC  6F78               	movwf	??_LCD_Init& (0+255),b
  6246  0033CE  0EC9               	movlw	201
  6247  0033D0                     u5897:
  6248  0033D0  2EE8               	decfsz	wreg,f,c
  6249  0033D2  D7FE               	bra	u5897
  6250  0033D4  2F78               	decfsz	??_LCD_Init& (0+255),f,b
  6251  0033D6  D7FC               	bra	u5897
  6252  0033D8  D000               	nop2	
  6253  0033DA                     
  6254                           ;LCD.c: 120:     LCD_sendbyte(0b00000101, 0);
  6255  0033DA  0E00               	movlw	0
  6256  0033DC  0100               	movlb	0	; () banked
  6257  0033DE  6F76               	movwf	LCD_sendbyte@type& (0+255),b
  6258  0033E0  0E05               	movlw	5
  6259  0033E2  EC3C  F01D         	call	_LCD_sendbyte
  6260  0033E6                     
  6261                           ;LCD.c: 123:     LCD_sendbyte(0b00001100, 0);
  6262  0033E6  0E00               	movlw	0
  6263  0033E8  0100               	movlb	0	; () banked
  6264  0033EA  6F76               	movwf	LCD_sendbyte@type& (0+255),b
  6265  0033EC  0E0C               	movlw	12
  6266  0033EE  EC3C  F01D         	call	_LCD_sendbyte
  6267  0033F2  0012               	return		;funcret
  6268  0033F4                     __end_of_LCD_Init:
  6269                           	callstack 0
  6270                           
  6271 ;; *************** function _LCD_sendbyte *****************
  6272 ;; Defined at:
  6273 ;;		line 53 in file "LCD.c"
  6274 ;; Parameters:    Size  Location     Type
  6275 ;;  Byte            1    wreg     unsigned char 
  6276 ;;  type            1   22[BANK0 ] unsigned char 
  6277 ;; Auto vars:     Size  Location     Type
  6278 ;;  Byte            1   23[BANK0 ] unsigned char 
  6279 ;; Return value:  Size  Location     Type
  6280 ;;                  1    wreg      void 
  6281 ;; Registers used:
  6282 ;;		wreg, status,2, status,0, cstack
  6283 ;; Tracked objects:
  6284 ;;		On entry : 0/0
  6285 ;;		On exit  : 0/0
  6286 ;;		Unchanged: 0/0
  6287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6288 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6289 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6291 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6292 ;;Total ram usage:        2 bytes
  6293 ;; Hardware stack levels used:    1
  6294 ;; Hardware stack levels required when called:   12
  6295 ;; This function calls:
  6296 ;;		_LCD_sendnibble
  6297 ;; This function is called by:
  6298 ;;		_LCD_Init
  6299 ;;		_LCD_setline
  6300 ;;		_LCD_sendstring
  6301 ;;		_main
  6302 ;;		_LCD_scroll
  6303 ;; This function uses a non-reentrant model
  6304 ;;
  6305                           
  6306                           	psect	text27
  6307  003A78                     __ptext27:
  6308                           	callstack 0
  6309  003A78                     _LCD_sendbyte:
  6310                           	callstack 17
  6311                           
  6312                           ;incstack = 0
  6313                           ;LCD_sendbyte@Byte stored from wreg
  6314  003A78  0100               	movlb	0	; () banked
  6315  003A7A  6F77               	movwf	LCD_sendbyte@Byte& (0+255),b
  6316  003A7C                     
  6317                           ;LCD.c: 54:     LATCbits.LATC6 = type;
  6318  003A7C  0100               	movlb	0	; () banked
  6319  003A7E  B176               	btfsc	LCD_sendbyte@type& (0+255),0,b
  6320  003A80  D002               	bra	u5385
  6321  003A82  9C7B               	bcf	123,6,c	;volatile
  6322  003A84  D001               	bra	u5386
  6323  003A86                     u5385:
  6324  003A86  8C7B               	bsf	123,6,c	;volatile
  6325  003A88                     u5386:
  6326  003A88                     
  6327                           ;LCD.c: 56:     LCD_sendnibble(Byte >> 4);
  6328  003A88  0100               	movlb	0	; () banked
  6329  003A8A  3977               	swapf	LCD_sendbyte@Byte& (0+255),w,b
  6330  003A8C  0B0F               	andlw	15
  6331  003A8E  EC7B  F01A         	call	_LCD_sendnibble
  6332                           
  6333                           ;LCD.c: 58:     LCD_sendnibble(Byte & 0b00001111);
  6334  003A92  0100               	movlb	0	; () banked
  6335  003A94  5177               	movf	LCD_sendbyte@Byte& (0+255),w,b
  6336  003A96  0B0F               	andlw	15
  6337  003A98  EC7B  F01A         	call	_LCD_sendnibble
  6338  003A9C                     
  6339                           ;LCD.c: 60:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  6340  003A9C  0EA0               	movlw	160
  6341  003A9E                     u5907:
  6342  003A9E  D000               	nop2	
  6343  003AA0  2EE8               	decfsz	wreg,f,c
  6344  003AA2  D7FD               	bra	u5907
  6345  003AA4  0012               	return		;funcret
  6346  003AA6                     __end_of_LCD_sendbyte:
  6347                           	callstack 0
  6348                           
  6349 ;; *************** function _LCD_sendnibble *****************
  6350 ;; Defined at:
  6351 ;;		line 18 in file "LCD.c"
  6352 ;; Parameters:    Size  Location     Type
  6353 ;;  number          1    wreg     unsigned char 
  6354 ;; Auto vars:     Size  Location     Type
  6355 ;;  number          1   21[BANK0 ] unsigned char 
  6356 ;; Return value:  Size  Location     Type
  6357 ;;                  1    wreg      void 
  6358 ;; Registers used:
  6359 ;;		wreg, cstack
  6360 ;; Tracked objects:
  6361 ;;		On entry : 0/0
  6362 ;;		On exit  : 0/0
  6363 ;;		Unchanged: 0/0
  6364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6366 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6368 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6369 ;;Total ram usage:        1 bytes
  6370 ;; Hardware stack levels used:    1
  6371 ;; Hardware stack levels required when called:   11
  6372 ;; This function calls:
  6373 ;;		_LCD_E_TOG
  6374 ;; This function is called by:
  6375 ;;		_LCD_sendbyte
  6376 ;;		_LCD_Init
  6377 ;; This function uses a non-reentrant model
  6378 ;;
  6379                           
  6380                           	psect	text28
  6381  0034F6                     __ptext28:
  6382                           	callstack 0
  6383  0034F6                     _LCD_sendnibble:
  6384                           	callstack 17
  6385                           
  6386                           ;incstack = 0
  6387                           ;LCD_sendnibble@number stored from wreg
  6388  0034F6  0100               	movlb	0	; () banked
  6389  0034F8  6F75               	movwf	LCD_sendnibble@number& (0+255),b
  6390  0034FA                     
  6391                           ;LCD.c: 20:     if (number & 0b1000) {
  6392  0034FA  0100               	movlb	0	; () banked
  6393  0034FC  A775               	btfss	LCD_sendnibble@number& (0+255),3,b
  6394  0034FE  EF83  F01A         	goto	u5211
  6395  003502  EF85  F01A         	goto	u5210
  6396  003506                     u5211:
  6397  003506  EF88  F01A         	goto	l22
  6398  00350A                     u5210:
  6399  00350A                     
  6400                           ; BSR set to: 0
  6401                           ;LCD.c: 21:         LATEbits.LATE1 = 1;
  6402  00350A  827D               	bsf	125,1,c	;volatile
  6403                           
  6404                           ;LCD.c: 22:     } else {
  6405  00350C  EF89  F01A         	goto	l4534
  6406  003510                     l22:
  6407                           
  6408                           ; BSR set to: 0
  6409                           ;LCD.c: 23:         LATEbits.LATE1 = 0;
  6410  003510  927D               	bcf	125,1,c	;volatile
  6411  003512                     l4534:
  6412                           
  6413                           ; BSR set to: 0
  6414                           ;LCD.c: 26:     if (number & 0b0100) {
  6415  003512  A575               	btfss	LCD_sendnibble@number& (0+255),2,b
  6416  003514  EF8E  F01A         	goto	u5221
  6417  003518  EF90  F01A         	goto	u5220
  6418  00351C                     u5221:
  6419  00351C  EF93  F01A         	goto	l24
  6420  003520                     u5220:
  6421  003520                     
  6422                           ; BSR set to: 0
  6423                           ;LCD.c: 27:         LATEbits.LATE3 = 1;
  6424  003520  867D               	bsf	125,3,c	;volatile
  6425                           
  6426                           ;LCD.c: 28:     } else {
  6427  003522  EF94  F01A         	goto	l4538
  6428  003526                     l24:
  6429                           
  6430                           ; BSR set to: 0
  6431                           ;LCD.c: 29:         LATEbits.LATE3 = 0;
  6432  003526  967D               	bcf	125,3,c	;volatile
  6433  003528                     l4538:
  6434                           
  6435                           ; BSR set to: 0
  6436                           ;LCD.c: 32:     if (number & 0b0010) {
  6437  003528  A375               	btfss	LCD_sendnibble@number& (0+255),1,b
  6438  00352A  EF99  F01A         	goto	u5231
  6439  00352E  EF9B  F01A         	goto	u5230
  6440  003532                     u5231:
  6441  003532  EF9E  F01A         	goto	l26
  6442  003536                     u5230:
  6443  003536                     
  6444                           ; BSR set to: 0
  6445                           ;LCD.c: 33:         LATBbits.LATB2 = 1;
  6446  003536  847A               	bsf	122,2,c	;volatile
  6447                           
  6448                           ;LCD.c: 34:     } else {
  6449  003538  EF9F  F01A         	goto	l4542
  6450  00353C                     l26:
  6451                           
  6452                           ; BSR set to: 0
  6453                           ;LCD.c: 35:         LATBbits.LATB2 = 0;
  6454  00353C  947A               	bcf	122,2,c	;volatile
  6455  00353E                     l4542:
  6456                           
  6457                           ; BSR set to: 0
  6458                           ;LCD.c: 38:     if (number & 0b0001) {
  6459  00353E  A175               	btfss	LCD_sendnibble@number& (0+255),0,b
  6460  003540  EFA4  F01A         	goto	u5241
  6461  003544  EFA6  F01A         	goto	u5240
  6462  003548                     u5241:
  6463  003548  EFA9  F01A         	goto	l28
  6464  00354C                     u5240:
  6465  00354C                     
  6466                           ; BSR set to: 0
  6467                           ;LCD.c: 39:         LATBbits.LATB3 = 1;
  6468  00354C  867A               	bsf	122,3,c	;volatile
  6469                           
  6470                           ;LCD.c: 40:     } else {
  6471  00354E  EFAA  F01A         	goto	l4546
  6472  003552                     l28:
  6473                           
  6474                           ; BSR set to: 0
  6475                           ;LCD.c: 41:         LATBbits.LATB3 = 0;
  6476  003552  967A               	bcf	122,3,c	;volatile
  6477  003554                     l4546:
  6478                           
  6479                           ; BSR set to: 0
  6480                           ;LCD.c: 44:     LCD_E_TOG();
  6481  003554  ECDE  F01D         	call	_LCD_E_TOG	;wreg free
  6482  003558                     
  6483                           ;LCD.c: 46:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  6484  003558  0E1A               	movlw	26
  6485  00355A                     u5917:
  6486  00355A  2EE8               	decfsz	wreg,f,c
  6487  00355C  D7FE               	bra	u5917
  6488  00355E  D000               	nop2	
  6489  003560  0012               	return		;funcret
  6490  003562                     __end_of_LCD_sendnibble:
  6491                           	callstack 0
  6492                           
  6493 ;; *************** function _LCD_E_TOG *****************
  6494 ;; Defined at:
  6495 ;;		line 9 in file "LCD.c"
  6496 ;; Parameters:    Size  Location     Type
  6497 ;;		None
  6498 ;; Auto vars:     Size  Location     Type
  6499 ;;		None
  6500 ;; Return value:  Size  Location     Type
  6501 ;;                  1    wreg      void 
  6502 ;; Registers used:
  6503 ;;		wreg
  6504 ;; Tracked objects:
  6505 ;;		On entry : 0/0
  6506 ;;		On exit  : 0/0
  6507 ;;		Unchanged: 0/0
  6508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6513 ;;Total ram usage:        0 bytes
  6514 ;; Hardware stack levels used:    1
  6515 ;; Hardware stack levels required when called:   10
  6516 ;; This function calls:
  6517 ;;		Nothing
  6518 ;; This function is called by:
  6519 ;;		_LCD_sendnibble
  6520 ;; This function uses a non-reentrant model
  6521 ;;
  6522                           
  6523                           	psect	text29
  6524  003BBC                     __ptext29:
  6525                           	callstack 0
  6526  003BBC                     _LCD_E_TOG:
  6527                           	callstack 17
  6528  003BBC                     
  6529                           ;LCD.c: 10:     LATCbits.LATC2 = 1;
  6530  003BBC  847B               	bsf	123,2,c	;volatile
  6531  003BBE                     
  6532                           ;LCD.c: 11:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  6533  003BBE  0E1A               	movlw	26
  6534  003BC0                     u5927:
  6535  003BC0  2EE8               	decfsz	wreg,f,c
  6536  003BC2  D7FE               	bra	u5927
  6537  003BC4  D000               	nop2	
  6538  003BC6                     
  6539                           ;LCD.c: 12:     LATCbits.LATC2 = 0;
  6540  003BC6  947B               	bcf	123,2,c	;volatile
  6541  003BC8  0012               	return		;funcret
  6542  003BCA                     __end_of_LCD_E_TOG:
  6543                           	callstack 0
  6544                           
  6545 ;; *************** function _Interrupts_init *****************
  6546 ;; Defined at:
  6547 ;;		line 13 in file "interrupts.c"
  6548 ;; Parameters:    Size  Location     Type
  6549 ;;		None
  6550 ;; Auto vars:     Size  Location     Type
  6551 ;;		None
  6552 ;; Return value:  Size  Location     Type
  6553 ;;                  1    wreg      void 
  6554 ;; Registers used:
  6555 ;;		None
  6556 ;; Tracked objects:
  6557 ;;		On entry : 0/0
  6558 ;;		On exit  : 0/0
  6559 ;;		Unchanged: 0/0
  6560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6565 ;;Total ram usage:        0 bytes
  6566 ;; Hardware stack levels used:    1
  6567 ;; Hardware stack levels required when called:   10
  6568 ;; This function calls:
  6569 ;;		Nothing
  6570 ;; This function is called by:
  6571 ;;		_main
  6572 ;; This function uses a non-reentrant model
  6573 ;;
  6574                           
  6575                           	psect	text30
  6576  003B9A                     __ptext30:
  6577                           	callstack 0
  6578  003B9A                     _Interrupts_init:
  6579                           	callstack 20
  6580  003B9A                     
  6581                           ;interrupts.c: 15:     INTCONbits.PEIE=1;
  6582  003B9A  8CF2               	bsf	242,6,c	;volatile
  6583                           
  6584                           ;interrupts.c: 16:     INTCONbits.IPEN=1;
  6585  003B9C  8AF2               	bsf	242,5,c	;volatile
  6586                           
  6587                           ;interrupts.c: 18:  PIE2bits.C1IE = 1;
  6588  003B9E  010E               	movlb	14	; () banked
  6589  003BA0  812B               	bsf	43,0,b	;volatile
  6590                           
  6591                           ;interrupts.c: 19:     PIE0bits.TMR0IE = 1;
  6592  003BA2  8B29               	bsf	41,5,b	;volatile
  6593                           
  6594                           ;interrupts.c: 21:     IPR2bits.C1IP = 0;
  6595  003BA4  9121               	bcf	33,0,b	;volatile
  6596                           
  6597                           ;interrupts.c: 22:     IPR0bits.TMR0IP = 1;
  6598  003BA6  8B1F               	bsf	31,5,b	;volatile
  6599                           
  6600                           ;interrupts.c: 24:     INTCONbits.GIE=1;
  6601  003BA8  8EF2               	bsf	242,7,c	;volatile
  6602  003BAA                     
  6603                           ; BSR set to: 14
  6604  003BAA  0012               	return		;funcret
  6605  003BAC                     __end_of_Interrupts_init:
  6606                           	callstack 0
  6607                           
  6608 ;; *************** function _Comp1_init *****************
  6609 ;; Defined at:
  6610 ;;		line 22 in file "comparator.c"
  6611 ;; Parameters:    Size  Location     Type
  6612 ;;		None
  6613 ;; Auto vars:     Size  Location     Type
  6614 ;;		None
  6615 ;; Return value:  Size  Location     Type
  6616 ;;                  1    wreg      void 
  6617 ;; Registers used:
  6618 ;;		wreg, status,2, cstack
  6619 ;; Tracked objects:
  6620 ;;		On entry : 0/0
  6621 ;;		On exit  : 0/0
  6622 ;;		Unchanged: 0/0
  6623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6628 ;;Total ram usage:        0 bytes
  6629 ;; Hardware stack levels used:    1
  6630 ;; Hardware stack levels required when called:   11
  6631 ;; This function calls:
  6632 ;;		_DAC_init
  6633 ;; This function is called by:
  6634 ;;		_main
  6635 ;; This function uses a non-reentrant model
  6636 ;;
  6637                           
  6638                           	psect	text31
  6639  003ACE                     __ptext31:
  6640                           	callstack 0
  6641  003ACE                     _Comp1_init:
  6642                           	callstack 19
  6643  003ACE                     
  6644                           ;comparator.c: 24:     TRISFbits.TRISF7=1;
  6645  003ACE  8E86               	bsf	134,7,c	;volatile
  6646                           
  6647                           ;comparator.c: 25:     ANSELFbits.ANSELF7=1;
  6648  003AD0  010E               	movlb	14	; () banked
  6649  003AD2  8FB4               	bsf	180,7,b	;volatile
  6650  003AD4                     
  6651                           ; BSR set to: 14
  6652                           ;comparator.c: 26:     CM1NCHbits.NCH=0b011;
  6653  003AD4  51D2               	movf	210,w,b	;volatile
  6654  003AD6  0BF8               	andlw	-8
  6655  003AD8  0903               	iorlw	3
  6656  003ADA  6FD2               	movwf	210,b	;volatile
  6657                           
  6658                           ;comparator.c: 27:     CM1PCHbits.PCH=0b101;
  6659  003ADC  51D3               	movf	211,w,b	;volatile
  6660  003ADE  0BF8               	andlw	-8
  6661  003AE0  0905               	iorlw	5
  6662  003AE2  6FD3               	movwf	211,b	;volatile
  6663  003AE4                     
  6664                           ; BSR set to: 14
  6665                           ;comparator.c: 28:     CM1CON0bits.HYS=1;
  6666  003AE4  83D0               	bsf	208,1,b	;volatile
  6667  003AE6                     
  6668                           ; BSR set to: 14
  6669                           ;comparator.c: 30:     CM1CON0bits.POL=1;
  6670  003AE6  89D0               	bsf	208,4,b	;volatile
  6671  003AE8                     
  6672                           ; BSR set to: 14
  6673                           ;comparator.c: 31:     CM1CON1bits.INTP=1;
  6674  003AE8  83D1               	bsf	209,1,b	;volatile
  6675  003AEA                     
  6676                           ; BSR set to: 14
  6677                           ;comparator.c: 32:     CM1CON1bits.INTN=1;
  6678  003AEA  81D1               	bsf	209,0,b	;volatile
  6679  003AEC                     
  6680                           ; BSR set to: 14
  6681                           ;comparator.c: 33:     DAC_init();
  6682  003AEC  ECC3  F01D         	call	_DAC_init	;wreg free
  6683  003AF0                     
  6684                           ;comparator.c: 34:     CM1CON0bits.EN=1;
  6685  003AF0  010E               	movlb	14	; () banked
  6686  003AF2  8FD0               	bsf	208,7,b	;volatile
  6687  003AF4                     
  6688                           ; BSR set to: 14
  6689  003AF4  0012               	return		;funcret
  6690  003AF6                     __end_of_Comp1_init:
  6691                           	callstack 0
  6692                           
  6693 ;; *************** function _DAC_init *****************
  6694 ;; Defined at:
  6695 ;;		line 7 in file "comparator.c"
  6696 ;; Parameters:    Size  Location     Type
  6697 ;;		None
  6698 ;; Auto vars:     Size  Location     Type
  6699 ;;		None
  6700 ;; Return value:  Size  Location     Type
  6701 ;;                  1    wreg      void 
  6702 ;; Registers used:
  6703 ;;		wreg, status,2
  6704 ;; Tracked objects:
  6705 ;;		On entry : 0/0
  6706 ;;		On exit  : 0/0
  6707 ;;		Unchanged: 0/0
  6708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6713 ;;Total ram usage:        0 bytes
  6714 ;; Hardware stack levels used:    1
  6715 ;; Hardware stack levels required when called:   10
  6716 ;; This function calls:
  6717 ;;		Nothing
  6718 ;; This function is called by:
  6719 ;;		_Comp1_init
  6720 ;; This function uses a non-reentrant model
  6721 ;;
  6722                           
  6723                           	psect	text32
  6724  003B86                     __ptext32:
  6725                           	callstack 0
  6726  003B86                     _DAC_init:
  6727                           	callstack 19
  6728  003B86                     
  6729                           ;comparator.c: 9:     DAC1CON0bits.PSS=0b00;
  6730  003B86  0EF3               	movlw	-13
  6731  003B88  010E               	movlb	14	; () banked
  6732  003B8A  17C6               	andwf	198,f,b	;volatile
  6733  003B8C                     
  6734                           ; BSR set to: 14
  6735                           ;comparator.c: 10:     DAC1CON0bits.NSS=0b0;
  6736  003B8C  91C6               	bcf	198,0,b	;volatile
  6737                           
  6738                           ;comparator.c: 14:     DAC1CON1bits.DAC1R=0b11011;
  6739  003B8E  51C7               	movf	199,w,b	;volatile
  6740  003B90  0BE0               	andlw	-32
  6741  003B92  091B               	iorlw	27
  6742  003B94  6FC7               	movwf	199,b	;volatile
  6743  003B96                     
  6744                           ; BSR set to: 14
  6745                           ;comparator.c: 15:     DAC1CON0bits.DAC1EN=1;
  6746  003B96  8FC6               	bsf	198,7,b	;volatile
  6747  003B98                     
  6748                           ; BSR set to: 14
  6749  003B98  0012               	return		;funcret
  6750  003B9A                     __end_of_DAC_init:
  6751                           	callstack 0
  6752                           
  6753 ;; *************** function _LdrISR *****************
  6754 ;; Defined at:
  6755 ;;		line 32 in file "interrupts.c"
  6756 ;; Parameters:    Size  Location     Type
  6757 ;;		None
  6758 ;; Auto vars:     Size  Location     Type
  6759 ;;		None
  6760 ;; Return value:  Size  Location     Type
  6761 ;;                  1    wreg      void 
  6762 ;; Registers used:
  6763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6764 ;; Tracked objects:
  6765 ;;		On entry : 0/0
  6766 ;;		On exit  : 0/0
  6767 ;;		Unchanged: 0/0
  6768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6771 ;;      Temps:          0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6772 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6773 ;;Total ram usage:       13 bytes
  6774 ;; Hardware stack levels used:    1
  6775 ;; Hardware stack levels required when called:    9
  6776 ;; This function calls:
  6777 ;;		_printf
  6778 ;; This function is called by:
  6779 ;;		Interrupt level 1
  6780 ;; This function uses a non-reentrant model
  6781 ;;
  6782                           
  6783                           	psect	intcodelo
  6784  000018                     __pintcodelo:
  6785                           	callstack 0
  6786  000018                     _LdrISR:
  6787                           	callstack 12
  6788                           
  6789                           ; BSR set to: 14
  6790                           ;incstack = 0
  6791  000018  805E               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  6792  00001A  CFD8 F068          	movff	status,??_LdrISR
  6793  00001E  CFE8 F069          	movff	wreg,??_LdrISR+1
  6794  000022  CFE0 F06A          	movff	bsr,??_LdrISR+2
  6795  000026  CFE1 F06B          	movff	fsr1l,??_LdrISR+3
  6796  00002A  CFE2 F06C          	movff	fsr1h,??_LdrISR+4
  6797  00002E  CFD9 F06D          	movff	fsr2l,??_LdrISR+5
  6798  000032  CFDA F06E          	movff	fsr2h,??_LdrISR+6
  6799  000036  CFF3 F06F          	movff	prodl,??_LdrISR+7
  6800  00003A  CFF4 F070          	movff	prodh,??_LdrISR+8
  6801  00003E  CFF6 F071          	movff	tblptrl,??_LdrISR+9
  6802  000042  CFF7 F072          	movff	tblptrh,??_LdrISR+10
  6803  000046  CFF8 F073          	movff	tblptru,??_LdrISR+11
  6804  00004A  CFF5 F074          	movff	tablat,??_LdrISR+12
  6805  00004E                     
  6806                           ;interrupts.c: 34:  if(PIR2bits.C1IF)
  6807  00004E  010E               	movlb	14	; () banked
  6808  000050  A135               	btfss	53,0,b	;volatile
  6809  000052  EF2D  F000         	goto	i1u572_21
  6810  000056  EF2F  F000         	goto	i1u572_20
  6811  00005A                     i1u572_21:
  6812  00005A  EF51  F000         	goto	i1l170
  6813  00005E                     i1u572_20:
  6814  00005E                     
  6815                           ; BSR set to: 14
  6816                           ;interrupts.c: 35:     {;interrupts.c: 36:         printf("hello");
  6817  00005E  0E27               	movlw	low STR_4
  6818  000060  0100               	movlb	0	; () banked
  6819  000062  6F62               	movwf	printf@fmt& (0+255),b
  6820  000064  0E0E               	movlw	high STR_4
  6821  000066  6F63               	movwf	(printf@fmt+1)& (0+255),b
  6822  000068  EC7B  F01D         	call	_printf	;wreg free
  6823  00006C                     
  6824                           ;interrupts.c: 37:         PIR2bits.C1IF = 0;
  6825  00006C  010E               	movlb	14	; () banked
  6826  00006E  9135               	bcf	53,0,b	;volatile
  6827  000070                     
  6828                           ; BSR set to: 14
  6829                           ;interrupts.c: 38:         sun = !sun;
  6830  000070  0100               	movlb	0	; () banked
  6831  000072  51E2               	movf	_sun& (0+255),w,b
  6832  000074  B4D8               	btfsc	status,2,c
  6833  000076  EF3F  F000         	goto	i1u573_21
  6834  00007A  EF42  F000         	goto	i1u573_20
  6835  00007E                     i1u573_21:
  6836  00007E  0E01               	movlw	1
  6837  000080  EF43  F000         	goto	i1u574_20
  6838  000084                     i1u573_20:
  6839  000084  0E00               	movlw	0
  6840  000086                     i1u574_20:
  6841  000086  6FE2               	movwf	_sun& (0+255),b
  6842  000088                     
  6843                           ; BSR set to: 0
  6844                           ;interrupts.c: 39:         if (sun) {
  6845  000088  51E2               	movf	_sun& (0+255),w,b
  6846  00008A  B4D8               	btfsc	status,2,c
  6847  00008C  EF4A  F000         	goto	i1u575_21
  6848  000090  EF4C  F000         	goto	i1u575_20
  6849  000094                     i1u575_21:
  6850  000094  EF51  F000         	goto	i1l170
  6851  000098                     i1u575_20:
  6852  000098                     
  6853                           ; BSR set to: 0
  6854                           ;interrupts.c: 40:             seconds_check = 0;
  6855  000098  0E00               	movlw	0
  6856  00009A  0101               	movlb	1	; () banked
  6857  00009C  6F9E               	movwf	(_seconds_check+1)& (0+255),b
  6858  00009E  0E00               	movlw	0
  6859  0000A0  6F9D               	movwf	_seconds_check& (0+255),b
  6860  0000A2                     i1l170:
  6861  0000A2  C074  FFF5         	movff	??_LdrISR+12,tablat
  6862  0000A6  C073  FFF8         	movff	??_LdrISR+11,tblptru
  6863  0000AA  C072  FFF7         	movff	??_LdrISR+10,tblptrh
  6864  0000AE  C071  FFF6         	movff	??_LdrISR+9,tblptrl
  6865  0000B2  C070  FFF4         	movff	??_LdrISR+8,prodh
  6866  0000B6  C06F  FFF3         	movff	??_LdrISR+7,prodl
  6867  0000BA  C06E  FFDA         	movff	??_LdrISR+6,fsr2h
  6868  0000BE  C06D  FFD9         	movff	??_LdrISR+5,fsr2l
  6869  0000C2  C06C  FFE2         	movff	??_LdrISR+4,fsr1h
  6870  0000C6  C06B  FFE1         	movff	??_LdrISR+3,fsr1l
  6871  0000CA  C06A  FFE0         	movff	??_LdrISR+2,bsr
  6872  0000CE  C069  FFE8         	movff	??_LdrISR+1,wreg
  6873  0000D2  C068  FFD8         	movff	??_LdrISR,status
  6874  0000D6  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  6875  0000D8  0010               	retfie	
  6876  0000DA                     __end_of_LdrISR:
  6877                           	callstack 0
  6878                           
  6879 ;; *************** function _printf *****************
  6880 ;; Defined at:
  6881 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\printf.c"
  6882 ;; Parameters:    Size  Location     Type
  6883 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  6884 ;;		 -> STR_4(6), 
  6885 ;; Auto vars:     Size  Location     Type
  6886 ;;  ap              2    6[BANK0 ] PTR void [1]
  6887 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6888 ;;  ret             2    0        int 
  6889 ;; Return value:  Size  Location     Type
  6890 ;;                  2    2[BANK0 ] int 
  6891 ;; Registers used:
  6892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6893 ;; Tracked objects:
  6894 ;;		On entry : 0/0
  6895 ;;		On exit  : 0/0
  6896 ;;		Unchanged: 0/0
  6897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6898 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6899 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6901 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6902 ;;Total ram usage:        6 bytes
  6903 ;; Hardware stack levels used:    1
  6904 ;; Hardware stack levels required when called:    8
  6905 ;; This function calls:
  6906 ;;		i1_vfprintf
  6907 ;; This function is called by:
  6908 ;;		_LdrISR
  6909 ;; This function uses a non-reentrant model
  6910 ;;
  6911                           
  6912                           	psect	text34
  6913  003AF6                     __ptext34:
  6914                           	callstack 0
  6915  003AF6                     _printf:
  6916                           	callstack 12
  6917  003AF6  0E64               	movlw	low (?_printf+2)
  6918  003AF8  0100               	movlb	0	; () banked
  6919  003AFA  6F66               	movwf	printf@ap& (0+255),b
  6920  003AFC  0E00               	movlw	high (?_printf+2)
  6921  003AFE  6F67               	movwf	(printf@ap+1)& (0+255),b
  6922  003B00                     
  6923                           ; BSR set to: 0
  6924  003B00  0E00               	movlw	0
  6925  003B02  6E58               	movwf	i1vfprintf@fp^0,c
  6926  003B04  0E00               	movlw	0
  6927  003B06  6E59               	movwf	(i1vfprintf@fp+1)^0,c
  6928  003B08  C062  F05A         	movff	printf@fmt,i1vfprintf@fmt
  6929  003B0C  C063  F05B         	movff	printf@fmt+1,i1vfprintf@fmt+1
  6930  003B10  0E66               	movlw	low printf@ap
  6931  003B12  6E5C               	movwf	i1vfprintf@ap^0,c
  6932  003B14  0E00               	movlw	high printf@ap
  6933  003B16  6E5D               	movwf	(i1vfprintf@ap+1)^0,c
  6934  003B18  EC17  F01B         	call	i1_vfprintf	;wreg free
  6935  003B1C  0012               	return		;funcret
  6936  003B1E                     __end_of_printf:
  6937                           	callstack 0
  6938                           
  6939 ;; *************** function i1_vfprintf *****************
  6940 ;; Defined at:
  6941 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  6942 ;; Parameters:    Size  Location     Type
  6943 ;;  fp              2   87[COMRAM] PTR struct _IO_FILE
  6944 ;;		 -> NULL(0), sprintf@f(6), 
  6945 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  6946 ;;		 -> STR_4(6), STR_3(19), STR_2(19), STR_1(5), 
  6947 ;;  ap              2   91[COMRAM] PTR PTR void 
  6948 ;;		 -> printf@ap(2), sprintf@ap(2), 
  6949 ;; Auto vars:     Size  Location     Type
  6950 ;;  cfmt            2    0[BANK0 ] PTR unsigned char 
  6951 ;;		 -> STR_4(6), STR_3(19), STR_2(19), STR_1(5), 
  6952 ;; Return value:  Size  Location     Type
  6953 ;;                  2   87[COMRAM] int 
  6954 ;; Registers used:
  6955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6956 ;; Tracked objects:
  6957 ;;		On entry : 0/0
  6958 ;;		On exit  : 0/0
  6959 ;;		Unchanged: 0/0
  6960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6961 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6962 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6964 ;;      Totals:         6       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6965 ;;Total ram usage:        8 bytes
  6966 ;; Hardware stack levels used:    1
  6967 ;; Hardware stack levels required when called:    7
  6968 ;; This function calls:
  6969 ;;		i1_vfpfcnvrt
  6970 ;; This function is called by:
  6971 ;;		_printf
  6972 ;; This function uses a non-reentrant model
  6973 ;;
  6974                           
  6975                           	psect	text35
  6976  00362E                     __ptext35:
  6977                           	callstack 0
  6978  00362E                     i1_vfprintf:
  6979                           	callstack 12
  6980  00362E                     
  6981                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  6982  00362E  C05A  F060         	movff	i1vfprintf@fmt,i1vfprintf@cfmt
  6983  003632  C05B  F061         	movff	i1vfprintf@fmt+1,i1vfprintf@cfmt+1
  6984  003636                     
  6985                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  6986  003636  0E00               	movlw	0
  6987  003638  0100               	movlb	0	; () banked
  6988  00363A  6FDB               	movwf	(_nout+1)& (0+255),b
  6989  00363C  0E00               	movlw	0
  6990  00363E  6FDA               	movwf	_nout& (0+255),b
  6991                           
  6992                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6993  003640  EF35  F01B         	goto	i1l4732
  6994  003644                     i1l4730:
  6995                           
  6996                           ; BSR set to: 0
  6997                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6998  003644  C058  F040         	movff	i1vfprintf@fp,i1vfpfcnvrt@fp
  6999  003648  C059  F041         	movff	i1vfprintf@fp+1,i1vfpfcnvrt@fp+1
  7000  00364C  0E60               	movlw	low i1vfprintf@cfmt
  7001  00364E  6E42               	movwf	i1vfpfcnvrt@fmt^0,c
  7002  003650  0E00               	movlw	high i1vfprintf@cfmt
  7003  003652  6E43               	movwf	(i1vfpfcnvrt@fmt+1)^0,c
  7004  003654  C05C  F044         	movff	i1vfprintf@ap,i1vfpfcnvrt@ap
  7005  003658  C05D  F045         	movff	i1vfprintf@ap+1,i1vfpfcnvrt@ap+1
  7006  00365C  ECB9  F009         	call	i1_vfpfcnvrt	;wreg free
  7007  003660  5040               	movf	?i1_vfpfcnvrt^0,w,c
  7008  003662  0100               	movlb	0	; () banked
  7009  003664  27DA               	addwf	_nout& (0+255),f,b
  7010  003666  5041               	movf	(?i1_vfpfcnvrt+1)^0,w,c
  7011  003668  23DB               	addwfc	(_nout+1)& (0+255),f,b
  7012  00366A                     i1l4732:
  7013                           
  7014                           ; BSR set to: 0
  7015                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  7016  00366A  C060  FFF6         	movff	i1vfprintf@cfmt,tblptrl
  7017  00366E  C061  FFF7         	movff	i1vfprintf@cfmt+1,tblptrh
  7018  003672                     	if	0	;tblptru may be non-zero
  7019  003672                     	endif
  7020  003672                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7021  003672  0E00               	movlw	low (__mediumconst shr (0+16))
  7022  003674  6EF8               	movwf	tblptru,c
  7023  003676                     	endif
  7024  003676  0008               	tblrd		*
  7025  003678  50F5               	movf	tablat,w,c
  7026  00367A  0900               	iorlw	0
  7027  00367C  A4D8               	btfss	status,2,c
  7028  00367E  EF43  F01B         	goto	i1u545_21
  7029  003682  EF45  F01B         	goto	i1u545_20
  7030  003686                     i1u545_21:
  7031  003686  EF22  F01B         	goto	i1l4730
  7032  00368A                     i1u545_20:
  7033  00368A                     
  7034                           ; BSR set to: 0
  7035                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  7036  00368A  C0DA  F058         	movff	_nout,?i1_vfprintf
  7037  00368E  C0DB  F059         	movff	_nout+1,?i1_vfprintf+1
  7038  003692                     
  7039                           ; BSR set to: 0
  7040  003692  0012               	return		;funcret
  7041  003694                     __end_ofi1_vfprintf:
  7042                           	callstack 0
  7043                           
  7044 ;; *************** function i1_vfpfcnvrt *****************
  7045 ;; Defined at:
  7046 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  7047 ;; Parameters:    Size  Location     Type
  7048 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  7049 ;;		 -> NULL(0), sprintf@f(6), 
  7050 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  7051 ;;		 -> i1vfprintf@cfmt(2), vfprintf@cfmt(2), 
  7052 ;;  ap              2   67[COMRAM] PTR PTR void 
  7053 ;;		 -> printf@ap(2), sprintf@ap(2), 
  7054 ;; Auto vars:     Size  Location     Type
  7055 ;;  ll              8   73[COMRAM] long long 
  7056 ;;  llu             8    0        unsigned long long 
  7057 ;;  f               4    0        unsigned long long 
  7058 ;;  vp              3    0        PTR void 
  7059 ;;  ct              3    0        unsigned char [3]
  7060 ;;  done            2   83[COMRAM] int 
  7061 ;;  cp              2   81[COMRAM] PTR unsigned char 
  7062 ;;		 -> ?_printf(2), ?_sprintf(2), time_now@daylist(70), 
  7063 ;;  i               2    0        int 
  7064 ;;  c               1    0        unsigned char 
  7065 ;; Return value:  Size  Location     Type
  7066 ;;                  2   63[COMRAM] int 
  7067 ;; Registers used:
  7068 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7069 ;; Tracked objects:
  7070 ;;		On entry : 0/0
  7071 ;;		On exit  : 0/0
  7072 ;;		Unchanged: 0/0
  7073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7074 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7075 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7076 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7077 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7078 ;;Total ram usage:       24 bytes
  7079 ;; Hardware stack levels used:    1
  7080 ;; Hardware stack levels required when called:    6
  7081 ;; This function calls:
  7082 ;;		i1_atoi
  7083 ;;		i1_dtoa
  7084 ;;		i1_fputc
  7085 ;;		i1_isdigit
  7086 ;;		i1_stoa
  7087 ;; This function is called by:
  7088 ;;		i1_vfprintf
  7089 ;; This function uses a non-reentrant model
  7090 ;;
  7091                           
  7092                           	psect	text36
  7093  001372                     __ptext36:
  7094                           	callstack 0
  7095  001372                     i1_vfpfcnvrt:
  7096                           	callstack 12
  7097  001372                     
  7098                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  7099  001372  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7100  001376  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7101  00137A  CFDE FFF6          	movff	postinc2,tblptrl
  7102  00137E  CFDD FFF7          	movff	postdec2,tblptrh
  7103  001382                     	if	0	;tblptru may be non-zero
  7104  001382                     	endif
  7105  001382                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7106  001382  0E00               	movlw	low (__mediumconst shr (0+16))
  7107  001384  6EF8               	movwf	tblptru,c
  7108  001386                     	endif
  7109  001386  0008               	tblrd		*
  7110  001388  50F5               	movf	tablat,w,c
  7111  00138A  0A25               	xorlw	37
  7112  00138C  A4D8               	btfss	status,2,c
  7113  00138E  EFCB  F009         	goto	i1u526_21
  7114  001392  EFCD  F009         	goto	i1u526_20
  7115  001396                     i1u526_21:
  7116  001396  EFA5  F00B         	goto	i1l4650
  7117  00139A                     i1u526_20:
  7118  00139A                     
  7119                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  7120  00139A  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7121  00139E  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7122  0013A2  2ADE               	incf	postinc2,f,c
  7123  0013A4  0E00               	movlw	0
  7124  0013A6  22DD               	addwfc	postdec2,f,c
  7125  0013A8                     
  7126                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  7127  0013A8  0E00               	movlw	0
  7128  0013AA  0100               	movlb	0	; () banked
  7129  0013AC  6FDD               	movwf	(_width+1)& (0+255),b
  7130  0013AE  0E00               	movlw	0
  7131  0013B0  6FDC               	movwf	_width& (0+255),b
  7132  0013B2  C0DC  F0E0         	movff	_width,_flags
  7133  0013B6  C0DD  F0E1         	movff	_width+1,_flags+1
  7134  0013BA                     
  7135                           ; BSR set to: 0
  7136                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  7137  0013BA  69DE               	setf	_prec& (0+255),b
  7138  0013BC  69DF               	setf	(_prec+1)& (0+255),b
  7139  0013BE                     
  7140                           ; BSR set to: 0
  7141                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  7142  0013BE  0E00               	movlw	0
  7143  0013C0  6E55               	movwf	(i1vfpfcnvrt@done+1)^0,c
  7144  0013C2  0E00               	movlw	0
  7145  0013C4  6E54               	movwf	i1vfpfcnvrt@done^0,c
  7146                           
  7147                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  7148  0013C6  EF32  F00A         	goto	i1l4594
  7149  0013CA                     i1l4568:
  7150                           
  7151                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  7152  0013CA  0100               	movlb	0	; () banked
  7153  0013CC  81E0               	bsf	_flags& (0+255),0,b
  7154  0013CE                     i1l4570:
  7155                           
  7156                           ; BSR set to: 0
  7157                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  7158  0013CE  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7159  0013D2  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7160  0013D6  2ADE               	incf	postinc2,f,c
  7161  0013D8  0E00               	movlw	0
  7162  0013DA  22DD               	addwfc	postdec2,f,c
  7163                           
  7164                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  7165  0013DC  EF32  F00A         	goto	i1l4594
  7166  0013E0                     i1l4572:
  7167                           
  7168                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  7169  0013E0  0100               	movlb	0	; () banked
  7170  0013E2  83E0               	bsf	_flags& (0+255),1,b
  7171  0013E4  EFE7  F009         	goto	i1l4570
  7172  0013E8                     i1l4576:
  7173                           
  7174                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  7175  0013E8  0100               	movlb	0	; () banked
  7176  0013EA  85E0               	bsf	_flags& (0+255),2,b
  7177  0013EC  EFE7  F009         	goto	i1l4570
  7178  0013F0                     i1l4580:
  7179                           
  7180                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  7181  0013F0  0100               	movlb	0	; () banked
  7182  0013F2  87E0               	bsf	_flags& (0+255),3,b
  7183  0013F4  EFE7  F009         	goto	i1l4570
  7184  0013F8                     i1l4584:
  7185                           
  7186                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  7187  0013F8  0100               	movlb	0	; () banked
  7188  0013FA  89E0               	bsf	_flags& (0+255),4,b
  7189  0013FC  EFE7  F009         	goto	i1l4570
  7190  001400                     i1l4588:
  7191                           
  7192                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  7193  001400  0E00               	movlw	0
  7194  001402  6E55               	movwf	(i1vfpfcnvrt@done+1)^0,c
  7195  001404  0E01               	movlw	1
  7196  001406  6E54               	movwf	i1vfpfcnvrt@done^0,c
  7197                           
  7198                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  7199  001408  EF32  F00A         	goto	i1l4594
  7200  00140C                     i1l4592:
  7201  00140C  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7202  001410  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7203  001414  CFDE FFF6          	movff	postinc2,tblptrl
  7204  001418  CFDD FFF7          	movff	postdec2,tblptrh
  7205  00141C                     	if	0	;tblptru may be non-zero
  7206  00141C                     	endif
  7207  00141C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7208  00141C  0E00               	movlw	low (__mediumconst shr (0+16))
  7209  00141E  6EF8               	movwf	tblptru,c
  7210  001420                     	endif
  7211  001420  0008               	tblrd		*
  7212  001422  50F5               	movf	tablat,w,c
  7213  001424  6E46               	movwf	??i1_vfpfcnvrt^0,c
  7214  001426  6A47               	clrf	(??i1_vfpfcnvrt+1)^0,c
  7215                           
  7216                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7217                           ; Switch size 1, requested type "simple"
  7218                           ; Number of cases is 1, Range of values is 0 to 0
  7219                           ; switch strategies available:
  7220                           ; Name         Instructions Cycles
  7221                           ; simple_byte            4     3 (average)
  7222                           ;	Chosen strategy is simple_byte
  7223  001428  5047               	movf	(??i1_vfpfcnvrt+1)^0,w,c
  7224  00142A  0A00               	xorlw	0	; case 0
  7225  00142C  B4D8               	btfsc	status,2,c
  7226  00142E  EF1B  F00A         	goto	i1l5120
  7227  001432  EF00  F00A         	goto	i1l4588
  7228  001436                     i1l5120:
  7229                           
  7230                           ; Switch size 1, requested type "simple"
  7231                           ; Number of cases is 5, Range of values is 32 to 48
  7232                           ; switch strategies available:
  7233                           ; Name         Instructions Cycles
  7234                           ; simple_byte           16     9 (average)
  7235                           ;	Chosen strategy is simple_byte
  7236  001436  5046               	movf	??i1_vfpfcnvrt^0,w,c
  7237  001438  0A20               	xorlw	32	; case 32
  7238  00143A  B4D8               	btfsc	status,2,c
  7239  00143C  EFF8  F009         	goto	i1l4580
  7240  001440  0A03               	xorlw	3	; case 35
  7241  001442  B4D8               	btfsc	status,2,c
  7242  001444  EFFC  F009         	goto	i1l4584
  7243  001448  0A08               	xorlw	8	; case 43
  7244  00144A  B4D8               	btfsc	status,2,c
  7245  00144C  EFF4  F009         	goto	i1l4576
  7246  001450  0A06               	xorlw	6	; case 45
  7247  001452  B4D8               	btfsc	status,2,c
  7248  001454  EFE5  F009         	goto	i1l4568
  7249  001458  0A1D               	xorlw	29	; case 48
  7250  00145A  B4D8               	btfsc	status,2,c
  7251  00145C  EFF0  F009         	goto	i1l4572
  7252  001460  EF00  F00A         	goto	i1l4588
  7253  001464                     i1l4594:
  7254                           
  7255                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  7256  001464  5054               	movf	i1vfpfcnvrt@done^0,w,c
  7257  001466  1055               	iorwf	(i1vfpfcnvrt@done+1)^0,w,c
  7258  001468  B4D8               	btfsc	status,2,c
  7259  00146A  EF39  F00A         	goto	i1u527_21
  7260  00146E  EF3B  F00A         	goto	i1u527_20
  7261  001472                     i1u527_21:
  7262  001472  EF06  F00A         	goto	i1l4592
  7263  001476                     i1u527_20:
  7264  001476                     
  7265                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  7266  001476  0100               	movlb	0	; () banked
  7267  001478  A1E0               	btfss	_flags& (0+255),0,b
  7268  00147A  EF41  F00A         	goto	i1u528_21
  7269  00147E  EF43  F00A         	goto	i1u528_20
  7270  001482                     i1u528_21:
  7271  001482  EF44  F00A         	goto	i1l4598
  7272  001486                     i1u528_20:
  7273  001486                     
  7274                           ; BSR set to: 0
  7275                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  7276  001486  93E0               	bcf	_flags& (0+255),1,b
  7277  001488                     i1l4598:
  7278                           
  7279                           ; BSR set to: 0
  7280                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  7281  001488  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7282  00148C  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7283  001490  CFDE FFF6          	movff	postinc2,tblptrl
  7284  001494  CFDD FFF7          	movff	postdec2,tblptrh
  7285  001498                     	if	0	;tblptru may be non-zero
  7286  001498                     	endif
  7287  001498                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7288  001498  0E00               	movlw	low (__mediumconst shr (0+16))
  7289  00149A  6EF8               	movwf	tblptru,c
  7290  00149C                     	endif
  7291  00149C  0008               	tblrd		*
  7292  00149E  50F5               	movf	tablat,w,c
  7293  0014A0  0A2A               	xorlw	42
  7294  0014A2  A4D8               	btfss	status,2,c
  7295  0014A4  EF56  F00A         	goto	i1u529_21
  7296  0014A8  EF58  F00A         	goto	i1u529_20
  7297  0014AC                     i1u529_21:
  7298  0014AC  EF81  F00A         	goto	i1l4606
  7299  0014B0                     i1u529_20:
  7300  0014B0                     
  7301                           ; BSR set to: 0
  7302                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  7303  0014B0  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7304  0014B4  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7305  0014B8  2ADE               	incf	postinc2,f,c
  7306  0014BA  0E00               	movlw	0
  7307  0014BC  22DD               	addwfc	postdec2,f,c
  7308                           
  7309                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  7310  0014BE  C044  FFD9         	movff	i1vfpfcnvrt@ap,fsr2l
  7311  0014C2  C045  FFDA         	movff	i1vfpfcnvrt@ap+1,fsr2h
  7312  0014C6  CFDF F046          	movff	indf2,??i1_vfpfcnvrt
  7313  0014CA  0E02               	movlw	2
  7314  0014CC  26DE               	addwf	postinc2,f,c
  7315  0014CE  CFDF F047          	movff	indf2,??i1_vfpfcnvrt+1
  7316  0014D2  0E00               	movlw	0
  7317  0014D4  22DD               	addwfc	postdec2,f,c
  7318  0014D6  C046  FFD9         	movff	??i1_vfpfcnvrt,fsr2l
  7319  0014DA  C047  FFDA         	movff	??i1_vfpfcnvrt+1,fsr2h
  7320  0014DE  CFDE F0DC          	movff	postinc2,_width
  7321  0014E2  CFDD F0DD          	movff	postdec2,_width+1
  7322  0014E6                     
  7323                           ; BSR set to: 0
  7324                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  7325  0014E6  BFDD               	btfsc	(_width+1)& (0+255),7,b
  7326  0014E8  EF7A  F00A         	goto	i1u530_20
  7327  0014EC  EF78  F00A         	goto	i1u530_21
  7328  0014F0                     i1u530_21:
  7329  0014F0  EFC6  F00A         	goto	i1l4616
  7330  0014F4                     i1u530_20:
  7331  0014F4                     
  7332                           ; BSR set to: 0
  7333                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  7334  0014F4  81E0               	bsf	_flags& (0+255),0,b
  7335                           
  7336                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  7337  0014F6  6DDC               	negf	_width& (0+255),b
  7338  0014F8  1FDD               	comf	(_width+1)& (0+255),f,b
  7339  0014FA  B0D8               	btfsc	status,0,c
  7340  0014FC  2BDD               	incf	(_width+1)& (0+255),f,b
  7341  0014FE  EFC6  F00A         	goto	i1l4616
  7342  001502                     i1l4606:
  7343                           
  7344                           ; BSR set to: 0
  7345                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  7346  001502  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7347  001506  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7348  00150A  CFDE F008          	movff	postinc2,i1atoi@s
  7349  00150E  CFDD F009          	movff	postdec2,i1atoi@s+1
  7350  001512  EC60  F012         	call	i1_atoi	;wreg free
  7351  001516  C008  F0DC         	movff	?i1_atoi,_width
  7352  00151A  C009  F0DD         	movff	?i1_atoi+1,_width+1
  7353                           
  7354                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7355  00151E  EF98  F00A         	goto	i1l4610
  7356  001522                     i1l4608:
  7357                           
  7358                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  7359  001522  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7360  001526  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7361  00152A  2ADE               	incf	postinc2,f,c
  7362  00152C  0E00               	movlw	0
  7363  00152E  22DD               	addwfc	postdec2,f,c
  7364  001530                     i1l4610:
  7365  001530  0ED0               	movlw	208
  7366  001532  6E46               	movwf	??i1_vfpfcnvrt^0,c
  7367  001534  0EFF               	movlw	255
  7368  001536  6E47               	movwf	(??i1_vfpfcnvrt+1)^0,c
  7369  001538  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7370  00153C  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7371  001540  CFDE FFF6          	movff	postinc2,tblptrl
  7372  001544  CFDD FFF7          	movff	postdec2,tblptrh
  7373  001548                     	if	0	;tblptru may be non-zero
  7374  001548                     	endif
  7375  001548                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7376  001548  0E00               	movlw	low (__mediumconst shr (0+16))
  7377  00154A  6EF8               	movwf	tblptru,c
  7378  00154C                     	endif
  7379  00154C  0008               	tblrd		*
  7380  00154E  50F5               	movf	tablat,w,c
  7381  001550  6E48               	movwf	(??i1_vfpfcnvrt+2)^0,c
  7382  001552  6A49               	clrf	(??i1_vfpfcnvrt+3)^0,c
  7383  001554  5046               	movf	??i1_vfpfcnvrt^0,w,c
  7384  001556  2648               	addwf	(??i1_vfpfcnvrt+2)^0,f,c
  7385  001558  5047               	movf	(??i1_vfpfcnvrt+1)^0,w,c
  7386  00155A  2249               	addwfc	(??i1_vfpfcnvrt+3)^0,f,c
  7387  00155C  5049               	movf	(??i1_vfpfcnvrt+3)^0,w,c
  7388  00155E  E10A               	bnz	i1u531_20
  7389  001560  0E0A               	movlw	10
  7390  001562  5C48               	subwf	(??i1_vfpfcnvrt+2)^0,w,c
  7391  001564  A0D8               	btfss	status,0,c
  7392  001566  EFB7  F00A         	goto	i1u531_21
  7393  00156A  EFBA  F00A         	goto	i1u531_20
  7394  00156E                     i1u531_21:
  7395  00156E  0E01               	movlw	1
  7396  001570  EFBB  F00A         	goto	i1u532_20
  7397  001574                     i1u531_20:
  7398  001574  0E00               	movlw	0
  7399  001576                     i1u532_20:
  7400  001576  6E56               	movwf	i1_vfpfcnvrt$1810^0,c
  7401  001578  6A57               	clrf	(i1_vfpfcnvrt$1810+1)^0,c
  7402  00157A  5056               	movf	i1_vfpfcnvrt$1810^0,w,c
  7403  00157C  1057               	iorwf	(i1_vfpfcnvrt$1810+1)^0,w,c
  7404  00157E  A4D8               	btfss	status,2,c
  7405  001580  EFC4  F00A         	goto	i1u533_21
  7406  001584  EFC6  F00A         	goto	i1u533_20
  7407  001588                     i1u533_21:
  7408  001588  EF91  F00A         	goto	i1l4608
  7409  00158C                     i1u533_20:
  7410  00158C                     i1l4616:
  7411                           
  7412                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7413  00158C  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7414  001590  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7415  001594  CFDE FFF6          	movff	postinc2,tblptrl
  7416  001598  CFDD FFF7          	movff	postdec2,tblptrh
  7417  00159C                     	if	0	;tblptru may be non-zero
  7418  00159C                     	endif
  7419  00159C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7420  00159C  0E00               	movlw	low (__mediumconst shr (0+16))
  7421  00159E  6EF8               	movwf	tblptru,c
  7422  0015A0                     	endif
  7423  0015A0  0008               	tblrd		*
  7424  0015A2  50F5               	movf	tablat,w,c
  7425  0015A4  0A64               	xorlw	100
  7426  0015A6  B4D8               	btfsc	status,2,c
  7427  0015A8  EFD8  F00A         	goto	i1u534_21
  7428  0015AC  EFDA  F00A         	goto	i1u534_20
  7429  0015B0                     i1u534_21:
  7430  0015B0  EFEE  F00A         	goto	i1l4620
  7431  0015B4                     i1u534_20:
  7432  0015B4  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7433  0015B8  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7434  0015BC  CFDE FFF6          	movff	postinc2,tblptrl
  7435  0015C0  CFDD FFF7          	movff	postdec2,tblptrh
  7436  0015C4                     	if	0	;tblptru may be non-zero
  7437  0015C4                     	endif
  7438  0015C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7439  0015C4  0E00               	movlw	low (__mediumconst shr (0+16))
  7440  0015C6  6EF8               	movwf	tblptru,c
  7441  0015C8                     	endif
  7442  0015C8  0008               	tblrd		*
  7443  0015CA  50F5               	movf	tablat,w,c
  7444  0015CC  0A69               	xorlw	105
  7445  0015CE  A4D8               	btfss	status,2,c
  7446  0015D0  EFEC  F00A         	goto	i1u535_21
  7447  0015D4  EFEE  F00A         	goto	i1u535_20
  7448  0015D8                     i1u535_21:
  7449  0015D8  EF2E  F00B         	goto	i1l4626
  7450  0015DC                     i1u535_20:
  7451  0015DC                     i1l4620:
  7452                           
  7453                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  7454  0015DC  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7455  0015E0  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7456  0015E4  2ADE               	incf	postinc2,f,c
  7457  0015E6  0E00               	movlw	0
  7458  0015E8  22DD               	addwfc	postdec2,f,c
  7459                           
  7460                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7461  0015EA  C044  FFD9         	movff	i1vfpfcnvrt@ap,fsr2l
  7462  0015EE  C045  FFDA         	movff	i1vfpfcnvrt@ap+1,fsr2h
  7463  0015F2  CFDF F046          	movff	indf2,??i1_vfpfcnvrt
  7464  0015F6  0E02               	movlw	2
  7465  0015F8  26DE               	addwf	postinc2,f,c
  7466  0015FA  CFDF F047          	movff	indf2,??i1_vfpfcnvrt+1
  7467  0015FE  0E00               	movlw	0
  7468  001600  22DD               	addwfc	postdec2,f,c
  7469  001602  C046  FFD9         	movff	??i1_vfpfcnvrt,fsr2l
  7470  001606  C047  FFDA         	movff	??i1_vfpfcnvrt+1,fsr2h
  7471  00160A  CFDE F04A          	movff	postinc2,i1vfpfcnvrt@ll
  7472  00160E  CFDD F04B          	movff	postdec2,i1vfpfcnvrt@ll+1
  7473  001612  0E00               	movlw	0
  7474  001614  BE4B               	btfsc	(i1vfpfcnvrt@ll+1)^0,7,c
  7475  001616  0EFF               	movlw	-1
  7476  001618  6E4C               	movwf	(i1vfpfcnvrt@ll+2)^0,c
  7477  00161A  6E4D               	movwf	(i1vfpfcnvrt@ll+3)^0,c
  7478  00161C  6E4E               	movwf	(i1vfpfcnvrt@ll+4)^0,c
  7479  00161E  6E4F               	movwf	(i1vfpfcnvrt@ll+5)^0,c
  7480  001620  6E50               	movwf	(i1vfpfcnvrt@ll+6)^0,c
  7481  001622  6E51               	movwf	(i1vfpfcnvrt@ll+7)^0,c
  7482  001624                     
  7483                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  7484  001624  C040  F01C         	movff	i1vfpfcnvrt@fp,i1dtoa@fp
  7485  001628  C041  F01D         	movff	i1vfpfcnvrt@fp+1,i1dtoa@fp+1
  7486  00162C  C04A  F01E         	movff	i1vfpfcnvrt@ll,i1dtoa@d
  7487  001630  C04B  F01F         	movff	i1vfpfcnvrt@ll+1,i1dtoa@d+1
  7488  001634  C04C  F020         	movff	i1vfpfcnvrt@ll+2,i1dtoa@d+2
  7489  001638  C04D  F021         	movff	i1vfpfcnvrt@ll+3,i1dtoa@d+3
  7490  00163C  C04E  F022         	movff	i1vfpfcnvrt@ll+4,i1dtoa@d+4
  7491  001640  C04F  F023         	movff	i1vfpfcnvrt@ll+5,i1dtoa@d+5
  7492  001644  C050  F024         	movff	i1vfpfcnvrt@ll+6,i1dtoa@d+6
  7493  001648  C051  F025         	movff	i1vfpfcnvrt@ll+7,i1dtoa@d+7
  7494  00164C  EC3C  F00F         	call	i1_dtoa	;wreg free
  7495  001650  C01C  F040         	movff	?i1_dtoa,?i1_vfpfcnvrt
  7496  001654  C01D  F041         	movff	?i1_dtoa+1,?i1_vfpfcnvrt+1
  7497  001658  EFC2  F00B         	goto	i1l1034
  7498  00165C                     i1l4626:
  7499                           
  7500                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1171:         if 
      +                          (*fmt[0] == 's') {
  7501  00165C  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7502  001660  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7503  001664  CFDE FFF6          	movff	postinc2,tblptrl
  7504  001668  CFDD FFF7          	movff	postdec2,tblptrh
  7505  00166C                     	if	0	;tblptru may be non-zero
  7506  00166C                     	endif
  7507  00166C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7508  00166C  0E00               	movlw	low (__mediumconst shr (0+16))
  7509  00166E  6EF8               	movwf	tblptru,c
  7510  001670                     	endif
  7511  001670  0008               	tblrd		*
  7512  001672  50F5               	movf	tablat,w,c
  7513  001674  0A73               	xorlw	115
  7514  001676  A4D8               	btfss	status,2,c
  7515  001678  EF40  F00B         	goto	i1u536_21
  7516  00167C  EF42  F00B         	goto	i1u536_20
  7517  001680                     i1u536_21:
  7518  001680  EF6D  F00B         	goto	i1l4634
  7519  001684                     i1u536_20:
  7520  001684                     
  7521                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1173:            
      +                           ++*fmt;
  7522  001684  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7523  001688  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7524  00168C  2ADE               	incf	postinc2,f,c
  7525  00168E  0E00               	movlw	0
  7526  001690  22DD               	addwfc	postdec2,f,c
  7527                           
  7528                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1174:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  7529  001692  C044  FFD9         	movff	i1vfpfcnvrt@ap,fsr2l
  7530  001696  C045  FFDA         	movff	i1vfpfcnvrt@ap+1,fsr2h
  7531  00169A  CFDF F046          	movff	indf2,??i1_vfpfcnvrt
  7532  00169E  0E02               	movlw	2
  7533  0016A0  26DE               	addwf	postinc2,f,c
  7534  0016A2  CFDF F047          	movff	indf2,??i1_vfpfcnvrt+1
  7535  0016A6  0E00               	movlw	0
  7536  0016A8  22DD               	addwfc	postdec2,f,c
  7537  0016AA  C046  FFD9         	movff	??i1_vfpfcnvrt,fsr2l
  7538  0016AE  C047  FFDA         	movff	??i1_vfpfcnvrt+1,fsr2h
  7539  0016B2  CFDE F052          	movff	postinc2,i1vfpfcnvrt@cp
  7540  0016B6  CFDD F053          	movff	postdec2,i1vfpfcnvrt@cp+1
  7541  0016BA                     
  7542                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1176:            
      +                           return stoa(fp, cp);
  7543  0016BA  C040  F00A         	movff	i1vfpfcnvrt@fp,i1stoa@fp
  7544  0016BE  C041  F00B         	movff	i1vfpfcnvrt@fp+1,i1stoa@fp+1
  7545  0016C2  C052  F00C         	movff	i1vfpfcnvrt@cp,i1stoa@s
  7546  0016C6  C053  F00D         	movff	i1vfpfcnvrt@cp+1,i1stoa@s+1
  7547  0016CA  EC81  F015         	call	i1_stoa	;wreg free
  7548  0016CE  C00A  F040         	movff	?i1_stoa,?i1_vfpfcnvrt
  7549  0016D2  C00B  F041         	movff	?i1_stoa+1,?i1_vfpfcnvrt+1
  7550  0016D6  EFC2  F00B         	goto	i1l1034
  7551  0016DA                     i1l4634:
  7552                           
  7553                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  7554  0016DA  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7555  0016DE  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7556  0016E2  CFDE FFF6          	movff	postinc2,tblptrl
  7557  0016E6  CFDD FFF7          	movff	postdec2,tblptrh
  7558  0016EA                     	if	0	;tblptru may be non-zero
  7559  0016EA                     	endif
  7560  0016EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7561  0016EA  0E00               	movlw	low (__mediumconst shr (0+16))
  7562  0016EC  6EF8               	movwf	tblptru,c
  7563  0016EE                     	endif
  7564  0016EE  0008               	tblrd		*
  7565  0016F0  50F5               	movf	tablat,w,c
  7566  0016F2  0A25               	xorlw	37
  7567  0016F4  A4D8               	btfss	status,2,c
  7568  0016F6  EF7F  F00B         	goto	i1u537_21
  7569  0016FA  EF81  F00B         	goto	i1u537_20
  7570  0016FE                     i1u537_21:
  7571  0016FE  EF98  F00B         	goto	i1l4644
  7572  001702                     i1u537_20:
  7573  001702                     
  7574                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  7575  001702  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7576  001706  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7577  00170A  2ADE               	incf	postinc2,f,c
  7578  00170C  0E00               	movlw	0
  7579  00170E  22DD               	addwfc	postdec2,f,c
  7580  001710                     
  7581                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  7582  001710  0E00               	movlw	0
  7583  001712  6E02               	movwf	(i1fputc@c+1)^0,c
  7584  001714  0E25               	movlw	37
  7585  001716  6E01               	movwf	i1fputc@c^0,c
  7586  001718  C040  F003         	movff	i1vfpfcnvrt@fp,i1fputc@fp
  7587  00171C  C041  F004         	movff	i1vfpfcnvrt@fp+1,i1fputc@fp+1
  7588  001720  ECD9  F018         	call	i1_fputc	;wreg free
  7589  001724                     i1l4640:
  7590                           
  7591                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  7592  001724  0E00               	movlw	0
  7593  001726  6E41               	movwf	(?i1_vfpfcnvrt+1)^0,c
  7594  001728  0E01               	movlw	1
  7595  00172A  6E40               	movwf	?i1_vfpfcnvrt^0,c
  7596  00172C  EFC2  F00B         	goto	i1l1034
  7597  001730                     i1l4644:
  7598                           
  7599                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  7600  001730  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7601  001734  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7602  001738  2ADE               	incf	postinc2,f,c
  7603  00173A  0E00               	movlw	0
  7604  00173C  22DD               	addwfc	postdec2,f,c
  7605  00173E                     
  7606                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  7607  00173E  0E00               	movlw	0
  7608  001740  6E41               	movwf	(?i1_vfpfcnvrt+1)^0,c
  7609  001742  0E00               	movlw	0
  7610  001744  6E40               	movwf	?i1_vfpfcnvrt^0,c
  7611  001746  EFC2  F00B         	goto	i1l1034
  7612  00174A                     i1l4650:
  7613                           
  7614                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  7615  00174A  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7616  00174E  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7617  001752  CFDE FFF6          	movff	postinc2,tblptrl
  7618  001756  CFDD FFF7          	movff	postdec2,tblptrh
  7619  00175A                     	if	0	;tblptru may be non-zero
  7620  00175A                     	endif
  7621  00175A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7622  00175A  0E00               	movlw	low (__mediumconst shr (0+16))
  7623  00175C  6EF8               	movwf	tblptru,c
  7624  00175E                     	endif
  7625  00175E  0008               	tblrd		*
  7626  001760  50F5               	movf	tablat,w,c
  7627  001762  6E01               	movwf	i1fputc@c^0,c
  7628  001764  6A02               	clrf	(i1fputc@c+1)^0,c
  7629  001766  C040  F003         	movff	i1vfpfcnvrt@fp,i1fputc@fp
  7630  00176A  C041  F004         	movff	i1vfpfcnvrt@fp+1,i1fputc@fp+1
  7631  00176E  ECD9  F018         	call	i1_fputc	;wreg free
  7632  001772                     
  7633                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  7634  001772  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7635  001776  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7636  00177A  2ADE               	incf	postinc2,f,c
  7637  00177C  0E00               	movlw	0
  7638  00177E  22DD               	addwfc	postdec2,f,c
  7639  001780  EF92  F00B         	goto	i1l4640
  7640  001784                     i1l1034:
  7641  001784  0012               	return		;funcret
  7642  001786                     __end_ofi1_vfpfcnvrt:
  7643                           	callstack 0
  7644                           
  7645 ;; *************** function i1_stoa *****************
  7646 ;; Defined at:
  7647 ;;		line 568 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  7648 ;; Parameters:    Size  Location     Type
  7649 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  7650 ;;		 -> NULL(0), sprintf@f(6), 
  7651 ;;  s               2   11[COMRAM] PTR unsigned char 
  7652 ;;		 -> ?_printf(2), ?_sprintf(2), time_now@daylist(70), 
  7653 ;; Auto vars:     Size  Location     Type
  7654 ;;  nuls            7   14[COMRAM] unsigned char [7]
  7655 ;;  l               2   29[COMRAM] int 
  7656 ;;  p               2   27[COMRAM] int 
  7657 ;;  cp              2   25[COMRAM] PTR unsigned char 
  7658 ;;		 -> i1stoa@nuls(7), ?_printf(2), stoa@nuls(7), ?_sprintf(2), 
  7659 ;;		 -> time_now@daylist(70), 
  7660 ;;  w               2   23[COMRAM] int 
  7661 ;;  i               2   21[COMRAM] int 
  7662 ;; Return value:  Size  Location     Type
  7663 ;;                  2    9[COMRAM] int 
  7664 ;; Registers used:
  7665 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7666 ;; Tracked objects:
  7667 ;;		On entry : 0/0
  7668 ;;		On exit  : 0/0
  7669 ;;		Unchanged: 0/0
  7670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7671 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7672 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7673 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7674 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7675 ;;Total ram usage:       22 bytes
  7676 ;; Hardware stack levels used:    1
  7677 ;; Hardware stack levels required when called:    3
  7678 ;; This function calls:
  7679 ;;		i1_fputc
  7680 ;;		i1_strlen
  7681 ;; This function is called by:
  7682 ;;		i1_vfpfcnvrt
  7683 ;; This function uses a non-reentrant model
  7684 ;;
  7685                           
  7686                           	psect	text37
  7687  002B02                     __ptext37:
  7688                           	callstack 0
  7689  002B02                     i1_stoa:
  7690                           	callstack 14
  7691  002B02                     
  7692                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 568: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 569: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 570:  
      +                             char *cp, nuls[] = "(null)";
  7693  002B02  EE20  F0E3         	lfsr	2,stoa@F1141
  7694  002B06  EE10  F00F         	lfsr	1,i1stoa@nuls
  7695  002B0A  0E06               	movlw	6
  7696  002B0C                     i1u505_21:
  7697  002B0C  CFDB FFE3          	movff	plusw2,plusw1
  7698  002B10  06E8               	decf	wreg,f,c
  7699  002B12  E2FC               	bc	i1u505_21
  7700  002B14                     
  7701                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 571:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 574:     c
      +                          p = s;
  7702  002B14  C00C  F01A         	movff	i1stoa@s,i1stoa@cp
  7703  002B18  C00D  F01B         	movff	i1stoa@s+1,i1stoa@cp+1
  7704  002B1C                     
  7705                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 575:     if (!cp)
      +                           {
  7706  002B1C  501A               	movf	i1stoa@cp^0,w,c
  7707  002B1E  101B               	iorwf	(i1stoa@cp+1)^0,w,c
  7708  002B20  A4D8               	btfss	status,2,c
  7709  002B22  EF95  F015         	goto	i1u506_21
  7710  002B26  EF97  F015         	goto	i1u506_20
  7711  002B2A                     i1u506_21:
  7712  002B2A  EF9B  F015         	goto	i1l4454
  7713  002B2E                     i1u506_20:
  7714  002B2E                     
  7715                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 576:         cp =
      +                           nuls;
  7716  002B2E  0E0F               	movlw	low i1stoa@nuls
  7717  002B30  6E1A               	movwf	i1stoa@cp^0,c
  7718  002B32  0E00               	movlw	high i1stoa@nuls
  7719  002B34  6E1B               	movwf	(i1stoa@cp+1)^0,c
  7720  002B36                     i1l4454:
  7721                           
  7722                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 580:     l = (int
      +                          )strlen(cp);
  7723  002B36  C01A  F001         	movff	i1stoa@cp,i1strlen@s
  7724  002B3A  C01B  F002         	movff	i1stoa@cp+1,i1strlen@s+1
  7725  002B3E  EC21  F01D         	call	i1_strlen	;wreg free
  7726  002B42  C001  F01E         	movff	?i1_strlen,i1stoa@l
  7727  002B46  C002  F01F         	movff	?i1_strlen+1,i1stoa@l+1
  7728  002B4A                     
  7729                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 581:     p = prec
      +                          ;
  7730  002B4A  C0DE  F01C         	movff	_prec,i1stoa@p
  7731  002B4E  C0DF  F01D         	movff	_prec+1,i1stoa@p+1
  7732  002B52                     
  7733                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 582:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  7734  002B52  BE1D               	btfsc	(i1stoa@p+1)^0,7,c
  7735  002B54  EFAE  F015         	goto	i1u507_21
  7736  002B58  EFB0  F015         	goto	i1u507_20
  7737  002B5C                     i1u507_21:
  7738  002B5C  EFC5  F015         	goto	i1l991
  7739  002B60                     i1u507_20:
  7740  002B60  501E               	movf	i1stoa@l^0,w,c
  7741  002B62  5C1C               	subwf	i1stoa@p^0,w,c
  7742  002B64  501D               	movf	(i1stoa@p+1)^0,w,c
  7743  002B66  0A80               	xorlw	128
  7744  002B68  6E0E               	movwf	??i1_stoa^0,c
  7745  002B6A  501F               	movf	(i1stoa@l+1)^0,w,c
  7746  002B6C  0A80               	xorlw	128
  7747  002B6E  580E               	subwfb	??i1_stoa^0,w,c
  7748  002B70  A0D8               	btfss	status,0,c
  7749  002B72  EFBD  F015         	goto	i1u508_21
  7750  002B76  EFBF  F015         	goto	i1u508_20
  7751  002B7A                     i1u508_21:
  7752  002B7A  EFC1  F015         	goto	i1l989
  7753  002B7E                     i1u508_20:
  7754  002B7E  EFC5  F015         	goto	i1l991
  7755  002B82                     i1l989:
  7756  002B82  C01C  F01E         	movff	i1stoa@p,i1stoa@l
  7757  002B86  C01D  F01F         	movff	i1stoa@p+1,i1stoa@l+1
  7758  002B8A                     i1l991:
  7759                           
  7760                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 583:     p = l;
  7761  002B8A  C01E  F01C         	movff	i1stoa@l,i1stoa@p
  7762  002B8E  C01F  F01D         	movff	i1stoa@l+1,i1stoa@p+1
  7763                           
  7764                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 584:     w = widt
      +                          h;
  7765  002B92  C0DC  F018         	movff	_width,i1stoa@w
  7766  002B96  C0DD  F019         	movff	_width+1,i1stoa@w+1
  7767                           
  7768                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 587:     if (!(fl
      +                          ags & (1 << 0))) {
  7769  002B9A  0100               	movlb	0	; () banked
  7770  002B9C  B1E0               	btfsc	_flags& (0+255),0,b
  7771  002B9E  EFD3  F015         	goto	i1u509_21
  7772  002BA2  EFD5  F015         	goto	i1u509_20
  7773  002BA6                     i1u509_21:
  7774  002BA6  EFF2  F015         	goto	i1l4470
  7775  002BAA                     i1u509_20:
  7776  002BAA  EFE3  F015         	goto	i1l4468
  7777  002BAE                     i1l4464:
  7778                           
  7779                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 589:             
      +                          fputc(' ', fp);
  7780  002BAE  0E00               	movlw	0
  7781  002BB0  6E02               	movwf	(i1fputc@c+1)^0,c
  7782  002BB2  0E20               	movlw	32
  7783  002BB4  6E01               	movwf	i1fputc@c^0,c
  7784  002BB6  C00A  F003         	movff	i1stoa@fp,i1fputc@fp
  7785  002BBA  C00B  F004         	movff	i1stoa@fp+1,i1fputc@fp+1
  7786  002BBE  ECD9  F018         	call	i1_fputc	;wreg free
  7787  002BC2                     
  7788                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 590:             
      +                          ++l;
  7789  002BC2  4A1E               	infsnz	i1stoa@l^0,f,c
  7790  002BC4  2A1F               	incf	(i1stoa@l+1)^0,f,c
  7791  002BC6                     i1l4468:
  7792                           
  7793                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 588:         whil
      +                          e (l < w) {
  7794  002BC6  5018               	movf	i1stoa@w^0,w,c
  7795  002BC8  5C1E               	subwf	i1stoa@l^0,w,c
  7796  002BCA  501F               	movf	(i1stoa@l+1)^0,w,c
  7797  002BCC  0A80               	xorlw	128
  7798  002BCE  6E0E               	movwf	??i1_stoa^0,c
  7799  002BD0  5019               	movf	(i1stoa@w+1)^0,w,c
  7800  002BD2  0A80               	xorlw	128
  7801  002BD4  580E               	subwfb	??i1_stoa^0,w,c
  7802  002BD6  A0D8               	btfss	status,0,c
  7803  002BD8  EFF0  F015         	goto	i1u510_21
  7804  002BDC  EFF2  F015         	goto	i1u510_20
  7805  002BE0                     i1u510_21:
  7806  002BE0  EFD7  F015         	goto	i1l4464
  7807  002BE4                     i1u510_20:
  7808  002BE4                     i1l4470:
  7809                           
  7810                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 595:     i = 0;
  7811  002BE4  0E00               	movlw	0
  7812  002BE6  6E17               	movwf	(i1stoa@i+1)^0,c
  7813  002BE8  0E00               	movlw	0
  7814  002BEA  6E16               	movwf	i1stoa@i^0,c
  7815                           
  7816                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  7817  002BEC  EF0B  F016         	goto	i1l4478
  7818  002BF0                     i1l4472:
  7819                           
  7820                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 597:         fput
      +                          c(*cp, fp);
  7821  002BF0  C01A  FFD9         	movff	i1stoa@cp,fsr2l
  7822  002BF4  C01B  FFDA         	movff	i1stoa@cp+1,fsr2h
  7823  002BF8  50DF               	movf	indf2,w,c
  7824  002BFA  6E0E               	movwf	??i1_stoa^0,c
  7825  002BFC  500E               	movf	??i1_stoa^0,w,c
  7826  002BFE  6E01               	movwf	i1fputc@c^0,c
  7827  002C00  6A02               	clrf	(i1fputc@c+1)^0,c
  7828  002C02  C00A  F003         	movff	i1stoa@fp,i1fputc@fp
  7829  002C06  C00B  F004         	movff	i1stoa@fp+1,i1fputc@fp+1
  7830  002C0A  ECD9  F018         	call	i1_fputc	;wreg free
  7831  002C0E                     
  7832                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 598:         ++cp
      +                          ;
  7833  002C0E  4A1A               	infsnz	i1stoa@cp^0,f,c
  7834  002C10  2A1B               	incf	(i1stoa@cp+1)^0,f,c
  7835  002C12                     
  7836                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 599:         ++i;
  7837  002C12  4A16               	infsnz	i1stoa@i^0,f,c
  7838  002C14  2A17               	incf	(i1stoa@i+1)^0,f,c
  7839  002C16                     i1l4478:
  7840                           
  7841                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  7842  002C16  501C               	movf	i1stoa@p^0,w,c
  7843  002C18  5C16               	subwf	i1stoa@i^0,w,c
  7844  002C1A  5017               	movf	(i1stoa@i+1)^0,w,c
  7845  002C1C  0A80               	xorlw	128
  7846  002C1E  6E0E               	movwf	??i1_stoa^0,c
  7847  002C20  501D               	movf	(i1stoa@p+1)^0,w,c
  7848  002C22  0A80               	xorlw	128
  7849  002C24  580E               	subwfb	??i1_stoa^0,w,c
  7850  002C26  A0D8               	btfss	status,0,c
  7851  002C28  EF18  F016         	goto	i1u511_21
  7852  002C2C  EF1A  F016         	goto	i1u511_20
  7853  002C30                     i1u511_21:
  7854  002C30  EFF8  F015         	goto	i1l4472
  7855  002C34                     i1u511_20:
  7856  002C34                     
  7857                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 603:     if (flag
      +                          s & (1 << 0)) {
  7858  002C34  0100               	movlb	0	; () banked
  7859  002C36  A1E0               	btfss	_flags& (0+255),0,b
  7860  002C38  EF20  F016         	goto	i1u512_21
  7861  002C3C  EF22  F016         	goto	i1u512_20
  7862  002C40                     i1u512_21:
  7863  002C40  EF3F  F016         	goto	i1l1001
  7864  002C44                     i1u512_20:
  7865  002C44  EF30  F016         	goto	i1l4486
  7866  002C48                     i1l4482:
  7867                           
  7868                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 605:             
      +                          fputc(' ', fp);
  7869  002C48  0E00               	movlw	0
  7870  002C4A  6E02               	movwf	(i1fputc@c+1)^0,c
  7871  002C4C  0E20               	movlw	32
  7872  002C4E  6E01               	movwf	i1fputc@c^0,c
  7873  002C50  C00A  F003         	movff	i1stoa@fp,i1fputc@fp
  7874  002C54  C00B  F004         	movff	i1stoa@fp+1,i1fputc@fp+1
  7875  002C58  ECD9  F018         	call	i1_fputc	;wreg free
  7876  002C5C                     
  7877                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 606:             
      +                          ++l;
  7878  002C5C  4A1E               	infsnz	i1stoa@l^0,f,c
  7879  002C5E  2A1F               	incf	(i1stoa@l+1)^0,f,c
  7880  002C60                     i1l4486:
  7881                           
  7882                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 604:         whil
      +                          e (l < w) {
  7883  002C60  5018               	movf	i1stoa@w^0,w,c
  7884  002C62  5C1E               	subwf	i1stoa@l^0,w,c
  7885  002C64  501F               	movf	(i1stoa@l+1)^0,w,c
  7886  002C66  0A80               	xorlw	128
  7887  002C68  6E0E               	movwf	??i1_stoa^0,c
  7888  002C6A  5019               	movf	(i1stoa@w+1)^0,w,c
  7889  002C6C  0A80               	xorlw	128
  7890  002C6E  580E               	subwfb	??i1_stoa^0,w,c
  7891  002C70  A0D8               	btfss	status,0,c
  7892  002C72  EF3D  F016         	goto	i1u513_21
  7893  002C76  EF3F  F016         	goto	i1u513_20
  7894  002C7A                     i1u513_21:
  7895  002C7A  EF24  F016         	goto	i1l4482
  7896  002C7E                     i1u513_20:
  7897  002C7E                     i1l1001:
  7898                           
  7899                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 610:     return l
      +                          ;
  7900  002C7E  C01E  F00A         	movff	i1stoa@l,?i1_stoa
  7901  002C82  C01F  F00B         	movff	i1stoa@l+1,?i1_stoa+1
  7902  002C86  0012               	return		;funcret
  7903  002C88                     __end_ofi1_stoa:
  7904                           	callstack 0
  7905                           
  7906 ;; *************** function i1_dtoa *****************
  7907 ;; Defined at:
  7908 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  7909 ;; Parameters:    Size  Location     Type
  7910 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7911 ;;		 -> NULL(0), sprintf@f(6), 
  7912 ;;  d               8   29[COMRAM] long long 
  7913 ;; Auto vars:     Size  Location     Type
  7914 ;;  n               8   53[COMRAM] long long 
  7915 ;;  i               2   61[COMRAM] int 
  7916 ;;  s               2   51[COMRAM] int 
  7917 ;;  w               2   49[COMRAM] int 
  7918 ;;  p               2   47[COMRAM] int 
  7919 ;; Return value:  Size  Location     Type
  7920 ;;                  2   27[COMRAM] int 
  7921 ;; Registers used:
  7922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7923 ;; Tracked objects:
  7924 ;;		On entry : 0/0
  7925 ;;		On exit  : 0/0
  7926 ;;		Unchanged: 0/0
  7927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7928 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7929 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7930 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7931 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7932 ;;Total ram usage:       36 bytes
  7933 ;; Hardware stack levels used:    1
  7934 ;; Hardware stack levels required when called:    5
  7935 ;; This function calls:
  7936 ;;		i1___aodiv
  7937 ;;		i1___aomod
  7938 ;;		i1_abs
  7939 ;;		i1_pad
  7940 ;; This function is called by:
  7941 ;;		i1_vfpfcnvrt
  7942 ;; This function uses a non-reentrant model
  7943 ;;
  7944                           
  7945                           	psect	text38
  7946  001E78                     __ptext38:
  7947                           	callstack 0
  7948  001E78                     i1_dtoa:
  7949                           	callstack 12
  7950  001E78                     
  7951                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7952  001E78  C01E  F036         	movff	i1dtoa@d,i1dtoa@n
  7953  001E7C  C01F  F037         	movff	i1dtoa@d+1,i1dtoa@n+1
  7954  001E80  C020  F038         	movff	i1dtoa@d+2,i1dtoa@n+2
  7955  001E84  C021  F039         	movff	i1dtoa@d+3,i1dtoa@n+3
  7956  001E88  C022  F03A         	movff	i1dtoa@d+4,i1dtoa@n+4
  7957  001E8C  C023  F03B         	movff	i1dtoa@d+5,i1dtoa@n+5
  7958  001E90  C024  F03C         	movff	i1dtoa@d+6,i1dtoa@n+6
  7959  001E94  C025  F03D         	movff	i1dtoa@d+7,i1dtoa@n+7
  7960  001E98                     
  7961                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7962  001E98  BE3D               	btfsc	(i1dtoa@n+7)^0,7,c
  7963  001E9A  EF51  F00F         	goto	i1u490_21
  7964  001E9E  EF54  F00F         	goto	i1u490_20
  7965  001EA2                     i1u490_21:
  7966  001EA2  0E01               	movlw	1
  7967  001EA4  EF55  F00F         	goto	i1u491_20
  7968  001EA8                     i1u490_20:
  7969  001EA8  0E00               	movlw	0
  7970  001EAA                     i1u491_20:
  7971  001EAA  6E34               	movwf	i1dtoa@s^0,c
  7972  001EAC  6A35               	clrf	(i1dtoa@s+1)^0,c
  7973                           
  7974                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7975  001EAE  5034               	movf	i1dtoa@s^0,w,c
  7976  001EB0  1035               	iorwf	(i1dtoa@s+1)^0,w,c
  7977  001EB2  B4D8               	btfsc	status,2,c
  7978  001EB4  EF5E  F00F         	goto	i1u492_21
  7979  001EB8  EF60  F00F         	goto	i1u492_20
  7980  001EBC                     i1u492_21:
  7981  001EBC  EF70  F00F         	goto	i1l4390
  7982  001EC0                     i1u492_20:
  7983  001EC0                     
  7984                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7985  001EC0  1E3D               	comf	(i1dtoa@n+7)^0,f,c
  7986  001EC2  1E3C               	comf	(i1dtoa@n+6)^0,f,c
  7987  001EC4  1E3B               	comf	(i1dtoa@n+5)^0,f,c
  7988  001EC6  1E3A               	comf	(i1dtoa@n+4)^0,f,c
  7989  001EC8  1E39               	comf	(i1dtoa@n+3)^0,f,c
  7990  001ECA  1E38               	comf	(i1dtoa@n+2)^0,f,c
  7991  001ECC  1E37               	comf	(i1dtoa@n+1)^0,f,c
  7992  001ECE  6C36               	negf	i1dtoa@n^0,c
  7993  001ED0  0E00               	movlw	0
  7994  001ED2  2237               	addwfc	(i1dtoa@n+1)^0,f,c
  7995  001ED4  2238               	addwfc	(i1dtoa@n+2)^0,f,c
  7996  001ED6  2239               	addwfc	(i1dtoa@n+3)^0,f,c
  7997  001ED8  223A               	addwfc	(i1dtoa@n+4)^0,f,c
  7998  001EDA  223B               	addwfc	(i1dtoa@n+5)^0,f,c
  7999  001EDC  223C               	addwfc	(i1dtoa@n+6)^0,f,c
  8000  001EDE  223D               	addwfc	(i1dtoa@n+7)^0,f,c
  8001  001EE0                     i1l4390:
  8002                           
  8003                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  8004  001EE0  0100               	movlb	0	; () banked
  8005  001EE2  BFDF               	btfsc	(_prec+1)& (0+255),7,b
  8006  001EE4  EF76  F00F         	goto	i1u493_21
  8007  001EE8  EF78  F00F         	goto	i1u493_20
  8008  001EEC                     i1u493_21:
  8009  001EEC  EF79  F00F         	goto	i1l4394
  8010  001EF0                     i1u493_20:
  8011  001EF0                     
  8012                           ; BSR set to: 0
  8013                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  8014  001EF0  93E0               	bcf	_flags& (0+255),1,b
  8015  001EF2                     i1l4394:
  8016                           
  8017                           ; BSR set to: 0
  8018                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  8019  001EF2  BFDF               	btfsc	(_prec+1)& (0+255),7,b
  8020  001EF4  EF86  F00F         	goto	i1u494_20
  8021  001EF8  51DF               	movf	(_prec+1)& (0+255),w,b
  8022  001EFA  E106               	bnz	i1u494_21
  8023  001EFC  05DE               	decf	_prec& (0+255),w,b
  8024  001EFE  B0D8               	btfsc	status,0,c
  8025  001F00  EF84  F00F         	goto	i1u494_21
  8026  001F04  EF86  F00F         	goto	i1u494_20
  8027  001F08                     i1u494_21:
  8028  001F08  EF8C  F00F         	goto	i1l962
  8029  001F0C                     i1u494_20:
  8030  001F0C                     
  8031                           ; BSR set to: 0
  8032  001F0C  0E00               	movlw	0
  8033  001F0E  6E31               	movwf	(i1dtoa@p+1)^0,c
  8034  001F10  0E01               	movlw	1
  8035  001F12  6E30               	movwf	i1dtoa@p^0,c
  8036  001F14  EF90  F00F         	goto	i1l964
  8037  001F18                     i1l962:
  8038                           
  8039                           ; BSR set to: 0
  8040  001F18  C0DE  F030         	movff	_prec,i1dtoa@p
  8041  001F1C  C0DF  F031         	movff	_prec+1,i1dtoa@p+1
  8042  001F20                     i1l964:
  8043                           
  8044                           ; BSR set to: 0
  8045                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  8046  001F20  C0DC  F032         	movff	_width,i1dtoa@w
  8047  001F24  C0DD  F033         	movff	_width+1,i1dtoa@w+1
  8048  001F28                     
  8049                           ; BSR set to: 0
  8050                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  8051  001F28  5034               	movf	i1dtoa@s^0,w,c
  8052  001F2A  1035               	iorwf	(i1dtoa@s+1)^0,w,c
  8053  001F2C  A4D8               	btfss	status,2,c
  8054  001F2E  EF9B  F00F         	goto	i1u495_21
  8055  001F32  EF9D  F00F         	goto	i1u495_20
  8056  001F36                     i1u495_21:
  8057  001F36  EFA4  F00F         	goto	i1l4402
  8058  001F3A                     i1u495_20:
  8059  001F3A                     
  8060                           ; BSR set to: 0
  8061  001F3A  A5E0               	btfss	_flags& (0+255),2,b
  8062  001F3C  EFA2  F00F         	goto	i1u496_21
  8063  001F40  EFA4  F00F         	goto	i1u496_20
  8064  001F44                     i1u496_21:
  8065  001F44  EFA7  F00F         	goto	i1l4404
  8066  001F48                     i1u496_20:
  8067  001F48                     i1l4402:
  8068                           
  8069                           ; BSR set to: 0
  8070                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  8071  001F48  0632               	decf	i1dtoa@w^0,f,c
  8072  001F4A  A0D8               	btfss	status,0,c
  8073  001F4C  0633               	decf	(i1dtoa@w+1)^0,f,c
  8074  001F4E                     i1l4404:
  8075                           
  8076                           ; BSR set to: 0
  8077                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  8078  001F4E  0E00               	movlw	0
  8079  001F50  6E3F               	movwf	(i1dtoa@i+1)^0,c
  8080  001F52  0E1F               	movlw	31
  8081  001F54  6E3E               	movwf	i1dtoa@i^0,c
  8082  001F56                     
  8083                           ; BSR set to: 0
  8084                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  8085  001F56  0E00               	movlw	0
  8086  001F58  0102               	movlb	2	; () banked
  8087  001F5A  6FE3               	movwf	(_dbuf+31)& (0+255),b
  8088                           
  8089                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8090  001F5C  EF2C  F010         	goto	i1l4418
  8091  001F60                     i1l4408:
  8092                           
  8093                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  8094  001F60  063E               	decf	i1dtoa@i^0,f,c
  8095  001F62  A0D8               	btfss	status,0,c
  8096  001F64  063F               	decf	(i1dtoa@i+1)^0,f,c
  8097  001F66                     
  8098                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  8099  001F66  0EC4               	movlw	low _dbuf
  8100  001F68  243E               	addwf	i1dtoa@i^0,w,c
  8101  001F6A  6ED9               	movwf	fsr2l,c
  8102  001F6C  0E02               	movlw	high _dbuf
  8103  001F6E  203F               	addwfc	(i1dtoa@i+1)^0,w,c
  8104  001F70  6EDA               	movwf	fsr2h,c
  8105  001F72  C036  F001         	movff	i1dtoa@n,i1___aomod@dividend
  8106  001F76  C037  F002         	movff	i1dtoa@n+1,i1___aomod@dividend+1
  8107  001F7A  C038  F003         	movff	i1dtoa@n+2,i1___aomod@dividend+2
  8108  001F7E  C039  F004         	movff	i1dtoa@n+3,i1___aomod@dividend+3
  8109  001F82  C03A  F005         	movff	i1dtoa@n+4,i1___aomod@dividend+4
  8110  001F86  C03B  F006         	movff	i1dtoa@n+5,i1___aomod@dividend+5
  8111  001F8A  C03C  F007         	movff	i1dtoa@n+6,i1___aomod@dividend+6
  8112  001F8E  C03D  F008         	movff	i1dtoa@n+7,i1___aomod@dividend+7
  8113  001F92  0E0A               	movlw	10
  8114  001F94  6E09               	movwf	i1___aomod@divisor^0,c
  8115  001F96  0E00               	movlw	0
  8116  001F98  6E0A               	movwf	(i1___aomod@divisor+1)^0,c
  8117  001F9A  0E00               	movlw	0
  8118  001F9C  6E0B               	movwf	(i1___aomod@divisor+2)^0,c
  8119  001F9E  0E00               	movlw	0
  8120  001FA0  6E0C               	movwf	(i1___aomod@divisor+3)^0,c
  8121  001FA2  0E00               	movlw	0
  8122  001FA4  6E0D               	movwf	(i1___aomod@divisor+4)^0,c
  8123  001FA6  0E00               	movlw	0
  8124  001FA8  6E0E               	movwf	(i1___aomod@divisor+5)^0,c
  8125  001FAA  0E00               	movlw	0
  8126  001FAC  6E0F               	movwf	(i1___aomod@divisor+6)^0,c
  8127  001FAE  0E00               	movlw	0
  8128  001FB0  6E10               	movwf	(i1___aomod@divisor+7)^0,c
  8129  001FB2  ECF7  F016         	call	i1___aomod	;wreg free
  8130  001FB6  C001  F026         	movff	?i1___aomod,??i1_dtoa
  8131  001FBA  C002  F027         	movff	?i1___aomod+1,??i1_dtoa+1
  8132  001FBE  C003  F028         	movff	?i1___aomod+2,??i1_dtoa+2
  8133  001FC2  C004  F029         	movff	?i1___aomod+3,??i1_dtoa+3
  8134  001FC6  C005  F02A         	movff	?i1___aomod+4,??i1_dtoa+4
  8135  001FCA  C006  F02B         	movff	?i1___aomod+5,??i1_dtoa+5
  8136  001FCE  C007  F02C         	movff	?i1___aomod+6,??i1_dtoa+6
  8137  001FD2  C008  F02D         	movff	?i1___aomod+7,??i1_dtoa+7
  8138  001FD6  C026  F013         	movff	??i1_dtoa,i1abs@a
  8139  001FDA  C028  F014         	movff	??i1_dtoa+2,i1abs@a+1
  8140  001FDE  EC71  F01C         	call	i1_abs	;wreg free
  8141  001FE2  5013               	movf	?i1_abs^0,w,c
  8142  001FE4  0F30               	addlw	48
  8143  001FE6  6EDF               	movwf	indf2,c
  8144  001FE8                     
  8145                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  8146  001FE8  0630               	decf	i1dtoa@p^0,f,c
  8147  001FEA  A0D8               	btfss	status,0,c
  8148  001FEC  0631               	decf	(i1dtoa@p+1)^0,f,c
  8149  001FEE                     
  8150                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  8151  001FEE  0632               	decf	i1dtoa@w^0,f,c
  8152  001FF0  A0D8               	btfss	status,0,c
  8153  001FF2  0633               	decf	(i1dtoa@w+1)^0,f,c
  8154  001FF4                     
  8155                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  8156  001FF4  C036  F001         	movff	i1dtoa@n,i1___aodiv@dividend
  8157  001FF8  C037  F002         	movff	i1dtoa@n+1,i1___aodiv@dividend+1
  8158  001FFC  C038  F003         	movff	i1dtoa@n+2,i1___aodiv@dividend+2
  8159  002000  C039  F004         	movff	i1dtoa@n+3,i1___aodiv@dividend+3
  8160  002004  C03A  F005         	movff	i1dtoa@n+4,i1___aodiv@dividend+4
  8161  002008  C03B  F006         	movff	i1dtoa@n+5,i1___aodiv@dividend+5
  8162  00200C  C03C  F007         	movff	i1dtoa@n+6,i1___aodiv@dividend+6
  8163  002010  C03D  F008         	movff	i1dtoa@n+7,i1___aodiv@dividend+7
  8164  002014  0E0A               	movlw	10
  8165  002016  6E09               	movwf	i1___aodiv@divisor^0,c
  8166  002018  0E00               	movlw	0
  8167  00201A  6E0A               	movwf	(i1___aodiv@divisor+1)^0,c
  8168  00201C  0E00               	movlw	0
  8169  00201E  6E0B               	movwf	(i1___aodiv@divisor+2)^0,c
  8170  002020  0E00               	movlw	0
  8171  002022  6E0C               	movwf	(i1___aodiv@divisor+3)^0,c
  8172  002024  0E00               	movlw	0
  8173  002026  6E0D               	movwf	(i1___aodiv@divisor+4)^0,c
  8174  002028  0E00               	movlw	0
  8175  00202A  6E0E               	movwf	(i1___aodiv@divisor+5)^0,c
  8176  00202C  0E00               	movlw	0
  8177  00202E  6E0F               	movwf	(i1___aodiv@divisor+6)^0,c
  8178  002030  0E00               	movlw	0
  8179  002032  6E10               	movwf	(i1___aodiv@divisor+7)^0,c
  8180  002034  ECBD  F014         	call	i1___aodiv	;wreg free
  8181  002038  C001  F036         	movff	?i1___aodiv,i1dtoa@n
  8182  00203C  C002  F037         	movff	?i1___aodiv+1,i1dtoa@n+1
  8183  002040  C003  F038         	movff	?i1___aodiv+2,i1dtoa@n+2
  8184  002044  C004  F039         	movff	?i1___aodiv+3,i1dtoa@n+3
  8185  002048  C005  F03A         	movff	?i1___aodiv+4,i1dtoa@n+4
  8186  00204C  C006  F03B         	movff	?i1___aodiv+5,i1dtoa@n+5
  8187  002050  C007  F03C         	movff	?i1___aodiv+6,i1dtoa@n+6
  8188  002054  C008  F03D         	movff	?i1___aodiv+7,i1dtoa@n+7
  8189  002058                     i1l4418:
  8190                           
  8191                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8192  002058  BE3F               	btfsc	(i1dtoa@i+1)^0,7,c
  8193  00205A  EF37  F010         	goto	i1u497_21
  8194  00205E  503F               	movf	(i1dtoa@i+1)^0,w,c
  8195  002060  E108               	bnz	i1u497_20
  8196  002062  043E               	decf	i1dtoa@i^0,w,c
  8197  002064  A0D8               	btfss	status,0,c
  8198  002066  EF37  F010         	goto	i1u497_21
  8199  00206A  EF39  F010         	goto	i1u497_20
  8200  00206E                     i1u497_21:
  8201  00206E  EF6A  F010         	goto	i1l4428
  8202  002072                     i1u497_20:
  8203  002072  5036               	movf	i1dtoa@n^0,w,c
  8204  002074  1037               	iorwf	(i1dtoa@n+1)^0,w,c
  8205  002076  1038               	iorwf	(i1dtoa@n+2)^0,w,c
  8206  002078  1039               	iorwf	(i1dtoa@n+3)^0,w,c
  8207  00207A  103A               	iorwf	(i1dtoa@n+4)^0,w,c
  8208  00207C  103B               	iorwf	(i1dtoa@n+5)^0,w,c
  8209  00207E  103C               	iorwf	(i1dtoa@n+6)^0,w,c
  8210  002080  103D               	iorwf	(i1dtoa@n+7)^0,w,c
  8211  002082  A4D8               	btfss	status,2,c
  8212  002084  EF46  F010         	goto	i1u498_21
  8213  002088  EF48  F010         	goto	i1u498_20
  8214  00208C                     i1u498_21:
  8215  00208C  EFB0  F00F         	goto	i1l4408
  8216  002090                     i1u498_20:
  8217  002090  BE31               	btfsc	(i1dtoa@p+1)^0,7,c
  8218  002092  EF55  F010         	goto	i1u499_20
  8219  002096  5031               	movf	(i1dtoa@p+1)^0,w,c
  8220  002098  E106               	bnz	i1u499_21
  8221  00209A  0430               	decf	i1dtoa@p^0,w,c
  8222  00209C  B0D8               	btfsc	status,0,c
  8223  00209E  EF53  F010         	goto	i1u499_21
  8224  0020A2  EF55  F010         	goto	i1u499_20
  8225  0020A6                     i1u499_21:
  8226  0020A6  EFB0  F00F         	goto	i1l4408
  8227  0020AA                     i1u499_20:
  8228  0020AA  BE33               	btfsc	(i1dtoa@w+1)^0,7,c
  8229  0020AC  EF60  F010         	goto	i1u500_21
  8230  0020B0  5033               	movf	(i1dtoa@w+1)^0,w,c
  8231  0020B2  E108               	bnz	i1u500_20
  8232  0020B4  0432               	decf	i1dtoa@w^0,w,c
  8233  0020B6  A0D8               	btfss	status,0,c
  8234  0020B8  EF60  F010         	goto	i1u500_21
  8235  0020BC  EF62  F010         	goto	i1u500_20
  8236  0020C0                     i1u500_21:
  8237  0020C0  EF6A  F010         	goto	i1l4428
  8238  0020C4                     i1u500_20:
  8239  0020C4  0100               	movlb	0	; () banked
  8240  0020C6  B3E0               	btfsc	_flags& (0+255),1,b
  8241  0020C8  EF68  F010         	goto	i1u501_21
  8242  0020CC  EF6A  F010         	goto	i1u501_20
  8243  0020D0                     i1u501_21:
  8244  0020D0  EFB0  F00F         	goto	i1l4408
  8245  0020D4                     i1u501_20:
  8246  0020D4                     i1l4428:
  8247                           
  8248                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  8249  0020D4  5034               	movf	i1dtoa@s^0,w,c
  8250  0020D6  1035               	iorwf	(i1dtoa@s+1)^0,w,c
  8251  0020D8  A4D8               	btfss	status,2,c
  8252  0020DA  EF71  F010         	goto	i1u502_21
  8253  0020DE  EF73  F010         	goto	i1u502_20
  8254  0020E2                     i1u502_21:
  8255  0020E2  EF7B  F010         	goto	i1l4432
  8256  0020E6                     i1u502_20:
  8257  0020E6  0100               	movlb	0	; () banked
  8258  0020E8  A5E0               	btfss	_flags& (0+255),2,b
  8259  0020EA  EF79  F010         	goto	i1u503_21
  8260  0020EE  EF7B  F010         	goto	i1u503_20
  8261  0020F2                     i1u503_21:
  8262  0020F2  EF99  F010         	goto	i1l4442
  8263  0020F6                     i1u503_20:
  8264  0020F6                     i1l4432:
  8265                           
  8266                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  8267  0020F6  063E               	decf	i1dtoa@i^0,f,c
  8268  0020F8  A0D8               	btfss	status,0,c
  8269  0020FA  063F               	decf	(i1dtoa@i+1)^0,f,c
  8270  0020FC                     
  8271                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  8272  0020FC  5034               	movf	i1dtoa@s^0,w,c
  8273  0020FE  1035               	iorwf	(i1dtoa@s+1)^0,w,c
  8274  002100  A4D8               	btfss	status,2,c
  8275  002102  EF85  F010         	goto	i1u504_21
  8276  002106  EF87  F010         	goto	i1u504_20
  8277  00210A                     i1u504_21:
  8278  00210A  EF8D  F010         	goto	i1l4438
  8279  00210E                     i1u504_20:
  8280  00210E  0E00               	movlw	0
  8281  002110  6E2F               	movwf	(i1_dtoa$1784+1)^0,c
  8282  002112  0E2B               	movlw	43
  8283  002114  6E2E               	movwf	i1_dtoa$1784^0,c
  8284  002116  EF91  F010         	goto	i1l4440
  8285  00211A                     i1l4438:
  8286  00211A  0E00               	movlw	0
  8287  00211C  6E2F               	movwf	(i1_dtoa$1784+1)^0,c
  8288  00211E  0E2D               	movlw	45
  8289  002120  6E2E               	movwf	i1_dtoa$1784^0,c
  8290  002122                     i1l4440:
  8291  002122  0EC4               	movlw	low _dbuf
  8292  002124  243E               	addwf	i1dtoa@i^0,w,c
  8293  002126  6ED9               	movwf	fsr2l,c
  8294  002128  0E02               	movlw	high _dbuf
  8295  00212A  203F               	addwfc	(i1dtoa@i+1)^0,w,c
  8296  00212C  6EDA               	movwf	fsr2h,c
  8297  00212E  C02E  FFDF         	movff	i1_dtoa$1784,indf2
  8298  002132                     i1l4442:
  8299                           
  8300                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  8301  002132  C01C  F011         	movff	i1dtoa@fp,i1pad@fp
  8302  002136  C01D  F012         	movff	i1dtoa@fp+1,i1pad@fp+1
  8303  00213A  0EC4               	movlw	low _dbuf
  8304  00213C  243E               	addwf	i1dtoa@i^0,w,c
  8305  00213E  6E13               	movwf	i1pad@buf^0,c
  8306  002140  0E02               	movlw	high _dbuf
  8307  002142  203F               	addwfc	(i1dtoa@i+1)^0,w,c
  8308  002144  6E14               	movwf	(i1pad@buf+1)^0,c
  8309  002146  C032  F015         	movff	i1dtoa@w,i1pad@p
  8310  00214A  C033  F016         	movff	i1dtoa@w+1,i1pad@p+1
  8311  00214E  EC3E  F019         	call	i1_pad	;wreg free
  8312  002152  C011  F01C         	movff	?i1_pad,?i1_dtoa
  8313  002156  C012  F01D         	movff	?i1_pad+1,?i1_dtoa+1
  8314  00215A  0012               	return		;funcret
  8315  00215C                     __end_ofi1_dtoa:
  8316                           	callstack 0
  8317                           
  8318 ;; *************** function i1_pad *****************
  8319 ;; Defined at:
  8320 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  8321 ;; Parameters:    Size  Location     Type
  8322 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  8323 ;;		 -> NULL(0), sprintf@f(6), 
  8324 ;;  buf             2   18[COMRAM] PTR unsigned char 
  8325 ;;		 -> dbuf(32), 
  8326 ;;  p               2   20[COMRAM] int 
  8327 ;; Auto vars:     Size  Location     Type
  8328 ;;  w               2   25[COMRAM] int 
  8329 ;;  i               2   23[COMRAM] int 
  8330 ;; Return value:  Size  Location     Type
  8331 ;;                  2   16[COMRAM] int 
  8332 ;; Registers used:
  8333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8334 ;; Tracked objects:
  8335 ;;		On entry : 0/0
  8336 ;;		On exit  : 0/0
  8337 ;;		Unchanged: 0/0
  8338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8339 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8340 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8341 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8342 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8343 ;;Total ram usage:       11 bytes
  8344 ;; Hardware stack levels used:    1
  8345 ;; Hardware stack levels required when called:    4
  8346 ;; This function calls:
  8347 ;;		i1_fputc
  8348 ;;		i1_fputs
  8349 ;;		i1_strlen
  8350 ;; This function is called by:
  8351 ;;		i1_dtoa
  8352 ;; This function uses a non-reentrant model
  8353 ;;
  8354                           
  8355                           	psect	text39
  8356  00327C                     __ptext39:
  8357                           	callstack 0
  8358  00327C                     i1_pad:
  8359                           	callstack 12
  8360  00327C                     
  8361                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  8362  00327C  0100               	movlb	0	; () banked
  8363  00327E  A1E0               	btfss	_flags& (0+255),0,b
  8364  003280  EF44  F019         	goto	i1u469_21
  8365  003284  EF46  F019         	goto	i1u469_20
  8366  003288                     i1u469_21:
  8367  003288  EF50  F019         	goto	i1l4234
  8368  00328C                     i1u469_20:
  8369  00328C                     
  8370                           ; BSR set to: 0
  8371                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  8372  00328C  C013  F00A         	movff	i1pad@buf,i1fputs@s
  8373  003290  C014  F00B         	movff	i1pad@buf+1,i1fputs@s+1
  8374  003294  C011  F00C         	movff	i1pad@fp,i1fputs@fp
  8375  003298  C012  F00D         	movff	i1pad@fp+1,i1fputs@fp+1
  8376  00329C  EC0E  F01C         	call	i1_fputs	;wreg free
  8377  0032A0                     i1l4234:
  8378                           
  8379                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  8380  0032A0  BE16               	btfsc	(i1pad@p+1)^0,7,c
  8381  0032A2  EF55  F019         	goto	i1u470_21
  8382  0032A6  EF57  F019         	goto	i1u470_20
  8383  0032AA                     i1u470_21:
  8384  0032AA  EF5D  F019         	goto	i1l4238
  8385  0032AE                     i1u470_20:
  8386  0032AE  C015  F01A         	movff	i1pad@p,i1pad@w
  8387  0032B2  C016  F01B         	movff	i1pad@p+1,i1pad@w+1
  8388  0032B6  EF61  F019         	goto	i1l951
  8389  0032BA                     i1l4238:
  8390  0032BA  0E00               	movlw	0
  8391  0032BC  6E1B               	movwf	(i1pad@w+1)^0,c
  8392  0032BE  0E00               	movlw	0
  8393  0032C0  6E1A               	movwf	i1pad@w^0,c
  8394  0032C2                     i1l951:
  8395                           
  8396                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8397  0032C2  0E00               	movlw	0
  8398  0032C4  6E19               	movwf	(i1pad@i+1)^0,c
  8399  0032C6  0E00               	movlw	0
  8400  0032C8  6E18               	movwf	i1pad@i^0,c
  8401                           
  8402                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8403  0032CA  EF73  F019         	goto	i1l4244
  8404  0032CE                     i1l4240:
  8405                           
  8406                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8407  0032CE  0E00               	movlw	0
  8408  0032D0  6E02               	movwf	(i1fputc@c+1)^0,c
  8409  0032D2  0E20               	movlw	32
  8410  0032D4  6E01               	movwf	i1fputc@c^0,c
  8411  0032D6  C011  F003         	movff	i1pad@fp,i1fputc@fp
  8412  0032DA  C012  F004         	movff	i1pad@fp+1,i1fputc@fp+1
  8413  0032DE  ECD9  F018         	call	i1_fputc	;wreg free
  8414  0032E2                     
  8415                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8416  0032E2  4A18               	infsnz	i1pad@i^0,f,c
  8417  0032E4  2A19               	incf	(i1pad@i+1)^0,f,c
  8418  0032E6                     i1l4244:
  8419                           
  8420                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8421  0032E6  501A               	movf	i1pad@w^0,w,c
  8422  0032E8  5C18               	subwf	i1pad@i^0,w,c
  8423  0032EA  5019               	movf	(i1pad@i+1)^0,w,c
  8424  0032EC  0A80               	xorlw	128
  8425  0032EE  6E17               	movwf	??i1_pad^0,c
  8426  0032F0  501B               	movf	(i1pad@w+1)^0,w,c
  8427  0032F2  0A80               	xorlw	128
  8428  0032F4  5817               	subwfb	??i1_pad^0,w,c
  8429  0032F6  A0D8               	btfss	status,0,c
  8430  0032F8  EF80  F019         	goto	i1u471_21
  8431  0032FC  EF82  F019         	goto	i1u471_20
  8432  003300                     i1u471_21:
  8433  003300  EF67  F019         	goto	i1l4240
  8434  003304                     i1u471_20:
  8435  003304                     
  8436                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8437  003304  0100               	movlb	0	; () banked
  8438  003306  B1E0               	btfsc	_flags& (0+255),0,b
  8439  003308  EF88  F019         	goto	i1u472_21
  8440  00330C  EF8A  F019         	goto	i1u472_20
  8441  003310                     i1u472_21:
  8442  003310  EF94  F019         	goto	i1l4248
  8443  003314                     i1u472_20:
  8444  003314                     
  8445                           ; BSR set to: 0
  8446                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8447  003314  C013  F00A         	movff	i1pad@buf,i1fputs@s
  8448  003318  C014  F00B         	movff	i1pad@buf+1,i1fputs@s+1
  8449  00331C  C011  F00C         	movff	i1pad@fp,i1fputs@fp
  8450  003320  C012  F00D         	movff	i1pad@fp+1,i1fputs@fp+1
  8451  003324  EC0E  F01C         	call	i1_fputs	;wreg free
  8452  003328                     i1l4248:
  8453                           
  8454                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  8455  003328  C013  F001         	movff	i1pad@buf,i1strlen@s
  8456  00332C  C014  F002         	movff	i1pad@buf+1,i1strlen@s+1
  8457  003330  EC21  F01D         	call	i1_strlen	;wreg free
  8458  003334  501A               	movf	i1pad@w^0,w,c
  8459  003336  2401               	addwf	?i1_strlen^0,w,c
  8460  003338  6E11               	movwf	?i1_pad^0,c
  8461  00333A  501B               	movf	(i1pad@w+1)^0,w,c
  8462  00333C  2002               	addwfc	(?i1_strlen+1)^0,w,c
  8463  00333E  6E12               	movwf	(?i1_pad+1)^0,c
  8464  003340  0012               	return		;funcret
  8465  003342                     __end_ofi1_pad:
  8466                           	callstack 0
  8467                           
  8468 ;; *************** function i1_strlen *****************
  8469 ;; Defined at:
  8470 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  8471 ;; Parameters:    Size  Location     Type
  8472 ;;  s               2    0[COMRAM] PTR const unsigned char 
  8473 ;;		 -> i1stoa@nuls(7), ?_printf(2), stoa@nuls(7), dbuf(32), 
  8474 ;;		 -> ?_sprintf(2), time_now@daylist(70), 
  8475 ;; Auto vars:     Size  Location     Type
  8476 ;;  a               2    2[COMRAM] PTR const unsigned char 
  8477 ;;		 -> i1stoa@nuls(7), ?_printf(2), stoa@nuls(7), dbuf(32), 
  8478 ;;		 -> ?_sprintf(2), time_now@daylist(70), 
  8479 ;; Return value:  Size  Location     Type
  8480 ;;                  2    0[COMRAM] unsigned int 
  8481 ;; Registers used:
  8482 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8483 ;; Tracked objects:
  8484 ;;		On entry : 0/0
  8485 ;;		On exit  : 0/0
  8486 ;;		Unchanged: 0/0
  8487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8488 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8489 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8491 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8492 ;;Total ram usage:        4 bytes
  8493 ;; Hardware stack levels used:    1
  8494 ;; Hardware stack levels required when called:    1
  8495 ;; This function calls:
  8496 ;;		Nothing
  8497 ;; This function is called by:
  8498 ;;		i1_pad
  8499 ;;		i1_stoa
  8500 ;; This function uses a non-reentrant model
  8501 ;;
  8502                           
  8503                           	psect	text40
  8504  003A42                     __ptext40:
  8505                           	callstack 0
  8506  003A42                     i1_strlen:
  8507                           	callstack 15
  8508  003A42  C001  F003         	movff	i1strlen@s,i1strlen@a
  8509  003A46  C002  F004         	movff	i1strlen@s+1,i1strlen@a+1
  8510  003A4A  EF29  F01D         	goto	i1l3992
  8511  003A4E                     i1l3990:
  8512  003A4E  4A01               	infsnz	i1strlen@s^0,f,c
  8513  003A50  2A02               	incf	(i1strlen@s+1)^0,f,c
  8514  003A52                     i1l3992:
  8515  003A52  C001  FFD9         	movff	i1strlen@s,fsr2l
  8516  003A56  C002  FFDA         	movff	i1strlen@s+1,fsr2h
  8517  003A5A  50DF               	movf	indf2,w,c
  8518  003A5C  A4D8               	btfss	status,2,c
  8519  003A5E  EF33  F01D         	goto	i1u424_21
  8520  003A62  EF35  F01D         	goto	i1u424_20
  8521  003A66                     i1u424_21:
  8522  003A66  EF27  F01D         	goto	i1l3990
  8523  003A6A                     i1u424_20:
  8524  003A6A  5003               	movf	i1strlen@a^0,w,c
  8525  003A6C  5C01               	subwf	i1strlen@s^0,w,c
  8526  003A6E  6E01               	movwf	?i1_strlen^0,c
  8527  003A70  5004               	movf	(i1strlen@a+1)^0,w,c
  8528  003A72  5802               	subwfb	(i1strlen@s+1)^0,w,c
  8529  003A74  6E02               	movwf	(?i1_strlen+1)^0,c
  8530  003A76  0012               	return		;funcret
  8531  003A78                     __end_ofi1_strlen:
  8532                           	callstack 0
  8533                           
  8534 ;; *************** function i1_fputs *****************
  8535 ;; Defined at:
  8536 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  8537 ;; Parameters:    Size  Location     Type
  8538 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8539 ;;		 -> dbuf(32), 
  8540 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8541 ;;		 -> NULL(0), sprintf@f(6), 
  8542 ;; Auto vars:     Size  Location     Type
  8543 ;;  i               2   14[COMRAM] int 
  8544 ;;  c               1   13[COMRAM] unsigned char 
  8545 ;; Return value:  Size  Location     Type
  8546 ;;                  2    9[COMRAM] int 
  8547 ;; Registers used:
  8548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8549 ;; Tracked objects:
  8550 ;;		On entry : 0/0
  8551 ;;		On exit  : 0/0
  8552 ;;		Unchanged: 0/0
  8553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8554 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8555 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8557 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8558 ;;Total ram usage:        7 bytes
  8559 ;; Hardware stack levels used:    1
  8560 ;; Hardware stack levels required when called:    3
  8561 ;; This function calls:
  8562 ;;		i1_fputc
  8563 ;; This function is called by:
  8564 ;;		i1_pad
  8565 ;; This function uses a non-reentrant model
  8566 ;;
  8567                           
  8568                           	psect	text41
  8569  00381C                     __ptext41:
  8570                           	callstack 0
  8571  00381C                     i1_fputs:
  8572                           	callstack 12
  8573  00381C  0E00               	movlw	0
  8574  00381E  6E10               	movwf	(i1fputs@i+1)^0,c
  8575  003820  0E00               	movlw	0
  8576  003822  6E0F               	movwf	i1fputs@i^0,c
  8577  003824  EF1F  F01C         	goto	i1l3986
  8578  003828                     i1l3982:
  8579  003828  C00E  F001         	movff	i1fputs@c,i1fputc@c
  8580  00382C  6A02               	clrf	(i1fputc@c+1)^0,c
  8581  00382E  C00C  F003         	movff	i1fputs@fp,i1fputc@fp
  8582  003832  C00D  F004         	movff	i1fputs@fp+1,i1fputc@fp+1
  8583  003836  ECD9  F018         	call	i1_fputc	;wreg free
  8584  00383A  4A0F               	infsnz	i1fputs@i^0,f,c
  8585  00383C  2A10               	incf	(i1fputs@i+1)^0,f,c
  8586  00383E                     i1l3986:
  8587  00383E  500F               	movf	i1fputs@i^0,w,c
  8588  003840  240A               	addwf	i1fputs@s^0,w,c
  8589  003842  6ED9               	movwf	fsr2l,c
  8590  003844  5010               	movf	(i1fputs@i+1)^0,w,c
  8591  003846  200B               	addwfc	(i1fputs@s+1)^0,w,c
  8592  003848  6EDA               	movwf	fsr2h,c
  8593  00384A  50DF               	movf	indf2,w,c
  8594  00384C  6E0E               	movwf	i1fputs@c^0,c
  8595  00384E  500E               	movf	i1fputs@c^0,w,c
  8596  003850  A4D8               	btfss	status,2,c
  8597  003852  EF2D  F01C         	goto	i1u423_21
  8598  003856  EF2F  F01C         	goto	i1u423_20
  8599  00385A                     i1u423_21:
  8600  00385A  EF14  F01C         	goto	i1l3982
  8601  00385E                     i1u423_20:
  8602  00385E  0012               	return		;funcret
  8603  003860                     __end_ofi1_fputs:
  8604                           	callstack 0
  8605                           
  8606 ;; *************** function i1_fputc *****************
  8607 ;; Defined at:
  8608 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  8609 ;; Parameters:    Size  Location     Type
  8610 ;;  c               2    0[COMRAM] int 
  8611 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8612 ;;		 -> NULL(0), sprintf@f(6), 
  8613 ;; Auto vars:     Size  Location     Type
  8614 ;;		None
  8615 ;; Return value:  Size  Location     Type
  8616 ;;                  2    0[COMRAM] int 
  8617 ;; Registers used:
  8618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8619 ;; Tracked objects:
  8620 ;;		On entry : 0/0
  8621 ;;		On exit  : 0/0
  8622 ;;		Unchanged: 0/0
  8623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8624 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8626 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8627 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8628 ;;Total ram usage:        9 bytes
  8629 ;; Hardware stack levels used:    1
  8630 ;; Hardware stack levels required when called:    2
  8631 ;; This function calls:
  8632 ;;		i1_putch
  8633 ;; This function is called by:
  8634 ;;		i1_pad
  8635 ;;		i1_stoa
  8636 ;;		i1_vfpfcnvrt
  8637 ;;		i1_fputs
  8638 ;; This function uses a non-reentrant model
  8639 ;;
  8640                           
  8641                           	psect	text42
  8642  0031B2                     __ptext42:
  8643                           	callstack 0
  8644  0031B2                     i1_fputc:
  8645                           	callstack 14
  8646  0031B2  5003               	movf	i1fputc@fp^0,w,c
  8647  0031B4  1004               	iorwf	(i1fputc@fp+1)^0,w,c
  8648  0031B6  B4D8               	btfsc	status,2,c
  8649  0031B8  EFE0  F018         	goto	i1u397_21
  8650  0031BC  EFE2  F018         	goto	i1u397_20
  8651  0031C0                     i1u397_21:
  8652  0031C0  EFEB  F018         	goto	i1l3842
  8653  0031C4                     i1u397_20:
  8654  0031C4  5003               	movf	i1fputc@fp^0,w,c
  8655  0031C6  1004               	iorwf	(i1fputc@fp+1)^0,w,c
  8656  0031C8  A4D8               	btfss	status,2,c
  8657  0031CA  EFE9  F018         	goto	i1u398_21
  8658  0031CE  EFEB  F018         	goto	i1u398_20
  8659  0031D2                     i1u398_21:
  8660  0031D2  EFF0  F018         	goto	i1l3844
  8661  0031D6                     i1u398_20:
  8662  0031D6                     i1l3842:
  8663  0031D6  5001               	movf	i1fputc@c^0,w,c
  8664  0031D8  ECEA  F01D         	call	i1_putch
  8665  0031DC  EF3D  F019         	goto	i1l1106
  8666  0031E0                     i1l3844:
  8667  0031E0  EE20 F004          	lfsr	2,4
  8668  0031E4  5003               	movf	i1fputc@fp^0,w,c
  8669  0031E6  26D9               	addwf	fsr2l,f,c
  8670  0031E8  5004               	movf	(i1fputc@fp+1)^0,w,c
  8671  0031EA  22DA               	addwfc	fsr2h,f,c
  8672  0031EC  50DE               	movf	postinc2,w,c
  8673  0031EE  10DE               	iorwf	postinc2,w,c
  8674  0031F0  B4D8               	btfsc	status,2,c
  8675  0031F2  EFFD  F018         	goto	i1u399_21
  8676  0031F6  EFFF  F018         	goto	i1u399_20
  8677  0031FA                     i1u399_21:
  8678  0031FA  EF1A  F019         	goto	i1l3848
  8679  0031FE                     i1u399_20:
  8680  0031FE  EE20 F004          	lfsr	2,4
  8681  003202  5003               	movf	i1fputc@fp^0,w,c
  8682  003204  26D9               	addwf	fsr2l,f,c
  8683  003206  5004               	movf	(i1fputc@fp+1)^0,w,c
  8684  003208  22DA               	addwfc	fsr2h,f,c
  8685  00320A  EE10 F002          	lfsr	1,2
  8686  00320E  5003               	movf	i1fputc@fp^0,w,c
  8687  003210  26E1               	addwf	fsr1l,f,c
  8688  003212  5004               	movf	(i1fputc@fp+1)^0,w,c
  8689  003214  22E2               	addwfc	fsr1h,f,c
  8690  003216  50DE               	movf	postinc2,w,c
  8691  003218  5CE6               	subwf	postinc1,w,c
  8692  00321A  50E6               	movf	postinc1,w,c
  8693  00321C  0A80               	xorlw	128
  8694  00321E  6E09               	movwf	(??i1_fputc+4)^0,c
  8695  003220  50DE               	movf	postinc2,w,c
  8696  003222  0A80               	xorlw	128
  8697  003224  5809               	subwfb	(??i1_fputc+4)^0,w,c
  8698  003226  B0D8               	btfsc	status,0,c
  8699  003228  EF18  F019         	goto	i1u400_21
  8700  00322C  EF1A  F019         	goto	i1u400_20
  8701  003230                     i1u400_21:
  8702  003230  EF3D  F019         	goto	i1l1106
  8703  003234                     i1u400_20:
  8704  003234                     i1l3848:
  8705  003234  EE20 F002          	lfsr	2,2
  8706  003238  5003               	movf	i1fputc@fp^0,w,c
  8707  00323A  26D9               	addwf	fsr2l,f,c
  8708  00323C  5004               	movf	(i1fputc@fp+1)^0,w,c
  8709  00323E  22DA               	addwfc	fsr2h,f,c
  8710  003240  CFDE F005          	movff	postinc2,??i1_fputc
  8711  003244  CFDD F006          	movff	postdec2,??i1_fputc+1
  8712  003248  C003  FFD9         	movff	i1fputc@fp,fsr2l
  8713  00324C  C004  FFDA         	movff	i1fputc@fp+1,fsr2h
  8714  003250  CFDE F007          	movff	postinc2,??i1_fputc+2
  8715  003254  CFDD F008          	movff	postdec2,??i1_fputc+3
  8716  003258  5005               	movf	??i1_fputc^0,w,c
  8717  00325A  2407               	addwf	(??i1_fputc+2)^0,w,c
  8718  00325C  6ED9               	movwf	fsr2l,c
  8719  00325E  5006               	movf	(??i1_fputc+1)^0,w,c
  8720  003260  2008               	addwfc	(??i1_fputc+3)^0,w,c
  8721  003262  6EDA               	movwf	fsr2h,c
  8722  003264  C001  FFDF         	movff	i1fputc@c,indf2
  8723  003268  EE20 F002          	lfsr	2,2
  8724  00326C  5003               	movf	i1fputc@fp^0,w,c
  8725  00326E  26D9               	addwf	fsr2l,f,c
  8726  003270  5004               	movf	(i1fputc@fp+1)^0,w,c
  8727  003272  22DA               	addwfc	fsr2h,f,c
  8728  003274  2ADE               	incf	postinc2,f,c
  8729  003276  0E00               	movlw	0
  8730  003278  22DD               	addwfc	postdec2,f,c
  8731  00327A                     i1l1106:
  8732  00327A  0012               	return		;funcret
  8733  00327C                     __end_ofi1_fputc:
  8734                           	callstack 0
  8735                           
  8736 ;; *************** function i1_putch *****************
  8737 ;; Defined at:
  8738 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  8739 ;; Parameters:    Size  Location     Type
  8740 ;;  c               1    wreg     unsigned char 
  8741 ;; Auto vars:     Size  Location     Type
  8742 ;;  c               1  (no storage) unsigned char 
  8743 ;; Return value:  Size  Location     Type
  8744 ;;                  1    wreg      void 
  8745 ;; Registers used:
  8746 ;;		wreg
  8747 ;; Tracked objects:
  8748 ;;		On entry : 0/0
  8749 ;;		On exit  : 0/0
  8750 ;;		Unchanged: 0/0
  8751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8756 ;;Total ram usage:        0 bytes
  8757 ;; Hardware stack levels used:    1
  8758 ;; Hardware stack levels required when called:    1
  8759 ;; This function calls:
  8760 ;;		Nothing
  8761 ;; This function is called by:
  8762 ;;		i1_fputc
  8763 ;; This function uses a non-reentrant model
  8764 ;;
  8765                           
  8766                           	psect	text43
  8767  003BD4                     __ptext43:
  8768                           	callstack 0
  8769  003BD4                     i1_putch:
  8770                           	callstack 14
  8771  003BD4  0012               	return		;funcret
  8772  003BD6                     __end_ofi1_putch:
  8773                           	callstack 0
  8774                           
  8775 ;; *************** function i1_abs *****************
  8776 ;; Defined at:
  8777 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  8778 ;; Parameters:    Size  Location     Type
  8779 ;;  a               2   18[COMRAM] int 
  8780 ;; Auto vars:     Size  Location     Type
  8781 ;;		None
  8782 ;; Return value:  Size  Location     Type
  8783 ;;                  2   18[COMRAM] int 
  8784 ;; Registers used:
  8785 ;;		wreg, status,2, status,0
  8786 ;; Tracked objects:
  8787 ;;		On entry : 0/0
  8788 ;;		On exit  : 0/0
  8789 ;;		Unchanged: 0/0
  8790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8791 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8793 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8794 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8795 ;;Total ram usage:        4 bytes
  8796 ;; Hardware stack levels used:    1
  8797 ;; Hardware stack levels required when called:    1
  8798 ;; This function calls:
  8799 ;;		Nothing
  8800 ;; This function is called by:
  8801 ;;		i1_dtoa
  8802 ;; This function uses a non-reentrant model
  8803 ;;
  8804                           
  8805                           	psect	text44
  8806  0038E2                     __ptext44:
  8807                           	callstack 0
  8808  0038E2                     i1_abs:
  8809                           	callstack 15
  8810  0038E2  BE14               	btfsc	(i1abs@a+1)^0,7,c
  8811  0038E4  EF7E  F01C         	goto	i1u473_20
  8812  0038E8  5014               	movf	(i1abs@a+1)^0,w,c
  8813  0038EA  E106               	bnz	i1u473_21
  8814  0038EC  0413               	decf	i1abs@a^0,w,c
  8815  0038EE  B0D8               	btfsc	status,0,c
  8816  0038F0  EF7C  F01C         	goto	i1u473_21
  8817  0038F4  EF7E  F01C         	goto	i1u473_20
  8818  0038F8                     i1u473_21:
  8819  0038F8  EF8C  F01C         	goto	i1l1046
  8820  0038FC                     i1u473_20:
  8821  0038FC  C013  F015         	movff	i1abs@a,??i1_abs
  8822  003900  C014  F016         	movff	i1abs@a+1,??i1_abs+1
  8823  003904  1E15               	comf	??i1_abs^0,f,c
  8824  003906  1E16               	comf	(??i1_abs+1)^0,f,c
  8825  003908  4A15               	infsnz	??i1_abs^0,f,c
  8826  00390A  2A16               	incf	(??i1_abs+1)^0,f,c
  8827  00390C  C015  F013         	movff	??i1_abs,?i1_abs
  8828  003910  C016  F014         	movff	??i1_abs+1,?i1_abs+1
  8829  003914  EF90  F01C         	goto	i1l1049
  8830  003918                     i1l1046:
  8831  003918  C013  F013         	movff	i1abs@a,?i1_abs
  8832  00391C  C014  F014         	movff	i1abs@a+1,?i1_abs+1
  8833  003920                     i1l1049:
  8834  003920  0012               	return		;funcret
  8835  003922                     __end_ofi1_abs:
  8836                           	callstack 0
  8837                           
  8838 ;; *************** function i1___aomod *****************
  8839 ;; Defined at:
  8840 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  8841 ;; Parameters:    Size  Location     Type
  8842 ;;  dividend        8    0[COMRAM] long long 
  8843 ;;  divisor         8    8[COMRAM] long long 
  8844 ;; Auto vars:     Size  Location     Type
  8845 ;;  sign            1   17[COMRAM] unsigned char 
  8846 ;;  counter         1   16[COMRAM] unsigned char 
  8847 ;; Return value:  Size  Location     Type
  8848 ;;                  8    0[COMRAM] long long 
  8849 ;; Registers used:
  8850 ;;		wreg, status,2, status,0
  8851 ;; Tracked objects:
  8852 ;;		On entry : 0/0
  8853 ;;		On exit  : 0/0
  8854 ;;		Unchanged: 0/0
  8855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8856 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8857 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8859 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8860 ;;Total ram usage:       18 bytes
  8861 ;; Hardware stack levels used:    1
  8862 ;; Hardware stack levels required when called:    1
  8863 ;; This function calls:
  8864 ;;		Nothing
  8865 ;; This function is called by:
  8866 ;;		i1_dtoa
  8867 ;; This function uses a non-reentrant model
  8868 ;;
  8869                           
  8870                           	psect	text45
  8871  002DEE                     __ptext45:
  8872                           	callstack 0
  8873  002DEE                     i1___aomod:
  8874                           	callstack 15
  8875  002DEE  0E00               	movlw	0
  8876  002DF0  6E12               	movwf	i1___aomod@sign^0,c
  8877  002DF2  BE08               	btfsc	(i1___aomod@dividend+7)^0,7,c
  8878  002DF4  EF00  F017         	goto	i1u463_20
  8879  002DF8  EFFE  F016         	goto	i1u463_21
  8880  002DFC                     i1u463_21:
  8881  002DFC  EF12  F017         	goto	i1l4202
  8882  002E00                     i1u463_20:
  8883  002E00  1E08               	comf	(i1___aomod@dividend+7)^0,f,c
  8884  002E02  1E07               	comf	(i1___aomod@dividend+6)^0,f,c
  8885  002E04  1E06               	comf	(i1___aomod@dividend+5)^0,f,c
  8886  002E06  1E05               	comf	(i1___aomod@dividend+4)^0,f,c
  8887  002E08  1E04               	comf	(i1___aomod@dividend+3)^0,f,c
  8888  002E0A  1E03               	comf	(i1___aomod@dividend+2)^0,f,c
  8889  002E0C  1E02               	comf	(i1___aomod@dividend+1)^0,f,c
  8890  002E0E  6C01               	negf	i1___aomod@dividend^0,c
  8891  002E10  0E00               	movlw	0
  8892  002E12  2202               	addwfc	(i1___aomod@dividend+1)^0,f,c
  8893  002E14  2203               	addwfc	(i1___aomod@dividend+2)^0,f,c
  8894  002E16  2204               	addwfc	(i1___aomod@dividend+3)^0,f,c
  8895  002E18  2205               	addwfc	(i1___aomod@dividend+4)^0,f,c
  8896  002E1A  2206               	addwfc	(i1___aomod@dividend+5)^0,f,c
  8897  002E1C  2207               	addwfc	(i1___aomod@dividend+6)^0,f,c
  8898  002E1E  2208               	addwfc	(i1___aomod@dividend+7)^0,f,c
  8899  002E20  0E01               	movlw	1
  8900  002E22  6E12               	movwf	i1___aomod@sign^0,c
  8901  002E24                     i1l4202:
  8902  002E24  BE10               	btfsc	(i1___aomod@divisor+7)^0,7,c
  8903  002E26  EF19  F017         	goto	i1u464_20
  8904  002E2A  EF17  F017         	goto	i1u464_21
  8905  002E2E                     i1u464_21:
  8906  002E2E  EF29  F017         	goto	i1l4206
  8907  002E32                     i1u464_20:
  8908  002E32  1E10               	comf	(i1___aomod@divisor+7)^0,f,c
  8909  002E34  1E0F               	comf	(i1___aomod@divisor+6)^0,f,c
  8910  002E36  1E0E               	comf	(i1___aomod@divisor+5)^0,f,c
  8911  002E38  1E0D               	comf	(i1___aomod@divisor+4)^0,f,c
  8912  002E3A  1E0C               	comf	(i1___aomod@divisor+3)^0,f,c
  8913  002E3C  1E0B               	comf	(i1___aomod@divisor+2)^0,f,c
  8914  002E3E  1E0A               	comf	(i1___aomod@divisor+1)^0,f,c
  8915  002E40  6C09               	negf	i1___aomod@divisor^0,c
  8916  002E42  0E00               	movlw	0
  8917  002E44  220A               	addwfc	(i1___aomod@divisor+1)^0,f,c
  8918  002E46  220B               	addwfc	(i1___aomod@divisor+2)^0,f,c
  8919  002E48  220C               	addwfc	(i1___aomod@divisor+3)^0,f,c
  8920  002E4A  220D               	addwfc	(i1___aomod@divisor+4)^0,f,c
  8921  002E4C  220E               	addwfc	(i1___aomod@divisor+5)^0,f,c
  8922  002E4E  220F               	addwfc	(i1___aomod@divisor+6)^0,f,c
  8923  002E50  2210               	addwfc	(i1___aomod@divisor+7)^0,f,c
  8924  002E52                     i1l4206:
  8925  002E52  5009               	movf	i1___aomod@divisor^0,w,c
  8926  002E54  100A               	iorwf	(i1___aomod@divisor+1)^0,w,c
  8927  002E56  100B               	iorwf	(i1___aomod@divisor+2)^0,w,c
  8928  002E58  100C               	iorwf	(i1___aomod@divisor+3)^0,w,c
  8929  002E5A  100D               	iorwf	(i1___aomod@divisor+4)^0,w,c
  8930  002E5C  100E               	iorwf	(i1___aomod@divisor+5)^0,w,c
  8931  002E5E  100F               	iorwf	(i1___aomod@divisor+6)^0,w,c
  8932  002E60  1010               	iorwf	(i1___aomod@divisor+7)^0,w,c
  8933  002E62  B4D8               	btfsc	status,2,c
  8934  002E64  EF36  F017         	goto	i1u465_21
  8935  002E68  EF38  F017         	goto	i1u465_20
  8936  002E6C                     i1u465_21:
  8937  002E6C  EF80  F017         	goto	i1l4222
  8938  002E70                     i1u465_20:
  8939  002E70  0E01               	movlw	1
  8940  002E72  6E11               	movwf	i1___aomod@counter^0,c
  8941  002E74  EF46  F017         	goto	i1l4212
  8942  002E78                     i1l4210:
  8943  002E78  90D8               	bcf	status,0,c
  8944  002E7A  3609               	rlcf	i1___aomod@divisor^0,f,c
  8945  002E7C  360A               	rlcf	(i1___aomod@divisor+1)^0,f,c
  8946  002E7E  360B               	rlcf	(i1___aomod@divisor+2)^0,f,c
  8947  002E80  360C               	rlcf	(i1___aomod@divisor+3)^0,f,c
  8948  002E82  360D               	rlcf	(i1___aomod@divisor+4)^0,f,c
  8949  002E84  360E               	rlcf	(i1___aomod@divisor+5)^0,f,c
  8950  002E86  360F               	rlcf	(i1___aomod@divisor+6)^0,f,c
  8951  002E88  3610               	rlcf	(i1___aomod@divisor+7)^0,f,c
  8952  002E8A  2A11               	incf	i1___aomod@counter^0,f,c
  8953  002E8C                     i1l4212:
  8954  002E8C  AE10               	btfss	(i1___aomod@divisor+7)^0,7,c
  8955  002E8E  EF4B  F017         	goto	i1u466_21
  8956  002E92  EF4D  F017         	goto	i1u466_20
  8957  002E96                     i1u466_21:
  8958  002E96  EF3C  F017         	goto	i1l4210
  8959  002E9A                     i1u466_20:
  8960  002E9A                     i1l4214:
  8961  002E9A  5009               	movf	i1___aomod@divisor^0,w,c
  8962  002E9C  5C01               	subwf	i1___aomod@dividend^0,w,c
  8963  002E9E  500A               	movf	(i1___aomod@divisor+1)^0,w,c
  8964  002EA0  5802               	subwfb	(i1___aomod@dividend+1)^0,w,c
  8965  002EA2  500B               	movf	(i1___aomod@divisor+2)^0,w,c
  8966  002EA4  5803               	subwfb	(i1___aomod@dividend+2)^0,w,c
  8967  002EA6  500C               	movf	(i1___aomod@divisor+3)^0,w,c
  8968  002EA8  5804               	subwfb	(i1___aomod@dividend+3)^0,w,c
  8969  002EAA  500D               	movf	(i1___aomod@divisor+4)^0,w,c
  8970  002EAC  5805               	subwfb	(i1___aomod@dividend+4)^0,w,c
  8971  002EAE  500E               	movf	(i1___aomod@divisor+5)^0,w,c
  8972  002EB0  5806               	subwfb	(i1___aomod@dividend+5)^0,w,c
  8973  002EB2  500F               	movf	(i1___aomod@divisor+6)^0,w,c
  8974  002EB4  5807               	subwfb	(i1___aomod@dividend+6)^0,w,c
  8975  002EB6  5010               	movf	(i1___aomod@divisor+7)^0,w,c
  8976  002EB8  5808               	subwfb	(i1___aomod@dividend+7)^0,w,c
  8977  002EBA  A0D8               	btfss	status,0,c
  8978  002EBC  EF62  F017         	goto	i1u467_21
  8979  002EC0  EF64  F017         	goto	i1u467_20
  8980  002EC4                     i1u467_21:
  8981  002EC4  EF74  F017         	goto	i1l4218
  8982  002EC8                     i1u467_20:
  8983  002EC8  5009               	movf	i1___aomod@divisor^0,w,c
  8984  002ECA  5E01               	subwf	i1___aomod@dividend^0,f,c
  8985  002ECC  500A               	movf	(i1___aomod@divisor+1)^0,w,c
  8986  002ECE  5A02               	subwfb	(i1___aomod@dividend+1)^0,f,c
  8987  002ED0  500B               	movf	(i1___aomod@divisor+2)^0,w,c
  8988  002ED2  5A03               	subwfb	(i1___aomod@dividend+2)^0,f,c
  8989  002ED4  500C               	movf	(i1___aomod@divisor+3)^0,w,c
  8990  002ED6  5A04               	subwfb	(i1___aomod@dividend+3)^0,f,c
  8991  002ED8  500D               	movf	(i1___aomod@divisor+4)^0,w,c
  8992  002EDA  5A05               	subwfb	(i1___aomod@dividend+4)^0,f,c
  8993  002EDC  500E               	movf	(i1___aomod@divisor+5)^0,w,c
  8994  002EDE  5A06               	subwfb	(i1___aomod@dividend+5)^0,f,c
  8995  002EE0  500F               	movf	(i1___aomod@divisor+6)^0,w,c
  8996  002EE2  5A07               	subwfb	(i1___aomod@dividend+6)^0,f,c
  8997  002EE4  5010               	movf	(i1___aomod@divisor+7)^0,w,c
  8998  002EE6  5A08               	subwfb	(i1___aomod@dividend+7)^0,f,c
  8999  002EE8                     i1l4218:
  9000  002EE8  90D8               	bcf	status,0,c
  9001  002EEA  3210               	rrcf	(i1___aomod@divisor+7)^0,f,c
  9002  002EEC  320F               	rrcf	(i1___aomod@divisor+6)^0,f,c
  9003  002EEE  320E               	rrcf	(i1___aomod@divisor+5)^0,f,c
  9004  002EF0  320D               	rrcf	(i1___aomod@divisor+4)^0,f,c
  9005  002EF2  320C               	rrcf	(i1___aomod@divisor+3)^0,f,c
  9006  002EF4  320B               	rrcf	(i1___aomod@divisor+2)^0,f,c
  9007  002EF6  320A               	rrcf	(i1___aomod@divisor+1)^0,f,c
  9008  002EF8  3209               	rrcf	i1___aomod@divisor^0,f,c
  9009  002EFA  2E11               	decfsz	i1___aomod@counter^0,f,c
  9010  002EFC  EF4D  F017         	goto	i1l4214
  9011  002F00                     i1l4222:
  9012  002F00  5012               	movf	i1___aomod@sign^0,w,c
  9013  002F02  B4D8               	btfsc	status,2,c
  9014  002F04  EF86  F017         	goto	i1u468_21
  9015  002F08  EF88  F017         	goto	i1u468_20
  9016  002F0C                     i1u468_21:
  9017  002F0C  EF98  F017         	goto	i1l4226
  9018  002F10                     i1u468_20:
  9019  002F10  1E08               	comf	(i1___aomod@dividend+7)^0,f,c
  9020  002F12  1E07               	comf	(i1___aomod@dividend+6)^0,f,c
  9021  002F14  1E06               	comf	(i1___aomod@dividend+5)^0,f,c
  9022  002F16  1E05               	comf	(i1___aomod@dividend+4)^0,f,c
  9023  002F18  1E04               	comf	(i1___aomod@dividend+3)^0,f,c
  9024  002F1A  1E03               	comf	(i1___aomod@dividend+2)^0,f,c
  9025  002F1C  1E02               	comf	(i1___aomod@dividend+1)^0,f,c
  9026  002F1E  6C01               	negf	i1___aomod@dividend^0,c
  9027  002F20  0E00               	movlw	0
  9028  002F22  2202               	addwfc	(i1___aomod@dividend+1)^0,f,c
  9029  002F24  2203               	addwfc	(i1___aomod@dividend+2)^0,f,c
  9030  002F26  2204               	addwfc	(i1___aomod@dividend+3)^0,f,c
  9031  002F28  2205               	addwfc	(i1___aomod@dividend+4)^0,f,c
  9032  002F2A  2206               	addwfc	(i1___aomod@dividend+5)^0,f,c
  9033  002F2C  2207               	addwfc	(i1___aomod@dividend+6)^0,f,c
  9034  002F2E  2208               	addwfc	(i1___aomod@dividend+7)^0,f,c
  9035  002F30                     i1l4226:
  9036  002F30  C001  F001         	movff	i1___aomod@dividend,?i1___aomod
  9037  002F34  C002  F002         	movff	i1___aomod@dividend+1,?i1___aomod+1
  9038  002F38  C003  F003         	movff	i1___aomod@dividend+2,?i1___aomod+2
  9039  002F3C  C004  F004         	movff	i1___aomod@dividend+3,?i1___aomod+3
  9040  002F40  C005  F005         	movff	i1___aomod@dividend+4,?i1___aomod+4
  9041  002F44  C006  F006         	movff	i1___aomod@dividend+5,?i1___aomod+5
  9042  002F48  C007  F007         	movff	i1___aomod@dividend+6,?i1___aomod+6
  9043  002F4C  C008  F008         	movff	i1___aomod@dividend+7,?i1___aomod+7
  9044  002F50  0012               	return		;funcret
  9045  002F52                     __end_ofi1___aomod:
  9046                           	callstack 0
  9047                           
  9048 ;; *************** function i1___aodiv *****************
  9049 ;; Defined at:
  9050 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  9051 ;; Parameters:    Size  Location     Type
  9052 ;;  dividend        8    0[COMRAM] long long 
  9053 ;;  divisor         8    8[COMRAM] long long 
  9054 ;; Auto vars:     Size  Location     Type
  9055 ;;  quotient        8   18[COMRAM] long long 
  9056 ;;  sign            1   17[COMRAM] unsigned char 
  9057 ;;  counter         1   16[COMRAM] unsigned char 
  9058 ;; Return value:  Size  Location     Type
  9059 ;;                  8    0[COMRAM] long long 
  9060 ;; Registers used:
  9061 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9062 ;; Tracked objects:
  9063 ;;		On entry : 0/0
  9064 ;;		On exit  : 0/0
  9065 ;;		Unchanged: 0/0
  9066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9067 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9068 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9070 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9071 ;;Total ram usage:       26 bytes
  9072 ;; Hardware stack levels used:    1
  9073 ;; Hardware stack levels required when called:    1
  9074 ;; This function calls:
  9075 ;;		Nothing
  9076 ;; This function is called by:
  9077 ;;		i1_dtoa
  9078 ;; This function uses a non-reentrant model
  9079 ;;
  9080                           
  9081                           	psect	text46
  9082  00297A                     __ptext46:
  9083                           	callstack 0
  9084  00297A                     i1___aodiv:
  9085                           	callstack 15
  9086  00297A  0E00               	movlw	0
  9087  00297C  6E12               	movwf	i1___aodiv@sign^0,c
  9088  00297E  BE10               	btfsc	(i1___aodiv@divisor+7)^0,7,c
  9089  002980  EFC6  F014         	goto	i1u456_20
  9090  002984  EFC4  F014         	goto	i1u456_21
  9091  002988                     i1u456_21:
  9092  002988  EFD8  F014         	goto	i1l4158
  9093  00298C                     i1u456_20:
  9094  00298C  1E10               	comf	(i1___aodiv@divisor+7)^0,f,c
  9095  00298E  1E0F               	comf	(i1___aodiv@divisor+6)^0,f,c
  9096  002990  1E0E               	comf	(i1___aodiv@divisor+5)^0,f,c
  9097  002992  1E0D               	comf	(i1___aodiv@divisor+4)^0,f,c
  9098  002994  1E0C               	comf	(i1___aodiv@divisor+3)^0,f,c
  9099  002996  1E0B               	comf	(i1___aodiv@divisor+2)^0,f,c
  9100  002998  1E0A               	comf	(i1___aodiv@divisor+1)^0,f,c
  9101  00299A  6C09               	negf	i1___aodiv@divisor^0,c
  9102  00299C  0E00               	movlw	0
  9103  00299E  220A               	addwfc	(i1___aodiv@divisor+1)^0,f,c
  9104  0029A0  220B               	addwfc	(i1___aodiv@divisor+2)^0,f,c
  9105  0029A2  220C               	addwfc	(i1___aodiv@divisor+3)^0,f,c
  9106  0029A4  220D               	addwfc	(i1___aodiv@divisor+4)^0,f,c
  9107  0029A6  220E               	addwfc	(i1___aodiv@divisor+5)^0,f,c
  9108  0029A8  220F               	addwfc	(i1___aodiv@divisor+6)^0,f,c
  9109  0029AA  2210               	addwfc	(i1___aodiv@divisor+7)^0,f,c
  9110  0029AC  0E01               	movlw	1
  9111  0029AE  6E12               	movwf	i1___aodiv@sign^0,c
  9112  0029B0                     i1l4158:
  9113  0029B0  BE08               	btfsc	(i1___aodiv@dividend+7)^0,7,c
  9114  0029B2  EFDF  F014         	goto	i1u457_20
  9115  0029B6  EFDD  F014         	goto	i1u457_21
  9116  0029BA                     i1u457_21:
  9117  0029BA  EFF1  F014         	goto	i1l4164
  9118  0029BE                     i1u457_20:
  9119  0029BE  1E08               	comf	(i1___aodiv@dividend+7)^0,f,c
  9120  0029C0  1E07               	comf	(i1___aodiv@dividend+6)^0,f,c
  9121  0029C2  1E06               	comf	(i1___aodiv@dividend+5)^0,f,c
  9122  0029C4  1E05               	comf	(i1___aodiv@dividend+4)^0,f,c
  9123  0029C6  1E04               	comf	(i1___aodiv@dividend+3)^0,f,c
  9124  0029C8  1E03               	comf	(i1___aodiv@dividend+2)^0,f,c
  9125  0029CA  1E02               	comf	(i1___aodiv@dividend+1)^0,f,c
  9126  0029CC  6C01               	negf	i1___aodiv@dividend^0,c
  9127  0029CE  0E00               	movlw	0
  9128  0029D0  2202               	addwfc	(i1___aodiv@dividend+1)^0,f,c
  9129  0029D2  2203               	addwfc	(i1___aodiv@dividend+2)^0,f,c
  9130  0029D4  2204               	addwfc	(i1___aodiv@dividend+3)^0,f,c
  9131  0029D6  2205               	addwfc	(i1___aodiv@dividend+4)^0,f,c
  9132  0029D8  2206               	addwfc	(i1___aodiv@dividend+5)^0,f,c
  9133  0029DA  2207               	addwfc	(i1___aodiv@dividend+6)^0,f,c
  9134  0029DC  2208               	addwfc	(i1___aodiv@dividend+7)^0,f,c
  9135  0029DE  0E01               	movlw	1
  9136  0029E0  1A12               	xorwf	i1___aodiv@sign^0,f,c
  9137  0029E2                     i1l4164:
  9138  0029E2  EE20  F013         	lfsr	2,i1___aodiv@quotient
  9139  0029E6  0E07               	movlw	7
  9140  0029E8                     i1u458_21:
  9141  0029E8  6ADE               	clrf	postinc2,c
  9142  0029EA  06E8               	decf	wreg,f,c
  9143  0029EC  E2FD               	bc	i1u458_21
  9144  0029EE  5009               	movf	i1___aodiv@divisor^0,w,c
  9145  0029F0  100A               	iorwf	(i1___aodiv@divisor+1)^0,w,c
  9146  0029F2  100B               	iorwf	(i1___aodiv@divisor+2)^0,w,c
  9147  0029F4  100C               	iorwf	(i1___aodiv@divisor+3)^0,w,c
  9148  0029F6  100D               	iorwf	(i1___aodiv@divisor+4)^0,w,c
  9149  0029F8  100E               	iorwf	(i1___aodiv@divisor+5)^0,w,c
  9150  0029FA  100F               	iorwf	(i1___aodiv@divisor+6)^0,w,c
  9151  0029FC  1010               	iorwf	(i1___aodiv@divisor+7)^0,w,c
  9152  0029FE  B4D8               	btfsc	status,2,c
  9153  002A00  EF04  F015         	goto	i1u459_21
  9154  002A04  EF06  F015         	goto	i1u459_20
  9155  002A08                     i1u459_21:
  9156  002A08  EF58  F015         	goto	i1l4186
  9157  002A0C                     i1u459_20:
  9158  002A0C  0E01               	movlw	1
  9159  002A0E  6E11               	movwf	i1___aodiv@counter^0,c
  9160  002A10  EF14  F015         	goto	i1l4172
  9161  002A14                     i1l4170:
  9162  002A14  90D8               	bcf	status,0,c
  9163  002A16  3609               	rlcf	i1___aodiv@divisor^0,f,c
  9164  002A18  360A               	rlcf	(i1___aodiv@divisor+1)^0,f,c
  9165  002A1A  360B               	rlcf	(i1___aodiv@divisor+2)^0,f,c
  9166  002A1C  360C               	rlcf	(i1___aodiv@divisor+3)^0,f,c
  9167  002A1E  360D               	rlcf	(i1___aodiv@divisor+4)^0,f,c
  9168  002A20  360E               	rlcf	(i1___aodiv@divisor+5)^0,f,c
  9169  002A22  360F               	rlcf	(i1___aodiv@divisor+6)^0,f,c
  9170  002A24  3610               	rlcf	(i1___aodiv@divisor+7)^0,f,c
  9171  002A26  2A11               	incf	i1___aodiv@counter^0,f,c
  9172  002A28                     i1l4172:
  9173  002A28  AE10               	btfss	(i1___aodiv@divisor+7)^0,7,c
  9174  002A2A  EF19  F015         	goto	i1u460_21
  9175  002A2E  EF1B  F015         	goto	i1u460_20
  9176  002A32                     i1u460_21:
  9177  002A32  EF0A  F015         	goto	i1l4170
  9178  002A36                     i1u460_20:
  9179  002A36                     i1l4174:
  9180  002A36  90D8               	bcf	status,0,c
  9181  002A38  3613               	rlcf	i1___aodiv@quotient^0,f,c
  9182  002A3A  3614               	rlcf	(i1___aodiv@quotient+1)^0,f,c
  9183  002A3C  3615               	rlcf	(i1___aodiv@quotient+2)^0,f,c
  9184  002A3E  3616               	rlcf	(i1___aodiv@quotient+3)^0,f,c
  9185  002A40  3617               	rlcf	(i1___aodiv@quotient+4)^0,f,c
  9186  002A42  3618               	rlcf	(i1___aodiv@quotient+5)^0,f,c
  9187  002A44  3619               	rlcf	(i1___aodiv@quotient+6)^0,f,c
  9188  002A46  361A               	rlcf	(i1___aodiv@quotient+7)^0,f,c
  9189  002A48  5009               	movf	i1___aodiv@divisor^0,w,c
  9190  002A4A  5C01               	subwf	i1___aodiv@dividend^0,w,c
  9191  002A4C  500A               	movf	(i1___aodiv@divisor+1)^0,w,c
  9192  002A4E  5802               	subwfb	(i1___aodiv@dividend+1)^0,w,c
  9193  002A50  500B               	movf	(i1___aodiv@divisor+2)^0,w,c
  9194  002A52  5803               	subwfb	(i1___aodiv@dividend+2)^0,w,c
  9195  002A54  500C               	movf	(i1___aodiv@divisor+3)^0,w,c
  9196  002A56  5804               	subwfb	(i1___aodiv@dividend+3)^0,w,c
  9197  002A58  500D               	movf	(i1___aodiv@divisor+4)^0,w,c
  9198  002A5A  5805               	subwfb	(i1___aodiv@dividend+4)^0,w,c
  9199  002A5C  500E               	movf	(i1___aodiv@divisor+5)^0,w,c
  9200  002A5E  5806               	subwfb	(i1___aodiv@dividend+5)^0,w,c
  9201  002A60  500F               	movf	(i1___aodiv@divisor+6)^0,w,c
  9202  002A62  5807               	subwfb	(i1___aodiv@dividend+6)^0,w,c
  9203  002A64  5010               	movf	(i1___aodiv@divisor+7)^0,w,c
  9204  002A66  5808               	subwfb	(i1___aodiv@dividend+7)^0,w,c
  9205  002A68  A0D8               	btfss	status,0,c
  9206  002A6A  EF39  F015         	goto	i1u461_21
  9207  002A6E  EF3B  F015         	goto	i1u461_20
  9208  002A72                     i1u461_21:
  9209  002A72  EF4C  F015         	goto	i1l4182
  9210  002A76                     i1u461_20:
  9211  002A76  5009               	movf	i1___aodiv@divisor^0,w,c
  9212  002A78  5E01               	subwf	i1___aodiv@dividend^0,f,c
  9213  002A7A  500A               	movf	(i1___aodiv@divisor+1)^0,w,c
  9214  002A7C  5A02               	subwfb	(i1___aodiv@dividend+1)^0,f,c
  9215  002A7E  500B               	movf	(i1___aodiv@divisor+2)^0,w,c
  9216  002A80  5A03               	subwfb	(i1___aodiv@dividend+2)^0,f,c
  9217  002A82  500C               	movf	(i1___aodiv@divisor+3)^0,w,c
  9218  002A84  5A04               	subwfb	(i1___aodiv@dividend+3)^0,f,c
  9219  002A86  500D               	movf	(i1___aodiv@divisor+4)^0,w,c
  9220  002A88  5A05               	subwfb	(i1___aodiv@dividend+4)^0,f,c
  9221  002A8A  500E               	movf	(i1___aodiv@divisor+5)^0,w,c
  9222  002A8C  5A06               	subwfb	(i1___aodiv@dividend+5)^0,f,c
  9223  002A8E  500F               	movf	(i1___aodiv@divisor+6)^0,w,c
  9224  002A90  5A07               	subwfb	(i1___aodiv@dividend+6)^0,f,c
  9225  002A92  5010               	movf	(i1___aodiv@divisor+7)^0,w,c
  9226  002A94  5A08               	subwfb	(i1___aodiv@dividend+7)^0,f,c
  9227  002A96  8013               	bsf	i1___aodiv@quotient^0,0,c
  9228  002A98                     i1l4182:
  9229  002A98  90D8               	bcf	status,0,c
  9230  002A9A  3210               	rrcf	(i1___aodiv@divisor+7)^0,f,c
  9231  002A9C  320F               	rrcf	(i1___aodiv@divisor+6)^0,f,c
  9232  002A9E  320E               	rrcf	(i1___aodiv@divisor+5)^0,f,c
  9233  002AA0  320D               	rrcf	(i1___aodiv@divisor+4)^0,f,c
  9234  002AA2  320C               	rrcf	(i1___aodiv@divisor+3)^0,f,c
  9235  002AA4  320B               	rrcf	(i1___aodiv@divisor+2)^0,f,c
  9236  002AA6  320A               	rrcf	(i1___aodiv@divisor+1)^0,f,c
  9237  002AA8  3209               	rrcf	i1___aodiv@divisor^0,f,c
  9238  002AAA  2E11               	decfsz	i1___aodiv@counter^0,f,c
  9239  002AAC  EF1B  F015         	goto	i1l4174
  9240  002AB0                     i1l4186:
  9241  002AB0  5012               	movf	i1___aodiv@sign^0,w,c
  9242  002AB2  B4D8               	btfsc	status,2,c
  9243  002AB4  EF5E  F015         	goto	i1u462_21
  9244  002AB8  EF60  F015         	goto	i1u462_20
  9245  002ABC                     i1u462_21:
  9246  002ABC  EF70  F015         	goto	i1l4190
  9247  002AC0                     i1u462_20:
  9248  002AC0  1E1A               	comf	(i1___aodiv@quotient+7)^0,f,c
  9249  002AC2  1E19               	comf	(i1___aodiv@quotient+6)^0,f,c
  9250  002AC4  1E18               	comf	(i1___aodiv@quotient+5)^0,f,c
  9251  002AC6  1E17               	comf	(i1___aodiv@quotient+4)^0,f,c
  9252  002AC8  1E16               	comf	(i1___aodiv@quotient+3)^0,f,c
  9253  002ACA  1E15               	comf	(i1___aodiv@quotient+2)^0,f,c
  9254  002ACC  1E14               	comf	(i1___aodiv@quotient+1)^0,f,c
  9255  002ACE  6C13               	negf	i1___aodiv@quotient^0,c
  9256  002AD0  0E00               	movlw	0
  9257  002AD2  2214               	addwfc	(i1___aodiv@quotient+1)^0,f,c
  9258  002AD4  2215               	addwfc	(i1___aodiv@quotient+2)^0,f,c
  9259  002AD6  2216               	addwfc	(i1___aodiv@quotient+3)^0,f,c
  9260  002AD8  2217               	addwfc	(i1___aodiv@quotient+4)^0,f,c
  9261  002ADA  2218               	addwfc	(i1___aodiv@quotient+5)^0,f,c
  9262  002ADC  2219               	addwfc	(i1___aodiv@quotient+6)^0,f,c
  9263  002ADE  221A               	addwfc	(i1___aodiv@quotient+7)^0,f,c
  9264  002AE0                     i1l4190:
  9265  002AE0  C013  F001         	movff	i1___aodiv@quotient,?i1___aodiv
  9266  002AE4  C014  F002         	movff	i1___aodiv@quotient+1,?i1___aodiv+1
  9267  002AE8  C015  F003         	movff	i1___aodiv@quotient+2,?i1___aodiv+2
  9268  002AEC  C016  F004         	movff	i1___aodiv@quotient+3,?i1___aodiv+3
  9269  002AF0  C017  F005         	movff	i1___aodiv@quotient+4,?i1___aodiv+4
  9270  002AF4  C018  F006         	movff	i1___aodiv@quotient+5,?i1___aodiv+5
  9271  002AF8  C019  F007         	movff	i1___aodiv@quotient+6,?i1___aodiv+6
  9272  002AFC  C01A  F008         	movff	i1___aodiv@quotient+7,?i1___aodiv+7
  9273  002B00  0012               	return		;funcret
  9274  002B02                     __end_ofi1___aodiv:
  9275                           	callstack 0
  9276                           
  9277 ;; *************** function i1_atoi *****************
  9278 ;; Defined at:
  9279 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  9280 ;; Parameters:    Size  Location     Type
  9281 ;;  s               2    7[COMRAM] PTR const unsigned char 
  9282 ;;		 -> STR_4(6), STR_3(19), STR_2(19), STR_1(5), 
  9283 ;; Auto vars:     Size  Location     Type
  9284 ;;  n               2   20[COMRAM] int 
  9285 ;;  neg             2   13[COMRAM] int 
  9286 ;; Return value:  Size  Location     Type
  9287 ;;                  2    7[COMRAM] int 
  9288 ;; Registers used:
  9289 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9290 ;; Tracked objects:
  9291 ;;		On entry : 0/0
  9292 ;;		On exit  : 0/0
  9293 ;;		Unchanged: 0/0
  9294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9295 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9296 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9297 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9298 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9299 ;;Total ram usage:       15 bytes
  9300 ;; Hardware stack levels used:    1
  9301 ;; Hardware stack levels required when called:    2
  9302 ;; This function calls:
  9303 ;;		i1___wmul
  9304 ;;		i1_isdigit
  9305 ;;		i1_isspace
  9306 ;; This function is called by:
  9307 ;;		i1_vfpfcnvrt
  9308 ;; This function uses a non-reentrant model
  9309 ;;
  9310                           
  9311                           	psect	text47
  9312  0024C0                     __ptext47:
  9313                           	callstack 0
  9314  0024C0                     i1_atoi:
  9315                           	callstack 15
  9316  0024C0  0E00               	movlw	0
  9317  0024C2  6E16               	movwf	(i1atoi@n+1)^0,c
  9318  0024C4  0E00               	movlw	0
  9319  0024C6  6E15               	movwf	i1atoi@n^0,c
  9320  0024C8  0E00               	movlw	0
  9321  0024CA  6E0F               	movwf	(i1atoi@neg+1)^0,c
  9322  0024CC  0E00               	movlw	0
  9323  0024CE  6E0E               	movwf	i1atoi@neg^0,c
  9324  0024D0  EF6C  F012         	goto	i1l4492
  9325  0024D4                     i1l4490:
  9326  0024D4  4A08               	infsnz	i1atoi@s^0,f,c
  9327  0024D6  2A09               	incf	(i1atoi@s+1)^0,f,c
  9328  0024D8                     i1l4492:
  9329  0024D8  0E01               	movlw	1
  9330  0024DA  6E14               	movwf	i1_atoi$1832^0,c
  9331  0024DC  C008  FFF6         	movff	i1atoi@s,tblptrl
  9332  0024E0  C009  FFF7         	movff	i1atoi@s+1,tblptrh
  9333  0024E4                     	if	0	;tblptru may be non-zero
  9334  0024E4                     	endif
  9335  0024E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9336  0024E4  0E00               	movlw	low (__mediumconst shr (0+16))
  9337  0024E6  6EF8               	movwf	tblptru,c
  9338  0024E8                     	endif
  9339  0024E8  0008               	tblrd		*
  9340  0024EA  50F5               	movf	tablat,w,c
  9341  0024EC  0A20               	xorlw	32
  9342  0024EE  B4D8               	btfsc	status,2,c
  9343  0024F0  EF7C  F012         	goto	i1u514_21
  9344  0024F4  EF7E  F012         	goto	i1u514_20
  9345  0024F8                     i1u514_21:
  9346  0024F8  EF9D  F012         	goto	i1l4500
  9347  0024FC                     i1u514_20:
  9348  0024FC  0EF7               	movlw	247
  9349  0024FE  6E0A               	movwf	??i1_atoi^0,c
  9350  002500  0EFF               	movlw	255
  9351  002502  6E0B               	movwf	(??i1_atoi+1)^0,c
  9352  002504  C008  FFF6         	movff	i1atoi@s,tblptrl
  9353  002508  C009  FFF7         	movff	i1atoi@s+1,tblptrh
  9354  00250C                     	if	0	;tblptru may be non-zero
  9355  00250C                     	endif
  9356  00250C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9357  00250C  0E00               	movlw	low (__mediumconst shr (0+16))
  9358  00250E  6EF8               	movwf	tblptru,c
  9359  002510                     	endif
  9360  002510  0008               	tblrd		*
  9361  002512  50F5               	movf	tablat,w,c
  9362  002514  6E0C               	movwf	(??i1_atoi+2)^0,c
  9363  002516  6A0D               	clrf	(??i1_atoi+3)^0,c
  9364  002518  500A               	movf	??i1_atoi^0,w,c
  9365  00251A  260C               	addwf	(??i1_atoi+2)^0,f,c
  9366  00251C  500B               	movf	(??i1_atoi+1)^0,w,c
  9367  00251E  220D               	addwfc	(??i1_atoi+3)^0,f,c
  9368  002520  500D               	movf	(??i1_atoi+3)^0,w,c
  9369  002522  E109               	bnz	i1u515_20
  9370  002524  0E05               	movlw	5
  9371  002526  5C0C               	subwf	(??i1_atoi+2)^0,w,c
  9372  002528  A0D8               	btfss	status,0,c
  9373  00252A  EF99  F012         	goto	i1u515_21
  9374  00252E  EF9B  F012         	goto	i1u515_20
  9375  002532                     i1u515_21:
  9376  002532  EF9D  F012         	goto	i1l4500
  9377  002536                     i1u515_20:
  9378  002536  0E00               	movlw	0
  9379  002538  6E14               	movwf	i1_atoi$1832^0,c
  9380  00253A                     i1l4500:
  9381  00253A  C014  F010         	movff	i1_atoi$1832,i1_atoi$1831
  9382  00253E  6A11               	clrf	(i1_atoi$1831+1)^0,c
  9383  002540  5010               	movf	i1_atoi$1831^0,w,c
  9384  002542  1011               	iorwf	(i1_atoi$1831+1)^0,w,c
  9385  002544  A4D8               	btfss	status,2,c
  9386  002546  EFA7  F012         	goto	i1u516_21
  9387  00254A  EFA9  F012         	goto	i1u516_20
  9388  00254E                     i1u516_21:
  9389  00254E  EF6A  F012         	goto	i1l4490
  9390  002552                     i1u516_20:
  9391  002552  EFB3  F012         	goto	i1l4510
  9392  002556                     i1l4506:
  9393  002556  0E00               	movlw	0
  9394  002558  6E0F               	movwf	(i1atoi@neg+1)^0,c
  9395  00255A  0E01               	movlw	1
  9396  00255C  6E0E               	movwf	i1atoi@neg^0,c
  9397  00255E                     i1l4508:
  9398  00255E  4A08               	infsnz	i1atoi@s^0,f,c
  9399  002560  2A09               	incf	(i1atoi@s+1)^0,f,c
  9400  002562  EFEC  F012         	goto	i1l4516
  9401  002566                     i1l4510:
  9402  002566  C008  FFF6         	movff	i1atoi@s,tblptrl
  9403  00256A  C009  FFF7         	movff	i1atoi@s+1,tblptrh
  9404  00256E                     	if	0	;tblptru may be non-zero
  9405  00256E                     	endif
  9406  00256E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9407  00256E  0E00               	movlw	low (__mediumconst shr (0+16))
  9408  002570  6EF8               	movwf	tblptru,c
  9409  002572                     	endif
  9410  002572  0008               	tblrd		*
  9411  002574  50F5               	movf	tablat,w,c
  9412  002576  6E0A               	movwf	??i1_atoi^0,c
  9413  002578  6A0B               	clrf	(??i1_atoi+1)^0,c
  9414                           
  9415                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9416                           ; Switch size 1, requested type "simple"
  9417                           ; Number of cases is 1, Range of values is 0 to 0
  9418                           ; switch strategies available:
  9419                           ; Name         Instructions Cycles
  9420                           ; simple_byte            4     3 (average)
  9421                           ;	Chosen strategy is simple_byte
  9422  00257A  500B               	movf	(??i1_atoi+1)^0,w,c
  9423  00257C  0A00               	xorlw	0	; case 0
  9424  00257E  B4D8               	btfsc	status,2,c
  9425  002580  EFC4  F012         	goto	i1l5122
  9426  002584  EFEC  F012         	goto	i1l4516
  9427  002588                     i1l5122:
  9428                           
  9429                           ; Switch size 1, requested type "simple"
  9430                           ; Number of cases is 2, Range of values is 43 to 45
  9431                           ; switch strategies available:
  9432                           ; Name         Instructions Cycles
  9433                           ; simple_byte            7     4 (average)
  9434                           ;	Chosen strategy is simple_byte
  9435  002588  500A               	movf	??i1_atoi^0,w,c
  9436  00258A  0A2B               	xorlw	43	; case 43
  9437  00258C  B4D8               	btfsc	status,2,c
  9438  00258E  EFAF  F012         	goto	i1l4508
  9439  002592  0A06               	xorlw	6	; case 45
  9440  002594  B4D8               	btfsc	status,2,c
  9441  002596  EFAB  F012         	goto	i1l4506
  9442  00259A  EFEC  F012         	goto	i1l4516
  9443  00259E                     i1l4512:
  9444  00259E  C015  F001         	movff	i1atoi@n,i1___wmul@multiplier
  9445  0025A2  C016  F002         	movff	i1atoi@n+1,i1___wmul@multiplier+1
  9446  0025A6  0E00               	movlw	0
  9447  0025A8  6E04               	movwf	(i1___wmul@multiplicand+1)^0,c
  9448  0025AA  0E0A               	movlw	10
  9449  0025AC  6E03               	movwf	i1___wmul@multiplicand^0,c
  9450  0025AE  ECA2  F01D         	call	i1___wmul	;wreg free
  9451  0025B2  C008  FFF6         	movff	i1atoi@s,tblptrl
  9452  0025B6  C009  FFF7         	movff	i1atoi@s+1,tblptrh
  9453  0025BA                     	if	0	;tblptru may be non-zero
  9454  0025BA                     	endif
  9455  0025BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9456  0025BA  0E00               	movlw	low (__mediumconst shr (0+16))
  9457  0025BC  6EF8               	movwf	tblptru,c
  9458  0025BE                     	endif
  9459  0025BE  0008               	tblrd		*
  9460  0025C0  50F5               	movf	tablat,w,c
  9461  0025C2  5E01               	subwf	?i1___wmul^0,f,c
  9462  0025C4  0E00               	movlw	0
  9463  0025C6  5A02               	subwfb	(?i1___wmul+1)^0,f,c
  9464  0025C8  0E30               	movlw	48
  9465  0025CA  2401               	addwf	?i1___wmul^0,w,c
  9466  0025CC  6E15               	movwf	i1atoi@n^0,c
  9467  0025CE  0E00               	movlw	0
  9468  0025D0  2002               	addwfc	(?i1___wmul+1)^0,w,c
  9469  0025D2  6E16               	movwf	(i1atoi@n+1)^0,c
  9470  0025D4  EFAF  F012         	goto	i1l4508
  9471  0025D8                     i1l4516:
  9472  0025D8  0ED0               	movlw	208
  9473  0025DA  6E0A               	movwf	??i1_atoi^0,c
  9474  0025DC  0EFF               	movlw	255
  9475  0025DE  6E0B               	movwf	(??i1_atoi+1)^0,c
  9476  0025E0  C008  FFF6         	movff	i1atoi@s,tblptrl
  9477  0025E4  C009  FFF7         	movff	i1atoi@s+1,tblptrh
  9478  0025E8                     	if	0	;tblptru may be non-zero
  9479  0025E8                     	endif
  9480  0025E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9481  0025E8  0E00               	movlw	low (__mediumconst shr (0+16))
  9482  0025EA  6EF8               	movwf	tblptru,c
  9483  0025EC                     	endif
  9484  0025EC  0008               	tblrd		*
  9485  0025EE  50F5               	movf	tablat,w,c
  9486  0025F0  6E0C               	movwf	(??i1_atoi+2)^0,c
  9487  0025F2  6A0D               	clrf	(??i1_atoi+3)^0,c
  9488  0025F4  500A               	movf	??i1_atoi^0,w,c
  9489  0025F6  260C               	addwf	(??i1_atoi+2)^0,f,c
  9490  0025F8  500B               	movf	(??i1_atoi+1)^0,w,c
  9491  0025FA  220D               	addwfc	(??i1_atoi+3)^0,f,c
  9492  0025FC  500D               	movf	(??i1_atoi+3)^0,w,c
  9493  0025FE  E10A               	bnz	i1u517_20
  9494  002600  0E0A               	movlw	10
  9495  002602  5C0C               	subwf	(??i1_atoi+2)^0,w,c
  9496  002604  A0D8               	btfss	status,0,c
  9497  002606  EF07  F013         	goto	i1u517_21
  9498  00260A  EF0A  F013         	goto	i1u517_20
  9499  00260E                     i1u517_21:
  9500  00260E  0E01               	movlw	1
  9501  002610  EF0B  F013         	goto	i1u518_20
  9502  002614                     i1u517_20:
  9503  002614  0E00               	movlw	0
  9504  002616                     i1u518_20:
  9505  002616  6E12               	movwf	i1_atoi$1833^0,c
  9506  002618  6A13               	clrf	(i1_atoi$1833+1)^0,c
  9507  00261A  5012               	movf	i1_atoi$1833^0,w,c
  9508  00261C  1013               	iorwf	(i1_atoi$1833+1)^0,w,c
  9509  00261E  A4D8               	btfss	status,2,c
  9510  002620  EF14  F013         	goto	i1u519_21
  9511  002624  EF16  F013         	goto	i1u519_20
  9512  002628                     i1u519_21:
  9513  002628  EFCF  F012         	goto	i1l4512
  9514  00262C                     i1u519_20:
  9515  00262C  500E               	movf	i1atoi@neg^0,w,c
  9516  00262E  100F               	iorwf	(i1atoi@neg+1)^0,w,c
  9517  002630  A4D8               	btfss	status,2,c
  9518  002632  EF1D  F013         	goto	i1u520_21
  9519  002636  EF1F  F013         	goto	i1u520_20
  9520  00263A                     i1u520_21:
  9521  00263A  EF2D  F013         	goto	i1l1077
  9522  00263E                     i1u520_20:
  9523  00263E  C015  F00A         	movff	i1atoi@n,??i1_atoi
  9524  002642  C016  F00B         	movff	i1atoi@n+1,??i1_atoi+1
  9525  002646  1E0A               	comf	??i1_atoi^0,f,c
  9526  002648  1E0B               	comf	(??i1_atoi+1)^0,f,c
  9527  00264A  4A0A               	infsnz	??i1_atoi^0,f,c
  9528  00264C  2A0B               	incf	(??i1_atoi+1)^0,f,c
  9529  00264E  C00A  F008         	movff	??i1_atoi,?i1_atoi
  9530  002652  C00B  F009         	movff	??i1_atoi+1,?i1_atoi+1
  9531  002656  EF31  F013         	goto	i1l1080
  9532  00265A                     i1l1077:
  9533  00265A  C015  F008         	movff	i1atoi@n,?i1_atoi
  9534  00265E  C016  F009         	movff	i1atoi@n+1,?i1_atoi+1
  9535  002662                     i1l1080:
  9536  002662  0012               	return		;funcret
  9537  002664                     __end_ofi1_atoi:
  9538                           	callstack 0
  9539                           
  9540 ;; *************** function i1_isspace *****************
  9541 ;; Defined at:
  9542 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  9543 ;; Parameters:    Size  Location     Type
  9544 ;;  c               2    0[COMRAM] int 
  9545 ;; Auto vars:     Size  Location     Type
  9546 ;;		None
  9547 ;; Return value:  Size  Location     Type
  9548 ;;                  2    0[COMRAM] int 
  9549 ;; Registers used:
  9550 ;;		wreg, status,2, status,0
  9551 ;; Tracked objects:
  9552 ;;		On entry : 0/0
  9553 ;;		On exit  : 0/0
  9554 ;;		Unchanged: 0/0
  9555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9556 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9557 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9558 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9559 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9560 ;;Total ram usage:        7 bytes
  9561 ;; Hardware stack levels used:    1
  9562 ;; Hardware stack levels required when called:    1
  9563 ;; This function calls:
  9564 ;;		Nothing
  9565 ;; This function is called by:
  9566 ;;		i1_atoi
  9567 ;; This function uses a non-reentrant model
  9568 ;;
  9569                           
  9570                           	psect	text48
  9571  00373C                     __ptext48:
  9572                           	callstack 0
  9573  00373C                     i1_isspace:
  9574                           	callstack 15
  9575  00373C  0E01               	movlw	1
  9576  00373E  6E07               	movwf	i1_isspace$1849^0,c
  9577  003740  0E20               	movlw	32
  9578  003742  1801               	xorwf	i1isspace@c^0,w,c
  9579  003744  1002               	iorwf	(i1isspace@c+1)^0,w,c
  9580  003746  B4D8               	btfsc	status,2,c
  9581  003748  EFA8  F01B         	goto	i1u476_21
  9582  00374C  EFAA  F01B         	goto	i1u476_20
  9583  003750                     i1u476_21:
  9584  003750  EFC3  F01B         	goto	i1l4268
  9585  003754                     i1u476_20:
  9586  003754  0EF7               	movlw	247
  9587  003756  6E03               	movwf	??i1_isspace^0,c
  9588  003758  0EFF               	movlw	255
  9589  00375A  6E04               	movwf	(??i1_isspace+1)^0,c
  9590  00375C  C001  F005         	movff	i1isspace@c,??i1_isspace+2
  9591  003760  C002  F006         	movff	i1isspace@c+1,??i1_isspace+3
  9592  003764  5003               	movf	??i1_isspace^0,w,c
  9593  003766  2605               	addwf	(??i1_isspace+2)^0,f,c
  9594  003768  5004               	movf	(??i1_isspace+1)^0,w,c
  9595  00376A  2206               	addwfc	(??i1_isspace+3)^0,f,c
  9596  00376C  5006               	movf	(??i1_isspace+3)^0,w,c
  9597  00376E  E109               	bnz	i1u477_20
  9598  003770  0E05               	movlw	5
  9599  003772  5C05               	subwf	(??i1_isspace+2)^0,w,c
  9600  003774  A0D8               	btfss	status,0,c
  9601  003776  EFBF  F01B         	goto	i1u477_21
  9602  00377A  EFC1  F01B         	goto	i1u477_20
  9603  00377E                     i1u477_21:
  9604  00377E  EFC3  F01B         	goto	i1l4268
  9605  003782                     i1u477_20:
  9606  003782  0E00               	movlw	0
  9607  003784  6E07               	movwf	i1_isspace$1849^0,c
  9608  003786                     i1l4268:
  9609  003786  C007  F001         	movff	i1_isspace$1849,?i1_isspace
  9610  00378A  6A02               	clrf	(?i1_isspace+1)^0,c
  9611  00378C  0012               	return		;funcret
  9612  00378E                     __end_ofi1_isspace:
  9613                           	callstack 0
  9614                           
  9615 ;; *************** function i1_isdigit *****************
  9616 ;; Defined at:
  9617 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  9618 ;; Parameters:    Size  Location     Type
  9619 ;;  c               2    0[COMRAM] int 
  9620 ;; Auto vars:     Size  Location     Type
  9621 ;;		None
  9622 ;; Return value:  Size  Location     Type
  9623 ;;                  2    0[COMRAM] int 
  9624 ;; Registers used:
  9625 ;;		wreg, status,2, status,0
  9626 ;; Tracked objects:
  9627 ;;		On entry : 0/0
  9628 ;;		On exit  : 0/0
  9629 ;;		Unchanged: 0/0
  9630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9631 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9633 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9634 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9635 ;;Total ram usage:        6 bytes
  9636 ;; Hardware stack levels used:    1
  9637 ;; Hardware stack levels required when called:    1
  9638 ;; This function calls:
  9639 ;;		Nothing
  9640 ;; This function is called by:
  9641 ;;		i1_vfpfcnvrt
  9642 ;;		i1_atoi
  9643 ;; This function uses a non-reentrant model
  9644 ;;
  9645                           
  9646                           	psect	text49
  9647  003A0A                     __ptext49:
  9648                           	callstack 0
  9649  003A0A                     i1_isdigit:
  9650                           	callstack 16
  9651  003A0A  0ED0               	movlw	208
  9652  003A0C  6E03               	movwf	??i1_isdigit^0,c
  9653  003A0E  0EFF               	movlw	255
  9654  003A10  6E04               	movwf	(??i1_isdigit+1)^0,c
  9655  003A12  C001  F005         	movff	i1isdigit@c,??i1_isdigit+2
  9656  003A16  C002  F006         	movff	i1isdigit@c+1,??i1_isdigit+3
  9657  003A1A  5003               	movf	??i1_isdigit^0,w,c
  9658  003A1C  2605               	addwf	(??i1_isdigit+2)^0,f,c
  9659  003A1E  5004               	movf	(??i1_isdigit+1)^0,w,c
  9660  003A20  2206               	addwfc	(??i1_isdigit+3)^0,f,c
  9661  003A22  5006               	movf	(??i1_isdigit+3)^0,w,c
  9662  003A24  E10A               	bnz	i1u474_20
  9663  003A26  0E0A               	movlw	10
  9664  003A28  5C05               	subwf	(??i1_isdigit+2)^0,w,c
  9665  003A2A  A0D8               	btfss	status,0,c
  9666  003A2C  EF1A  F01D         	goto	i1u474_21
  9667  003A30  EF1D  F01D         	goto	i1u474_20
  9668  003A34                     i1u474_21:
  9669  003A34  0E01               	movlw	1
  9670  003A36  EF1E  F01D         	goto	i1u475_20
  9671  003A3A                     i1u474_20:
  9672  003A3A  0E00               	movlw	0
  9673  003A3C                     i1u475_20:
  9674  003A3C  6E01               	movwf	?i1_isdigit^0,c
  9675  003A3E  6A02               	clrf	(?i1_isdigit+1)^0,c
  9676  003A40  0012               	return		;funcret
  9677  003A42                     __end_ofi1_isdigit:
  9678                           	callstack 0
  9679                           
  9680 ;; *************** function i1___wmul *****************
  9681 ;; Defined at:
  9682 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  9683 ;; Parameters:    Size  Location     Type
  9684 ;;  multiplier      2    0[COMRAM] unsigned int 
  9685 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9686 ;; Auto vars:     Size  Location     Type
  9687 ;;  product         2    4[COMRAM] unsigned int 
  9688 ;; Return value:  Size  Location     Type
  9689 ;;                  2    0[COMRAM] unsigned int 
  9690 ;; Registers used:
  9691 ;;		wreg, status,2, status,0, prodl, prodh
  9692 ;; Tracked objects:
  9693 ;;		On entry : 0/0
  9694 ;;		On exit  : 0/0
  9695 ;;		Unchanged: 0/0
  9696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9697 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9698 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9700 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9701 ;;Total ram usage:        6 bytes
  9702 ;; Hardware stack levels used:    1
  9703 ;; Hardware stack levels required when called:    1
  9704 ;; This function calls:
  9705 ;;		Nothing
  9706 ;; This function is called by:
  9707 ;;		i1_atoi
  9708 ;; This function uses a non-reentrant model
  9709 ;;
  9710                           
  9711                           	psect	text50
  9712  003B44                     __ptext50:
  9713                           	callstack 0
  9714  003B44                     i1___wmul:
  9715                           	callstack 15
  9716  003B44  5001               	movf	i1___wmul@multiplier^0,w,c
  9717  003B46  0203               	mulwf	i1___wmul@multiplicand^0,c
  9718  003B48  CFF3 F005          	movff	prodl,i1___wmul@product
  9719  003B4C  CFF4 F006          	movff	prodh,i1___wmul@product+1
  9720  003B50  5001               	movf	i1___wmul@multiplier^0,w,c
  9721  003B52  0204               	mulwf	(i1___wmul@multiplicand+1)^0,c
  9722  003B54  50F3               	movf	243,w,c
  9723  003B56  2606               	addwf	(i1___wmul@product+1)^0,f,c
  9724  003B58  5002               	movf	(i1___wmul@multiplier+1)^0,w,c
  9725  003B5A  0203               	mulwf	i1___wmul@multiplicand^0,c
  9726  003B5C  50F3               	movf	243,w,c
  9727  003B5E  2606               	addwf	(i1___wmul@product+1)^0,f,c
  9728  003B60  C005  F001         	movff	i1___wmul@product,?i1___wmul
  9729  003B64  C006  F002         	movff	i1___wmul@product+1,?i1___wmul+1
  9730  003B68  0012               	return		;funcret
  9731  003B6A                     __end_ofi1___wmul:
  9732                           	callstack 0
  9733                           
  9734 ;; *************** function _TimerISR *****************
  9735 ;; Defined at:
  9736 ;;		line 50 in file "interrupts.c"
  9737 ;; Parameters:    Size  Location     Type
  9738 ;;		None
  9739 ;; Auto vars:     Size  Location     Type
  9740 ;;		None
  9741 ;; Return value:  Size  Location     Type
  9742 ;;                  1    wreg      void 
  9743 ;; Registers used:
  9744 ;;		wreg, status,2, status,0
  9745 ;; Tracked objects:
  9746 ;;		On entry : 0/0
  9747 ;;		On exit  : 0/0
  9748 ;;		Unchanged: 0/0
  9749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9754 ;;Total ram usage:        0 bytes
  9755 ;; Hardware stack levels used:    1
  9756 ;; This function calls:
  9757 ;;		Nothing
  9758 ;; This function is called by:
  9759 ;;		Interrupt level 2
  9760 ;; This function uses a non-reentrant model
  9761 ;;
  9762                           
  9763                           	psect	intcode
  9764  000008                     __pintcode:
  9765                           	callstack 0
  9766  000008                     _TimerISR:
  9767                           	callstack 12
  9768                           
  9769                           ;incstack = 0
  9770  000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9771  00000A  EF91  F01C         	goto	int_func
  9772                           
  9773                           	psect	intcode_body
  9774  003922                     __pintcode_body:
  9775                           	callstack 12
  9776  003922                     int_func:
  9777                           	callstack 12
  9778  003922                     
  9779                           ;interrupts.c: 52:     if (PIR0bits.TMR0IF)
  9780  003922  010E               	movlb	14	; () banked
  9781  003924  AB33               	btfss	51,5,b	;volatile
  9782  003926  EF97  F01C         	goto	i2u381_41
  9783  00392A  EF99  F01C         	goto	i2u381_40
  9784  00392E                     i2u381_41:
  9785  00392E  EFAD  F01C         	goto	i2l177
  9786  003932                     i2u381_40:
  9787  003932                     
  9788                           ; BSR set to: 14
  9789                           ;interrupts.c: 54:     {;interrupts.c: 55:         PIR0bits.TMR0IF = 0;
  9790  003932  9B33               	bcf	51,5,b	;volatile
  9791  003934                     
  9792                           ; BSR set to: 14
  9793                           ;interrupts.c: 56:         seconds_counter += (1);
  9794  003934  0101               	movlb	1	; () banked
  9795  003936  4B9F               	infsnz	_seconds_counter& (0+255),f,b
  9796  003938  2BA0               	incf	(_seconds_counter+1)& (0+255),f,b
  9797  00393A                     
  9798                           ; BSR set to: 1
  9799                           ;interrupts.c: 58:         TMR0H = (0b11101110);
  9800  00393A  0EEE               	movlw	238
  9801  00393C  6ED4               	movwf	212,c	;volatile
  9802  00393E                     
  9803                           ; BSR set to: 1
  9804                           ;interrupts.c: 59:         TMR0L = (0b10100100);
  9805  00393E  0EA4               	movlw	164
  9806  003940  6ED3               	movwf	211,c	;volatile
  9807  003942                     
  9808                           ; BSR set to: 1
  9809                           ;interrupts.c: 60:         if (sun){
  9810  003942  0100               	movlb	0	; () banked
  9811  003944  51E2               	movf	_sun& (0+255),w,b
  9812  003946  B4D8               	btfsc	status,2,c
  9813  003948  EFA8  F01C         	goto	i2u382_41
  9814  00394C  EFAA  F01C         	goto	i2u382_40
  9815  003950                     i2u382_41:
  9816  003950  EFAD  F01C         	goto	i2l177
  9817  003954                     i2u382_40:
  9818  003954                     
  9819                           ; BSR set to: 0
  9820                           ;interrupts.c: 61:             seconds_check += (1);
  9821  003954  0101               	movlb	1	; () banked
  9822  003956  4B9D               	infsnz	_seconds_check& (0+255),f,b
  9823  003958  2B9E               	incf	(_seconds_check+1)& (0+255),f,b
  9824  00395A                     i2l177:
  9825  00395A  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9826  00395C  0011               	retfie		f
  9827  00395E                     __end_of_TimerISR:
  9828                           	callstack 0
  9829                           
  9830                           	psect	rparam
  9831  0000                     
  9832                           	psect	temp
  9833  00005E                     btemp:
  9834                           	callstack 0
  9835  00005E                     	ds	1
  9836  0000                     int$flags	set	btemp
  9837  0000                     wtemp8	set	btemp+1
  9838  0000                     ttemp5	set	btemp+1
  9839  0000                     ttemp6	set	btemp+4
  9840  0000                     ttemp7	set	btemp+8
  9841                           
  9842                           	psect	idloc
  9843                           
  9844                           ;Config register IDLOC0 @ 0x200000
  9845                           ;	unspecified, using default values
  9846  200000                     	org	2097152
  9847  200000  0FFF               	dw	4095
  9848                           
  9849                           ;Config register IDLOC1 @ 0x200002
  9850                           ;	unspecified, using default values
  9851  200002                     	org	2097154
  9852  200002  0FFF               	dw	4095
  9853                           
  9854                           ;Config register IDLOC2 @ 0x200004
  9855                           ;	unspecified, using default values
  9856  200004                     	org	2097156
  9857  200004  0FFF               	dw	4095
  9858                           
  9859                           ;Config register IDLOC3 @ 0x200006
  9860                           ;	unspecified, using default values
  9861  200006                     	org	2097158
  9862  200006  0FFF               	dw	4095
  9863                           
  9864                           ;Config register IDLOC4 @ 0x200008
  9865                           ;	unspecified, using default values
  9866  200008                     	org	2097160
  9867  200008  0FFF               	dw	4095
  9868                           
  9869                           ;Config register IDLOC5 @ 0x20000A
  9870                           ;	unspecified, using default values
  9871  20000A                     	org	2097162
  9872  20000A  0FFF               	dw	4095
  9873                           
  9874                           ;Config register IDLOC6 @ 0x20000C
  9875                           ;	unspecified, using default values
  9876  20000C                     	org	2097164
  9877  20000C  0FFF               	dw	4095
  9878                           
  9879                           ;Config register IDLOC7 @ 0x20000E
  9880                           ;	unspecified, using default values
  9881  20000E                     	org	2097166
  9882  20000E  0FFF               	dw	4095
  9883                           
  9884                           	psect	config
  9885                           
  9886                           ;Config register CONFIG1L @ 0x300000
  9887                           ;	External Oscillator mode Selection bits
  9888                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9889                           ;	Power-up default value for COSC bits
  9890                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9891  300000                     	org	3145728
  9892  300000  AA                 	db	170
  9893                           
  9894                           ;Config register CONFIG1H @ 0x300001
  9895                           ;	unspecified, using default values
  9896                           ;	Clock Out Enable bit
  9897                           ;	CLKOUTEN = 0x1, unprogrammed default
  9898                           ;	Clock Switch Enable bit
  9899                           ;	CSWEN = 0x1, unprogrammed default
  9900                           ;	Fail-Safe Clock Monitor Enable bit
  9901                           ;	FCMEN = 0x1, unprogrammed default
  9902  300001                     	org	3145729
  9903  300001  FF                 	db	255
  9904                           
  9905                           ;Config register CONFIG2L @ 0x300002
  9906                           ;	unspecified, using default values
  9907                           ;	Master Clear Enable bit
  9908                           ;	MCLRE = 0x1, unprogrammed default
  9909                           ;	Power-up Timer Enable bit
  9910                           ;	PWRTE = 0x1, unprogrammed default
  9911                           ;	Low-power BOR enable bit
  9912                           ;	LPBOREN = 0x1, unprogrammed default
  9913                           ;	Brown-out Reset Enable bits
  9914                           ;	BOREN = 0x3, unprogrammed default
  9915  300002                     	org	3145730
  9916  300002  FF                 	db	255
  9917                           
  9918                           ;Config register CONFIG2H @ 0x300003
  9919                           ;	unspecified, using default values
  9920                           ;	Brown Out Reset Voltage selection bits
  9921                           ;	BORV = 0x3, unprogrammed default
  9922                           ;	ZCD Disable bit
  9923                           ;	ZCD = 0x1, unprogrammed default
  9924                           ;	PPSLOCK bit One-Way Set Enable bit
  9925                           ;	PPS1WAY = 0x1, unprogrammed default
  9926                           ;	Stack Full/Underflow Reset Enable bit
  9927                           ;	STVREN = 0x1, unprogrammed default
  9928                           ;	Debugger Enable bit
  9929                           ;	DEBUG = 0x1, unprogrammed default
  9930                           ;	Extended Instruction Set Enable bit
  9931                           ;	XINST = 0x1, unprogrammed default
  9932  300003                     	org	3145731
  9933  300003  FF                 	db	255
  9934                           
  9935                           ;Config register CONFIG3L @ 0x300004
  9936                           ;	WDT Period Select bits
  9937                           ;	WDTCPS = 0x1F, unprogrammed default
  9938                           ;	WDT operating mode
  9939                           ;	WDTE = OFF, WDT Disabled
  9940  300004                     	org	3145732
  9941  300004  9F                 	db	159
  9942                           
  9943                           ;Config register CONFIG3H @ 0x300005
  9944                           ;	unspecified, using default values
  9945                           ;	WDT Window Select bits
  9946                           ;	WDTCWS = 0x7, unprogrammed default
  9947                           ;	WDT input clock selector
  9948                           ;	WDTCCS = 0x7, unprogrammed default
  9949  300005                     	org	3145733
  9950  300005  FF                 	db	255
  9951                           
  9952                           ;Config register CONFIG4L @ 0x300006
  9953                           ;	unspecified, using default values
  9954                           ;	Write Protection Block 0
  9955                           ;	WRT0 = 0x1, unprogrammed default
  9956                           ;	Write Protection Block 1
  9957                           ;	WRT1 = 0x1, unprogrammed default
  9958                           ;	Write Protection Block 2
  9959                           ;	WRT2 = 0x1, unprogrammed default
  9960                           ;	Write Protection Block 3
  9961                           ;	WRT3 = 0x1, unprogrammed default
  9962                           ;	Write Protection Block 3
  9963                           ;	WRT4 = 0x1, unprogrammed default
  9964                           ;	Write Protection Block 3
  9965                           ;	WRT5 = 0x1, unprogrammed default
  9966                           ;	Write Protection Block 3
  9967                           ;	WRT6 = 0x1, unprogrammed default
  9968                           ;	Write Protection Block 3
  9969                           ;	WRT7 = 0x1, unprogrammed default
  9970  300006                     	org	3145734
  9971  300006  FF                 	db	255
  9972                           
  9973                           ;Config register CONFIG4H @ 0x300007
  9974                           ;	unspecified, using default values
  9975                           ;	Configuration Register Write Protection bit
  9976                           ;	WRTC = 0x1, unprogrammed default
  9977                           ;	Boot Block Write Protection bit
  9978                           ;	WRTB = 0x1, unprogrammed default
  9979                           ;	Data EEPROM Write Protection bit
  9980                           ;	WRTD = 0x1, unprogrammed default
  9981                           ;	Scanner Enable bit
  9982                           ;	SCANE = 0x1, unprogrammed default
  9983                           ;	Low Voltage Programming Enable bit
  9984                           ;	LVP = 0x1, unprogrammed default
  9985  300007                     	org	3145735
  9986  300007  FF                 	db	255
  9987                           
  9988                           ;Config register CONFIG5L @ 0x300008
  9989                           ;	unspecified, using default values
  9990                           ;	UserNVM Program Memory Code Protection bit
  9991                           ;	CP = 0x1, unprogrammed default
  9992                           ;	DataNVM Memory Code Protection bit
  9993                           ;	CPD = 0x1, unprogrammed default
  9994  300008                     	org	3145736
  9995  300008  FF                 	db	255
  9996                           
  9997                           ;Config register CONFIG5H @ 0x300009
  9998                           ;	unspecified, using default values
  9999  300009                     	org	3145737
 10000  300009  FF                 	db	255
 10001                           
 10002                           ;Config register CONFIG6L @ 0x30000A
 10003                           ;	unspecified, using default values
 10004                           ;	Table Read Protection Block 0
 10005                           ;	EBTR0 = 0x1, unprogrammed default
 10006                           ;	Table Read Protection Block 1
 10007                           ;	EBTR1 = 0x1, unprogrammed default
 10008                           ;	Table Read Protection Block 2
 10009                           ;	EBTR2 = 0x1, unprogrammed default
 10010                           ;	Table Read Protection Block 3
 10011                           ;	EBTR3 = 0x1, unprogrammed default
 10012                           ;	Table Read Protection Block 4
 10013                           ;	EBTR4 = 0x1, unprogrammed default
 10014                           ;	Table Read Protection Block 5
 10015                           ;	EBTR5 = 0x1, unprogrammed default
 10016                           ;	Table Read Protection Block 6
 10017                           ;	EBTR6 = 0x1, unprogrammed default
 10018                           ;	Table Read Protection Block 7
 10019                           ;	EBTR7 = 0x1, unprogrammed default
 10020  30000A                     	org	3145738
 10021  30000A  FF                 	db	255
 10022                           
 10023                           ;Config register CONFIG6H @ 0x30000B
 10024                           ;	unspecified, using default values
 10025                           ;	Boot Block Table Read Protection bit
 10026                           ;	EBTRB = 0x1, unprogrammed default
 10027  30000B                     	org	3145739
 10028  30000B  FF                 	db	255
 10029                           tosu	equ	0xFFF
 10030                           tosh	equ	0xFFE
 10031                           tosl	equ	0xFFD
 10032                           stkptr	equ	0xFFC
 10033                           pclatu	equ	0xFFB
 10034                           pclath	equ	0xFFA
 10035                           pcl	equ	0xFF9
 10036                           tblptru	equ	0xFF8
 10037                           tblptrh	equ	0xFF7
 10038                           tblptrl	equ	0xFF6
 10039                           tablat	equ	0xFF5
 10040                           prodh	equ	0xFF4
 10041                           prodl	equ	0xFF3
 10042                           indf0	equ	0xFEF
 10043                           postinc0	equ	0xFEE
 10044                           postdec0	equ	0xFED
 10045                           preinc0	equ	0xFEC
 10046                           plusw0	equ	0xFEB
 10047                           fsr0h	equ	0xFEA
 10048                           fsr0l	equ	0xFE9
 10049                           wreg	equ	0xFE8
 10050                           indf1	equ	0xFE7
 10051                           postinc1	equ	0xFE6
 10052                           postdec1	equ	0xFE5
 10053                           preinc1	equ	0xFE4
 10054                           plusw1	equ	0xFE3
 10055                           fsr1h	equ	0xFE2
 10056                           fsr1l	equ	0xFE1
 10057                           bsr	equ	0xFE0
 10058                           indf2	equ	0xFDF
 10059                           postinc2	equ	0xFDE
 10060                           postdec2	equ	0xFDD
 10061                           preinc2	equ	0xFDC
 10062                           plusw2	equ	0xFDB
 10063                           fsr2h	equ	0xFDA
 10064                           fsr2l	equ	0xFD9
 10065                           status	equ	0xFD8

Data Sizes:
    Strings     44
    Constant    0
    Data        93
    BSS         69
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      93
    BANK0           160    122     138
    BANK1           256    141     161
    BANK2           256    102     228
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    time_now$2116	PTR unsigned char  size(2) Largest target is 70
		 -> time_now@daylist(BANK1[70]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(BANK0[7]), dbuf(BANK2[32]), ?_sprintf(BANK1[2]), 
		 -> time_now@daylist(BANK1[70]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(BANK0[7]), dbuf(BANK2[32]), ?_sprintf(BANK1[2]), 
		 -> time_now@daylist(BANK1[70]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[6]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK1[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> main@datebuf(BANK2[40]), main@timebuf(BANK2[40]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_4(CODE[6]), STR_3(CODE[19]), STR_2(CODE[19]), STR_1(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_4(CODE[6]), STR_3(CODE[19]), STR_2(CODE[19]), STR_1(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 19
		 -> STR_4(CODE[6]), STR_3(CODE[19]), STR_2(CODE[19]), STR_1(CODE[5]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK1[2]), time_now@daylist(BANK1[70]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK1[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK1[2]), time_now@daylist(BANK1[70]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(BANK0[7]), ?_sprintf(BANK1[2]), time_now@daylist(BANK1[70]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_3(CODE[19]), STR_2(CODE[19]), STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> main@datebuf(BANK2[40]), main@timebuf(BANK2[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK1[2]), 

    S1701_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 40
		 -> main@datebuf(BANK2[40]), main@timebuf(BANK2[40]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> main@datebuf(BANK2[40]), main@timebuf(BANK2[40]), 

    time_now@datebuf	PTR unsigned char  size(2) Largest target is 40
		 -> main@datebuf(BANK2[40]), 

    time_now@timebuf	PTR unsigned char  size(2) Largest target is 40
		 -> main@timebuf(BANK2[40]), 

    time_now@seconds	PTR unsigned int  size(2) Largest target is 2
		 -> seconds_counter(BANK1[2]), 

    time_now@minutes	PTR unsigned int  size(2) Largest target is 16
		 -> main@start_time(BANK2[16]), 

    time_now@season	PTR unsigned int  size(2) Largest target is 16
		 -> main@start_time(BANK2[16]), 

    time_now@hours	PTR unsigned int  size(2) Largest target is 16
		 -> main@start_time(BANK2[16]), 

    time_now@weekdays	PTR unsigned int  size(2) Largest target is 16
		 -> main@start_time(BANK2[16]), 

    time_now@days	PTR unsigned int  size(2) Largest target is 16
		 -> main@start_time(BANK2[16]), 

    time_now@months	PTR unsigned int  size(2) Largest target is 16
		 -> main@start_time(BANK2[16]), 

    time_now@years	PTR unsigned int  size(2) Largest target is 16
		 -> main@start_time(BANK2[16]), 

    LCD_sendstring@string	PTR unsigned char  size(2) Largest target is 40
		 -> main@datebuf(BANK2[40]), main@timebuf(BANK2[40]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LdrISR in COMRAM

    _printf->i1_vfprintf
    i1_vfprintf->i1_vfpfcnvrt
    i1_vfpfcnvrt->i1_dtoa
    i1_stoa->i1_fputc
    i1_dtoa->i1_pad
    i1_pad->i1_fputs
    i1_fputs->i1_fputc
    i1_abs->i1___aomod
    i1_atoi->i1_isspace

Critical Paths under _TimerISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_time_now
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _LCD_setline->_LCD_sendbyte
    _LCD_sendstring->_LCD_sendbyte
    _LCD_Init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble

Critical Paths under _LdrISR in BANK0

    _LdrISR->_printf
    _printf->i1_vfprintf

Critical Paths under _TimerISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_time_now
    _time_now->_sprintf

Critical Paths under _LdrISR in BANK1

    None.

Critical Paths under _TimerISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LdrISR in BANK2

    None.

Critical Paths under _TimerISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LdrISR in BANK3

    None.

Critical Paths under _TimerISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LdrISR in BANK4

    None.

Critical Paths under _TimerISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LdrISR in BANK5

    None.

Critical Paths under _TimerISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LdrISR in BANK6

    None.

Critical Paths under _TimerISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LdrISR in BANK7

    None.

Critical Paths under _TimerISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LdrISR in BANK8

    None.

Critical Paths under _TimerISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LdrISR in BANK9

    None.

Critical Paths under _TimerISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LdrISR in BANK10

    None.

Critical Paths under _TimerISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LdrISR in BANK11

    None.

Critical Paths under _TimerISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LdrISR in BANK12

    None.

Critical Paths under _TimerISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LdrISR in BANK13

    None.

Critical Paths under _TimerISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               104   104      0   29005
                                            120 BANK0      2     2      0
                                              0 BANK2    102   102      0
                         _Comp1_init
                    _Interrupts_init
                           _LCD_Init
                       _LCD_sendbyte
                     _LCD_sendstring
                        _LCD_setline
                  _LEDarray_disp_bin
                      _LEDarray_init
                        _Timer0_init
                           _time_now
 ---------------------------------------------------------------------------------
 (1) _time_now                                           123   103     20   22499
                                            116 BANK0      4     4      0
                                             22 BANK1    119    99     20
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    10     12   16379
                                              0 BANK1     22    10     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   15482
                                            108 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           45    39      6   14667
                                             84 BANK0     24    18      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2738
                                             30 BANK0     22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6853
                                             48 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4587
                                             37 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     310
                                             21 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2077
                                             30 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1577
                                             21 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             39 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                             21 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                             21 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1845
                                             28 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                             21 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                             21 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     742
                                             21 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4    1012
                                             21 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1321
                                             21 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     369
                                             21 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_setline                                          1     1      0    1269
                                             24 BANK0      1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_sendstring                                       2     0      2    1452
                                             24 BANK0      2     0      2
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0    1331
                                             24 BANK0      2     2      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (2) _LCD_sendbyte                                         2     1      1    1207
                                             22 BANK0      2     1      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (3) _LCD_sendnibble                                       1     1      0     124
                                             21 BANK0      1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (4) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp1_init                                           0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _LdrISR                                             13    13      0    9911
                                              8 BANK0     13    13      0
                             _printf
 ---------------------------------------------------------------------------------
 (11) _printf                                              6     4      2    9911
                                              2 BANK0      6     4      2
                         i1_vfprintf
 ---------------------------------------------------------------------------------
 (12) i1_vfprintf                                          8     2      6    9710
                                             87 COMRAM     6     0      6
                                              0 BANK0      2     2      0
                        i1_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (13) i1_vfpfcnvrt                                        45    39      6    9336
                                             63 COMRAM    24    18      6
                             i1_atoi
                             i1_dtoa
                            i1_fputc
                          i1_isdigit
                             i1_stoa
 ---------------------------------------------------------------------------------
 (14) i1_stoa                                             22    18      4    1742
                                              9 COMRAM    22    18      4
                            i1_fputc
                           i1_strlen
 ---------------------------------------------------------------------------------
 (14) i1_dtoa                                             36    26     10    4433
                                             27 COMRAM    36    26     10
                          i1___aodiv
                          i1___aomod
                              i1_abs
                              i1_pad
 ---------------------------------------------------------------------------------
 (15) i1_pad                                              11     5      6    2552
                                             16 COMRAM    11     5      6
                            i1_fputc
                            i1_fputs
                           i1_strlen
 ---------------------------------------------------------------------------------
 (15) i1_strlen                                            4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) i1_fputs                                             7     3      4    1087
                                              9 COMRAM     7     3      4
                            i1_fputc
 ---------------------------------------------------------------------------------
 (15) i1_fputc                                             9     5      4     807
                                              0 COMRAM     9     5      4
                            i1_putch
 ---------------------------------------------------------------------------------
 (16) i1_putch                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (15) i1_abs                                               4     2      2     128
                                             18 COMRAM     4     2      2
                          i1___aomod (ARG)
 ---------------------------------------------------------------------------------
 (15) i1___aomod                                          18     2     16     503
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (15) i1___aodiv                                          26    10     16     515
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (14) i1_atoi                                             15    13      2    1045
                                              7 COMRAM    15    13      2
                           i1___wmul
                          i1_isdigit
                          i1_isspace
 ---------------------------------------------------------------------------------
 (15) i1_isspace                                           7     5      2     134
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (14) i1_isdigit                                           6     4      2     101
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (15) i1___wmul                                            6     2      4     302
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (19) _TimerISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Comp1_init
     _DAC_init
   _Interrupts_init
   _LCD_Init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
       _LCD_E_TOG
   _LCD_sendbyte
     _LCD_sendnibble
       _LCD_E_TOG
   _LCD_sendstring
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
   _LCD_setline
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
   _LEDarray_disp_bin
   _LEDarray_init
   _Timer0_init
   _time_now
     ___lwdiv
     ___lwmod
     ___wmul
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _stoa
             _fputc
               _putch
             _strlen

 _LdrISR (ROOT)
   _printf
     i1_vfprintf
       i1_vfpfcnvrt
         i1_atoi
           i1___wmul
           i1_isdigit
           i1_isspace
         i1_dtoa
           i1___aodiv
           i1___aomod
           i1_abs
             i1___aomod (ARG)
           i1_pad
             i1_fputc
               i1_putch
             i1_fputs
               i1_fputc
                 i1_putch
             i1_strlen
         i1_fputc
           i1_putch
         i1_isdigit
         i1_stoa
           i1_fputc
             i1_putch
           i1_strlen

 _TimerISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     66      E4      10       89.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     8D      A1       7       62.9%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7A      8A       5       86.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5D       1       98.9%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     26C       8        0.0%
DATA                 0      0     26C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 19 19:19:55 2021

                        l30 3560                          l22 3510                          l24 3526  
                        l33 3AA4                          l41 38E0                          l26 353C  
                        l19 3BC8                          l28 3552                          l36 33F2  
                        l47 3A08                          l80 3116                          l81 312A  
                        l90 3184                          l82 312C                          l74 3B42  
                        l91 3198                          l83 3140                          l92 319A  
                        l84 3142                          l93 31AE                          l85 3156  
                        l77 30FE                          l86 3158                          l78 3100  
                        l95 31B0                          l87 316C                          l79 3114  
                        l88 316E                          l89 3182                          bsr 000FE0  
       __end_ofi1_vfpfcnvrt 1786         ___wmul@multiplicand 0077           time_now@cur_month 018B  
          i1___wmul@product 0005           ??_Interrupts_init 0075                         l114 3B98  
                       l117 3AF4                         l134 1370                         l242 3ACC  
                       l163 3BAA                         l236 3B84                         l356 2978  
                       l369 2DEC                         l740 34F4                         l733 34EC  
                       l750 362C                         l743 3624                         l920 36E6  
                       l951 3066                         l954 30AA                         l962 1C34  
                       l956 30E6                         l964 1C3C                         l982 1E76  
                       l991 26F0                         l989 26E8                         _abs 3860  
                       _pad 301E                         _sun 00E2                         wreg 000FE8  
               main@datebuf 0228                 i1_atoi$1831 0010                 i1_atoi$1832 0014  
               i1_atoi$1833 0012                        l1000 279C                        l1001 27E6  
                      l1005 27EE                        l1041 35BE                        l1106 301C  
                      l1114 37D4                        l1130 3996                        l1034 1B92  
                      l1042 35C6                        l1019 1880                        ?_abs 0087  
                      l1124 3BD2                        l1046 3898                        l1080 24BE  
                      l1049 38A0                        l1083 39D0                        l1091 373A  
                      l1077 24B6                        l4000 1BB4                        l4010 1C28  
                      l4002 1BDE                        l4020 1C72                        l4012 1C44  
                      l4004 1BFE                        l4100 27C8                        l4110 2356  
                      l4102 2318                        l4030 1D12                        l4022 1C7C  
                      l4014 1C56                        l4006 1C0C                        l4120 23B0  
                      l4112 2390                        l4104 232E                        l4040 1DE4  
                      l4024 1C82                        l4032 1D76                        l4016 1C64  
                      l4008 1C0E                        l5000 22C4                        l4130 2434  
                      l4122 23B8                        l4114 2394                        l4106 2332  
                      l4050 1E2A                        l4034 1D92                        l4042 1DF2  
                      l4026 1D06                        l4018 1C6A                        l5010 22F0  
                      l5002 22D0                        l4124 23C0                        l4108 2336  
                      l4052 1E36                        l4044 1E04                        l4036 1DB0  
                      l4028 1D0C                        l4060 2664                        l4300 17FE  
                      l5012 22F6                        l5004 22D8                        l4134 2476  
                      l4126 23F8                        l4118 239A                        l4054 1E3E  
                      l4046 1E12                        l4038 1DCA                        l4070 26AE  
                      l4062 2676                        l5014 2304                        l5006 22DC  
                      l4136 2488                        l4048 1E18                        l4056 1E4E  
                      l4080 2726                        l4072 26B6                        l4064 267E  
                      l4320 18B8                        l4312 1816                        l4304 1804  
                      l5008 22E2                        l4138 249A                        l4090 277A  
                      l4082 272C                        l4074 26C6                        l4066 2692  
                      l4330 1938                        l4322 18EE                        l4314 186E  
                      l4092 277E                        l4084 274A                        l4068 269A  
                      l4340 19E6                        l4324 18FC                        l4316 188E  
                      l5116 1840                        l4308 180A                        l5118 23E2  
                      l4086 2756                        l4078 2712                        l4350 1AC4  
                      l4342 1A2E                        l4334 1984                        l4326 190A  
                      l4318 1890                        l4272 3BBC                        l4096 27AE  
                      l4088 2774                        l4360 1B2E                        l4328 192A  
                      l4336 1996                        l4280 17AE                        l4274 3BBE  
                      l4530 34FA                        l3810 2F78                        l4098 27C2  
                      l4354 1AE4                        l4346 1A66                        l4338 19BE  
                      l4290 17E0                        l4282 17BC                        l4370 1B56  
                      l4276 3BC6                        l4540 3536                        l4532 350A  
                      l4700 34C0                        l3812 2F82                        l3820 378E  
                      l4372 1B80                        l4356 1B0C                        l4364 1B3C  
                      l4348 1A8E                        l4292 17F2                        l4284 17CE  
                      l4542 353E                        l4534 3512                        l4702 34D6  
                      l4710 35C8                        l3910 2CC0                        l3902 2C88  
                      l3814 2FA0                        l3806 2F52                        l3822 379C  
                      l3830 396A                        l4366 1B4A                        l4358 1B1A  
                      l4286 17D2                        l4278 1786                        l4550 3562  
                      ?_pad 0085                        l4800 3ACE                        l4544 354C  
                      l4536 3520                        l4704 34DE                        l4720 3610  
                      l4712 35DC                        l3920 2D28                        l3912 2CCE  
                      l3904 2C8E                        l3816 2FD6                        l3808 2F66  
                      l3824 37AE                        l3832 3970                        l4296 17F8  
                      l4288 17DE                        l4552 356A                        l4810 3AEA  
                      l4802 3AD4                        l4546 3554                        l4538 3528  
                      l4706 34E0                        l4722 3618                        l4714 35E4  
                      l3922 2D36                        l3930 2D9C                        l3914 2CEE  
                      l3906 2C9C                        l3826 37B4                        l3834 3988  
                      l4554 3578                        l4812 3AEC                        l4804 3AE4  
                      l4548 3558                        l4740 3378                        l4708 34E6  
                      l4724 361E                        l4716 35EC                        l3852 3AA6  
                      l3860 27F6                        l3932 2DAC                        l3924 2D64  
                      l3916 2D0C                        l3908 2CBC                        l3828 395E  
                      l3940 302E                        l4556 359E                        l4900 12EC  
                      l4820 0E76                        l4814 3AF0                        l4806 3AE6  
                      l4750 33A8                        l4742 3380                        l4734 3342  
                      l4718 35FA                        l3854 3AC4                        l3870 2856  
                      l3862 2804                        l3934 2DCC                        l3926 2D84  
                      l3918 2D14                        l3950 3086                        l3942 3042  
                      l4670 3694                        l4902 1360                        l4830 0EA2  
                      l4822 0E82                        l4808 3AE8                        l4664 3A7C  
                      l4760 33E6                        l4752 33B4                        l4744 338C  
                      l4736 335A                        l4920 3B82                        l3880 28A0  
                      l3872 285A                        l3864 2824                        l3928 2D96  
                      l3960 3860                        l3952 308C                        l3944 3052  
                      l4672 36A6                        l4840 0ECA                        l4832 0EAA  
                      l4824 0E8A                        l4816 0E2E                        l4682 3B86  
                      l4906 3B9A                        l4666 3A88                        l4754 33BC  
                      l4746 3394                        l4738 3372                        l4770 39D2  
                      l4762 38A6                        l4914 3B6A                        l4690 348A  
                      l3970 36EE                        l3890 2910                        l3882 28AE  
                      l3874 2866                        l3866 2828                        l3858 27F0  
                      l3962 387C                        l3954 30B8                        l3946 305E  
                      l3938 301E                        l4674 36AE                        l4850 0F56  
                      l4842 0ED2                        l4834 0EB2                        l4826 0E92  
                      l4818 0E6E                        l4684 3B8C                        l4668 3A9C  
                      l4756 33C8                        l4748 33A0                        l4772 39D6  
                      l4764 38B8                        l4780 30E8                        l4916 3B72  
                      l4692 349C                        l3964 3998                        l3972 3702  
                      l3892 2922                        l3884 28C0                        l3876 2884  
                      l3868 2836                        l3956 30CC                        l3948 3072  
                      l4676 36B6                        l4860 0FCA                        l4852 0F70  
                      l4844 0EFE                        l4836 0EBA                        l4828 0E9A  
                      l4686 3B96                        l4758 33DA                        l4774 39EA  
                      l4766 38C2                        l4790 3150                        l4782 30F8  
                      l4918 3B78                        l4694 34A4                        l3974 3730  
                      l3886 28EE                        l3878 288C                        l3894 2928  
                      l4678 36D4                        l4862 0FE6                        l4870 103A  
                      l4854 0F80                        l4846 0F1A                        l4838 0EC2  
                      l4950 2160                        l4776 39F0                        l4768 38D6  
                      l4792 3166                        l4784 310E                        l4696 34AC  
                      l4688 3480                        l3976 3734                        l3968 36E8  
                      l3896 2938                        l3888 290E                        l4880 1120  
                      l4872 1068                        l4864 1002                        l4848 0F3A  
                      l4856 0F8E                        l4960 2172                        l4952 2164  
                      l4794 317C                        l4786 3124                        l4778 3B1E  
                      l4698 34BA                        l3898 2958                        l4890 1206  
                      l4882 114E                        l4874 1096                        l4866 101C  
                      l4858 0FAA                        l4970 2192                        l4962 2176  
                      l4954 2168                        l4796 3192                        l4788 313A  
                      l4892 1234                        l4884 117C                        l4876 10C4  
                      l4868 102C                        l4980 21DE                        l4972 219A  
                      l4964 2178                        l4956 216C                        l4948 215C  
                      l4798 31A8                        l3998 1B94                        l4894 1262  
                      l4886 11AA                        l4878 10F2                        l4990 2278  
                      l4982 21EE                        l4974 21A4                        l4966 217A  
                      l4958 2170                        l4896 1274                        l4888 11D8  
                      l4992 228A                        l4984 2200                        l4976 21A8  
                      l4968 2180                        l4898 12BA                        l4994 22A0  
                      l4986 2214                        l4978 21C8                        l4996 22B2  
                      l4988 2272                        l4998 22B8                        STR_2 0E01  
                      STR_3 0E14                        STR_4 0E27                        u4010 2804  
                      u4011 2800                        u4020 2836                        u4100 2D0C  
                      u4021 2832                        u4101 2D08                        u4110 2D36  
                      u4031 2860                        u4111 2D32                        u4200 39CC  
                      u4040 2884                        u4120 2D64                        u4041 2880  
                      u4121 2D60                        u4210 3702                        u4050 28AE  
                      u4130 2DAC                        u4211 36FE                        u4051 28AA  
                      u4131 2DA8                        u4220 3730                        u4060 28EE  
                      u4140 302E                        u4300 1C56                        u4221 372C  
                      u4061 28EA                        u4141 302A                        u4301 1C52  
                      u4070 2938                        u4150 3052                        u4310 1C64  
                      u4071 2934                        u4151 304E                        u4311 1C60  
                      u4080 2C9C                        u4160 30AA                        u4320 1D92  
                      u4081 2C98                        u4161 30A6                        u4321 1D8E  
                      u4401 266E                        u5210 350A                        u4090 2CCE  
                      u4170 30B8                        u4330 1DB0                        u4250 1BC6  
                      u4410 2692                        u5211 3506                        u4091 2CCA  
                      u4171 30B4                        u4331 1DAC                        u4251 1BC0  
                      u4411 268E                        u5220 3520                        u4500 2390  
                      u4180 387C                        u4340 1DCA                        u4260 1BC8  
                      u4420 26C6                        u5221 351C                        u4501 238C  
                      u4181 3878                        u4341 1DC6                        u4421 26C2  
                      u5230 3536                        u4190 39CA                        u4510 23AC  
                      u4350 1DE4                        u4270 1BDE                        u4430 26E4  
                      u5231 3532                        u4191 39C4                        u4511 23A8  
                      u4351 1DE0                        u4271 1BDA                        u4431 26E0  
                      u5240 354C                        u5400 34BA                        u4520 2470  
                      u4360 1DF2                        u4280 1C0C                        u4440 270E  
                      u5241 3548                        u5401 34B6                        u4521 246A  
                      u4361 1DEE                        u4281 1C08                        u4441 270A  
                      u5410 34D6                        u4530 2472                        u4370 1E04  
                      u4290 1C28                        u4450 274A                        u5250 35BE  
                      u5411 34D2                        u4371 1E00                        u4291 1C24  
                      u4451 2746                        u5251 35BA                        u5500 310E  
                      u5420 35DC                        u4540 2488                        u4380 1E12  
                      u4460 279C                        u5501 310A                        u5421 35D8  
                      u4541 2484                        u4381 1E0E                        u4461 2798  
                      u5510 3124                        u5430 35FA                        u4550 249A  
                      u3910 2F66                        u4390 1E2A                        u4470 27AA  
                      u5511 3120                        u5431 35F6                        u4551 2496  
                      u3911 2F62                        u4391 1E26                        u4471 27A6  
                      u5520 313A                        u5440 3610                        u3920 2F78  
                      u4480 27E6                        u4800 188E                        u5521 3136  
                      u5441 360C                        u3921 2F74                        u4481 27E2  
                      u4801 188A                        u5601 0E68                        u5530 3150  
                      u4490 2356                        u3930 2FA0                        u4810 18B8  
                      u5610 0F1A                        u5531 314C                        u4491 2352  
                      u3931 2F9C                        u4811 18B4                        u5611 0F16  
                      u5460 38B8                        u5540 3166                        u3940 2FD6  
                      u4820 18FC                        u5620 0F3A                        u5461 38B4  
                      u5541 3162                        u3941 2FD2                        u4821 18F8  
                      u5701 126C                        u5621 0F36                        u5470 38D6  
                      u5550 317C                        u5390 349C                        u3950 37D4  
                      u4830 197E                        u5630 0F56                        u5471 38D2  
                      u5551 3178                        u5391 3498                        u3951 37D0  
                      u4831 1978                        u5631 0F52                        u5480 3A08  
                      u5560 3192                        u3960 3988                        u4840 1980  
                      u5640 0F70                        u5800 228A                        u5385 3A86  
                      u5481 3A04                        u5561 318E                        u3961 3984  
                      u5641 0F6C                        u5801 2286                        u5386 3A88  
                      u5570 31A8                        u5490 30F8                        u4850 1996  
                      u5650 0FAA                        u5810 22A0                        u5571 31A4  
                      u5491 30F4                        u4851 1992                        u5651 0FA6  
                      u5811 229C                        u4860 19BE                        u4780 17AE  
                      u5660 0FCA                        u5580 0E5C                        u5820 22B2  
                      u4861 19BA                        u4781 17AA                        u5661 0FC6  
                      u5581 0E56                        u5821 22AE                        u4870 19E6  
                      u4790 1880                        u5670 0FE6                        u5590 0E5E  
                      u4871 19E2                        u4791 187C                        u5671 0FE2  
                      u4880 1A8E                        u5680 1002                        u4881 1A8A  
                      u5681 0FFE                        u5761 218A                        u4890 1B0C  
                      u5690 101C                        u5770 21C8                        u5907 3A9E  
                      u4891 1B08                        u5691 1018                        u5835 22C2  
                      u5771 21C4                        u5836 22C4                        u5780 21DE  
                      u5917 355A                        u5781 21DA                        u5790 21EE  
                      u5927 3BC0                        u5847 3366                        u5791 21EA  
                      u5857 337A                        u5867 338E                        u5877 33A2  
                      u5887 33B6                        u5897 33D0                 i1_dtoa$1784 002E  
        __size_of_LCD_E_TOG 000E                        abs@a 0087                        _dbuf 02C4  
            i1___aodiv@sign 0012                        _atoi 2318                        _main 215C  
                      _dtoa 1B94                        _prec 00DE                        _nout 00DA  
                      pad@i 008C                        pad@p 0089                        fsr1h 000FE2  
                      fsr2h 000FDA                        indf2 000FDF                        fsr1l 000FE1  
                      pad@w 008E                        fsr2l 000FD9                        _stoa 2664  
                      btemp 005E                 main@timebuf 0200                ?_LCD_setline 0001  
                      prodh 000FF4                        prodl 000FF3                        start 00DA  
           __end_ofi1_fputc 327C             __end_ofi1_fputs 3860            __end_of_DAC_init 3B9A  
           __end_ofi1_putch 3BD6                ___param_bank 000000              i1___aomod@sign 0012  
                i1_vfprintf 362E          i1___aomod@dividend 0001                  _Comp1_init 3ACE  
                     ??_abs 0089                       ??_pad 008B            __end_of_LCD_Init 33F4  
             i1vfpfcnvrt@ap 0044               i1vfpfcnvrt@cp 0052               i1vfpfcnvrt@fp 0040  
             i1vfpfcnvrt@ll 004A             __end_of___aodiv 297A                       ?_atoi 007C  
                     ?_main 0001                       ?_dtoa 0090             __end_of___aomod 2DEE  
                     ?_stoa 007E             __end_of___lwdiv 34F6                       i1l242 3B68  
                     i1l170 00A2             __end_of___lwmod 362E                       i1l356 2B00  
                     i1l369 2F50                       i2l177 395A                       i1l951 32C2  
                     i1l954 3304                       i1l962 1F18                       i1l956 3340  
                     i1l964 1F20                       i1l982 215A                       i1l991 2B8A  
                     i1l989 2B82                vfpfcnvrt@fmt 00B6                       _TMR0H 000FD4  
                     _TMR0L 000FD3          time_now@month_days 0172                       i1_abs 38E2  
                     i1_pad 327C                  i1isdigit@c 0001                main@hour_now 0254  
                     _flags 00E0                       _fputc 2F52                       _fputs 378E  
           __end_of_isdigit 39D2                       atoi@n 0089                       pad@fp 0085  
                     atoi@s 007C                       _width 00DC                       _putch 3BD2  
                     dtoa@d 0092                       dtoa@i 00B2                       dtoa@n 00AA  
                     dtoa@p 00A4                       dtoa@s 00A8                       dtoa@w 00A6  
           __end_of_isspace 373C                  i1isspace@c 0001               ?_LCD_sendbyte 0076  
              main@prev_sec 0250                main@prev_sun 0252                       tablat 000FF5  
          __end_ofi1___wmul 3B6A                       plusw1 000FE3                       plusw2 000FDB  
                     stoa@i 008A                       stoa@l 0092                       stoa@p 0090  
                     stoa@s 0080                       stoa@w 008C                       ttemp5 005F  
                     ttemp6 0062                       ttemp7 0066                       status 000FD8  
       i1___wmul@multiplier 0001                       wtemp8 005F             __end_of_sprintf 36E8  
        __size_ofi1___aodiv 0188          __size_ofi1___aomod 0164     __size_of_LCD_sendnibble 006C  
          __end_ofi1_strlen 3A78     __size_of_LCD_sendstring 0038                 i1_vfpfcnvrt 1372  
           __initialization 33F4                __end_of_atoi 24C0                __end_of_main 2318  
              __end_of_dtoa 1E78               i1vfprintf@fmt 005A                  i1stoa@nuls 000F  
              __end_of_stoa 27F0          __size_ofi1_isdigit 0038          __size_ofi1_isspace 0052  
         __end_of_LCD_E_TOG 3BCA                      ??_atoi 007E                      ??_main 00D8  
                    ??_dtoa 009A                      ??_stoa 0082               __activetblptr 000003  
                    ?i1_abs 0013            __end_of_TimerISR 395E                      ?i1_pad 0011  
    __size_of_LEDarray_init 0026              i1vfpfcnvrt@fmt 0042                      ?_fputc 0075  
                    ?_fputs 007E              ??_LCD_sendbyte 0077                      ?_putch 0001  
                    i1l1000 2C34                      i1l1001 2C7E                      i1l1005 2C86  
                    i1l1041 368A                      i1l1121 3B1C                      i1l1106 327A  
                    i1l1114 385E                      i1l1130 3A76                      i1l1034 1784  
                    i1l1042 3692                      i1l1019 1476                      i1l1124 3BD4  
                    i1l1046 3918                      i1l1080 2662                      i1l1049 3920  
                    i1l1083 3A40                      i1l1091 378C                      i1l1077 265A  
                    i1l4200 2E20                      i1l4210 2E78                      i1l4202 2E24  
                    i1l4220 2EFA                      i1l4212 2E8C                      i1l4204 2E32  
                    i1l4150 297A                      i1l4214 2E9A                      i1l4222 2F00  
                    i1l4206 2E52                      i1l4230 327C                      i1l4144 3B44  
                    i1l4160 29BE                      i1l4152 297E                      i1l4224 2F10  
                    i1l4216 2EC8                      i1l4208 2E70                      i1l4240 32CE  
                    i1l4232 328C                      i1l4400 1F3A                      i1l5120 1436  
                    i1l4146 3B60                      i1l5122 2588                      i1l4170 2A14  
                    i1l4162 29DE                      i1l4154 298C                      i1l4226 2F30  
                    i1l4218 2EE8                      i1l4242 32E2                      i1l4234 32A0  
                    i1l4410 1F66                      i1l4402 1F48                      i1l4260 373C  
                    i1l4500 253A                      i1l4180 2A96                      i1l4172 2A28  
                    i1l4164 29E2                      i1l4156 29AC                      i1l4252 38E2  
                    i1l4244 32E6                      i1l4236 32AE                      i1l4420 2072  
                    i1l4412 1FE8                      i1l4404 1F4E                      i1l4262 3740  
                    i1l4510 2566                      i1l4190 2AE0                      i1l4182 2A98  
                    i1l4174 2A36                      i1l4166 29EE                      i1l4158 29B0  
                    i1l4254 38FC                      i1l4246 3314                      i1l4238 32BA  
                    i1l4430 20E6                      i1l4422 2090                      i1l4414 1FEE  
                    i1l4406 1F56                      i1l4256 3A0A                      i1l4264 3754  
                    i1l4520 261A                      i1l4512 259E                      i1l4504 2540  
                    i1l4184 2AAA                      i1l4176 2A48                      i1l4168 2A0C  
                    i1l4248 3328                      i1l4440 2122                      i1l4432 20F6  
                    i1l4424 20AA                      i1l4416 1FF4                      i1l4408 1F60  
                    i1l4600 14B0                      i1l4266 3782                      i1l4522 262C  
                    i1l4506 2556                      i1l4178 2A76                      i1l4186 2AB0  
                    i1l4194 2DEE                      i1l4434 20FC                      i1l4442 2132  
                    i1l4426 20C4                      i1l4418 2058                      i1l4450 2B1C  
                    i1l4610 1530                      i1l4602 14E6                      i1l4268 3786  
                    i1l4524 263E                      i1l4516 25D8                      i1l4508 255E  
                    i1l4188 2AC0                      i1l4196 2DF2                      i1l4436 210E  
                    i1l4428 20D4                      i1l4460 2B60                      i1l4452 2B2E  
                    i1l4620 15DC                      i1l4604 14F4                      i1l4198 2E00  
                    i1l4438 211A                      i1l4390 1EE0                      i1l4470 2BE4  
                    i1l4454 2B36                      i1l4446 2B02                      i1l4630 16BA  
                    i1l4622 1624                      i1l4614 157A                      i1l4606 1502  
                    i1l3840 31C4                      i1l4392 1EF0                      i1l4384 1E78  
                    i1l4472 2BF0                      i1l4464 2BAE                      i1l4456 2B4A  
                    i1l4448 2B14                      i1l4640 1724                      i1l4608 1522  
                    i1l4616 158C                      i1l4560 139A                      i1l4490 24D4  
                    i1l3842 31D6                      i1l4394 1EF2                      i1l4386 1E98  
                    i1l4482 2C48                      i1l4474 2C0E                      i1l4466 2BC2  
                    i1l4458 2B52                      i1l4634 16DA                      i1l4626 165C  
                    i1l4618 15B4                      i1l4570 13CE                      i1l4562 13A8  
                    i1l4650 174A                      i1l4730 3644                      i1l4492 24D8  
                    i1l3844 31E0                      i1l4396 1F0C                      i1l4388 1EC0  
                    i1l4484 2C5C                      i1l4476 2C12                      i1l4468 2BC6  
                    i1l4652 1772                      i1l4636 1702                      i1l4644 1730  
                    i1l4628 1684                      i1l4580 13F0                      i1l4572 13E0  
                    i1l4564 13BA                      i1l4732 366A                      i1l4494 24DC  
                    i1l3846 31FE                      i1l3838 31B2                      i1l4398 1F28  
                    i1l4486 2C60                      i1l4478 2C16                      i1l4646 173E  
                    i1l4638 1710                      i1l4566 13BE                      i1l4558 1372  
                    i1l4726 362E                      i1l4910 3B00                      i1l4496 24FC  
                    i1l4488 24C0                      i1l3848 3234                      i1l4592 140C  
                    i1l4584 13F8                      i1l4576 13E8                      i1l4568 13CA  
                    i1l4728 3636                      i1l4498 2536                      i1l4594 1464  
                    i1l3980 381C                      i1l4596 1486                      i1l4588 1400  
                    i1l4908 3AF6                      i1l4940 006C                      i1l3982 3828  
                    i1l3990 3A4E                      i1l4598 1488                      i1l4942 0070  
                    i1l3984 383A                      i1l3992 3A52                      i1l4944 0088  
                    i1l4936 004E                      i1l3986 383E                      i1l3994 3A6A  
                    i1l4946 0098                      i1l4938 005E                      i1l3988 3A42  
                    i2l3630 393E                      i2l3622 3922                      i2l3632 3942  
                    i2l3624 3932                      i2l3634 3954                      i2l3626 3934  
                    i2l3628 393A                   ??i1_fputc 0005                   ??i1_fputs 000E  
                 ??i1_putch 0001               vfpfcnvrt@done 00C8                      i1abs@a 0013  
          i1_vfpfcnvrt$1810 0056                      i1_atoi 24C0           _LEDarray_disp_bin 30E8  
                    i1_dtoa 1E78                      i1pad@i 0018                      i1pad@p 0015  
                    i1pad@w 001A                      i1_stoa 2B02                      _LdrISR 0018  
        ?_LEDarray_disp_bin 0075               ??_Timer0_init 0075                vfprintf@cfmt 00D2  
               ?i1_vfprintf 0058                   ??___aodiv 0085                   ??___aomod 0085  
                    ___wmul 3AA6                 ?_Comp1_init 0001                   ??___lwdiv 0079  
                 ??___lwmod 0079         ??_LEDarray_disp_bin 0077                      clear_0 345A  
                    clear_1 3470                      _printf 3AF6                      pad@buf 0087  
                    dtoa@fp 0090                      _strlen 395E           __end_ofi1___aodiv 2B02  
         __end_ofi1___aomod 2F52                      fputc@c 0075                      fputs@c 0082  
                    fputs@i 0083                      fputs@s 007E                   ??_isdigit 0077  
          __end_of_time_now 1372                __mediumconst 0000                   ??_isspace 0077  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
                    stoa@cp 008E                      stoa@fp 007E                      putch@c 0001  
                 ?_DAC_init 0001            __end_of_vfprintf 35C8                   ??_sprintf 00D4  
         __end_ofi1_isdigit 3A42           __end_ofi1_isspace 378E   __end_of_LEDarray_disp_bin 31B2  
                __accesstop 0060     __end_of__initialization 3476                   ?_LCD_Init 0001  
             ___rparam_used 000001               _LEDarray_init 3B1E               __end_ofi1_abs 3922  
           _Interrupts_init 3B9A               __end_ofi1_pad 3342        __size_of_LCD_setline 0040  
            __pcstackCOMRAM 0001                __pidataBANK0 3BCA                __pidataBANK1 3BAC  
              __pidataBANK2 37D6              i1vfprintf@cfmt 0060               __end_of_fputc 301E  
             __end_of_fputs 37D6               __end_of_putch 3BD4         __end_of_Timer0_init 3B86  
                 ?i1___wmul 0001                     ??i1_abs 0015                     ??i1_pad 0017  
                 ?i1_strlen 0001                  ??_DAC_init 0075                     ??_fputc 0079  
                   ??_fputs 0082         __size_ofi1_vfprintf 0066                     ??_putch 0075  
       __size_of_Comp1_init 0028                  __pbssBANK0 00DA                  __pbssBANK1 019D  
                __pbssBANK2 02AC                  ??_LCD_Init 0078              _LCD_sendnibble 34F6  
                   ?i1_atoi 0008                     ?i1_dtoa 001C                     ?i1_stoa 000A  
            ?_LEDarray_init 0001                     ?_LdrISR 0001              _LCD_sendstring 39D2  
           i1vfpfcnvrt@done 0054                   ?_TimerISR 0001                     ?___wmul 0075  
      __end_of_LCD_sendbyte 3AA6                     ?_printf 0062                  ??i1___wmul 0005  
                   ?_strlen 0075             _seconds_counter 019F          __size_of_vfpfcnvrt 040E  
                ??i1_strlen 0003      __end_of_LCD_sendnibble 3562                     i1_fputc 31B2  
                   i1_fputs 381C  __size_of_LEDarray_disp_bin 00CA     __end_of_Interrupts_init 3BAC  
                   i1atoi@n 0015                     i1pad@fp 0011                     i1atoi@s 0008  
                   i1_putch 3BD4                     i1dtoa@d 001E                     i1dtoa@i 003E  
                   i1dtoa@n 0036                     i1dtoa@p 0030                     i1dtoa@s 0034  
                   i1dtoa@w 0032      __end_of_LCD_sendstring 3A0A             __size_ofi1_atoi 01A4  
                   i1stoa@i 0016                     i1stoa@l 001E                     i1stoa@p 001C  
                   i1stoa@s 000C             __size_ofi1_dtoa 02E4                     i1stoa@w 0018  
           __size_ofi1_stoa 0186             __size_of_LdrISR 00C2                     __Hparam 0000  
              ?i1_vfpfcnvrt 0040                     __Lparam 0000                  ??_TimerISR 0001  
               _Timer0_init 3B6A                   ?_time_now 0116                     ___aodiv 27F0  
                   ___aomod 2C88             __size_of___wmul 0028           i1___aodiv@divisor 0009  
                   ___lwdiv 3480                     ___lwmod 35C8                   ?_vfprintf 00CC  
              __psmallconst 0E00           i1___aodiv@counter 0011                     __pcinit 33F4  
                   __ramtop 0E00                     __ptext0 215C                     __ptext1 0E2E  
                   __ptext2 3694                     __ptext3 3562                     __ptext4 1786  
                   __ptext5 2664                     __ptext6 1B94                     __ptext7 301E  
                   __ptext8 395E                     __ptext9 378E             __size_of_printf 0028  
           __size_of_strlen 003A                __size_of_abs 0042                __size_of_pad 00CA  
                   _isdigit 3998                     _isspace 36E8                   _LCD_E_TOG 3BBC  
           LCD_setline@line 0078                     atoi@neg 0082                     _sprintf 3694  
            __pintcode_body 3922        end_of_initialization 3476             ?_LCD_sendnibble 0001  
                   fputc@fp 0077             ??_LEDarray_init 0075                     int_func 3922  
                   fputs@fp 0080             ?_LCD_sendstring 0078                ??i1_vfprintf 005E  
         __end_of_vfpfcnvrt 1B94                  ??_time_now 00D4                     postdec1 000FE5  
                   postdec2 000FDD                ??_Comp1_init 0075                     postinc0 000FEE  
                   postinc1 000FE6                     postinc2 000FDE                  main@F14549 018D  
                ??_vfprintf 00D2       i1___wmul@multiplicand 0003              main@start_time 0256  
                   strlen@a 0077                     strlen@s 0075                  ?_LCD_E_TOG 0001  
                 _TRISAbits 000F81                   _TRISBbits 000F82                   _TRISCbits 000F83  
                 _TRISEbits 000F85                   _TRISFbits 000F86                   _TRISGbits 000F87  
                 _TRISHbits 000F88                   i1___aodiv 297A                   i1___aomod 2DEE  
        __end_ofi1_vfprintf 3694           __size_of_DAC_init 0014          __end_of_Comp1_init 3AF6  
               _CM1CON0bits 000ED0                 _CM1CON1bits 000ED1            ?_Interrupts_init 0001  
                 i1_isdigit 3A0A                   i1_isspace 373C            time_now@weekdays 0120  
         __size_of_LCD_Init 00B2              __end_ofi1_atoi 2664              __end_ofi1_dtoa 215C  
     __size_of_LCD_sendbyte 002E              __end_ofi1_stoa 2C88              __end_of_LdrISR 00DA  
                 i1atoi@neg 000E           i1___aomod@divisor 0009           i1___aomod@counter 0011  
               vfpfcnvrt@ap 00B8                 vfpfcnvrt@cp 00C6                 vfpfcnvrt@fp 00B4  
               vfpfcnvrt@ll 00BE              __end_of___wmul 3ACE                   i1fputc@fp 0003  
      LCD_sendnibble@number 0075                   i1fputs@fp 000C              __end_of_printf 3B1E  
            __end_of_strlen 3998         start_initialization 33F4           __size_ofi1___wmul 0026  
               __end_of_abs 38A2                  ?i1___aodiv 0001                  ?i1___aomod 0001  
              i1vfprintf@ap 005C                 __end_of_pad 30E8                i1vfprintf@fp 0058  
                 i1strlen@a 0003                   i1strlen@s 0001           __size_ofi1_strlen 0036  
              _LCD_sendbyte 3A78               _seconds_check 019D                    ??i1_atoi 000A  
                ?i1_isdigit 0001               ??_LCD_setline 0078                    ??i1_dtoa 0026  
                  ??i1_stoa 000E                    ??_LdrISR 0068                  ?i1_isspace 0001  
               vfprintf@fmt 00CE        LCD_sendstring@string 0078                    ??___wmul 0079  
      __size_ofi1_vfpfcnvrt 0414           __size_of_TimerISR 3956                 __pdataBANK0 00E3  
               __pdataBANK1 018D                 __pdataBANK2 0266                    ??_printf 005E  
                  ??_strlen 0077                 ??_LCD_E_TOG 0075               __pcstackBANK0 0060  
             __pcstackBANK1 0100               __pcstackBANK2 0200            ___aodiv@dividend 0075  
                  ?i1_fputc 0001                    ?i1_fputs 000A                    ?i1_putch 0001  
                 _atoi$1831 0084                   _atoi$1832 0088                   _atoi$1833 0086  
                 _main$1175 0253            ___lwdiv@dividend 0075                   _dtoa$1784 00A2  
              ?_Timer0_init 0001                   __pintcode 0008                    ?___aodiv 0075  
                  ?___aomod 0075            ___aodiv@quotient 0087         __end_of_LCD_setline 38E2  
                  ?___lwdiv 0075                    ?___lwmod 0075           __size_of_time_now 0544  
               __pintcodelo 0018           __size_of_vfprintf 0066                 __smallconst 0E00  
                  ?_isdigit 0075              __size_ofi1_abs 0040              __size_ofi1_pad 00C6  
                  ?_isspace 0075            ??_LCD_sendnibble 0075                 ??i1___aodiv 0011  
               ??i1___aomod 0011                    _DAC_init 3B86            ___lwdiv@quotient 007A  
          ??_LCD_sendstring 007A                    ?_sprintf 0100              __size_of_fputc 00CC  
            __size_of_fputs 0048              __size_of_putch 0002            LCD_sendbyte@Byte 0077  
                  _LCD_Init 3342            LCD_sendbyte@type 0076              ___wmul@product 0079  
                  _LATAbits 000F79                    _LATBbits 000F7A                    _LATCbits 000F7B  
                  _LATEbits 000F7D                    _LATFbits 000F7E                    _LATGbits 000F7F  
                  _LATHbits 000F80                 ??i1_isdigit 0003                    _IPR0bits 000E1F  
                  _PIE0bits 000E29                    _IPR2bits 000E21                    _PIE2bits 000E2B  
               ??i1_isspace 0003                    i1u400_20 3234                    i1u400_21 3230  
                  i1u500_20 20C4                    i1u500_21 20C0                    i1u501_20 20D4  
                  i1u501_21 20D0                    i1u502_20 20E6                    i1u510_20 2BE4  
                  i1u502_21 20E2                    i1u510_21 2BE0                    i1u423_20 385E  
                  i1u503_20 20F6                    i1u511_20 2C34                    i1u423_21 385A  
                  i1u503_21 20F2                    i1u511_21 2C30                    i1u520_20 263E  
                  i1u424_20 3A6A                    i1u504_20 210E                    i1u512_20 2C44  
                  i1u520_21 263A                    i1u424_21 3A66                    i1u504_21 210A  
                  i1u512_21 2C40                    i1u513_20 2C7E                    i1u513_21 2C7A  
                  i1u505_21 2B0C                    i1u514_20 24FC                    i1u506_20 2B2E  
                  i1u530_20 14F4                    i1u514_21 24F8                    i1u506_21 2B2A  
                  i1u530_21 14F0                    i1u515_20 2536                    i1u507_20 2B60  
                  i1u531_20 1574                    i1u515_21 2532                    i1u507_21 2B5C  
                  i1u531_21 156E                    i1u516_20 2552                    i1u460_20 2A36  
                  i1u508_20 2B7E                    i1u532_20 1576                    i1u516_21 254E  
                  i1u460_21 2A32                    i1u508_21 2B7A                    i1u517_20 2614  
                  i1u461_20 2A76                    i1u509_20 2BAA                    i1u533_20 158C  
                  i1u517_21 260E                    i1u461_21 2A72                    i1u509_21 2BA6  
                  i1u533_21 1588                    i1u518_20 2616                    i1u462_20 2AC0  
                  i1u470_20 32AE                    i1u534_20 15B4                    i1u526_20 139A  
                  i1u462_21 2ABC                    i1u470_21 32AA                    i1u534_21 15B0  
                  i1u526_21 1396                    i1u519_20 262C                    i1u463_20 2E00  
                  i1u471_20 3304                    i1u535_20 15DC                    i1u527_20 1476  
                  i1u519_21 2628                    i1u463_21 2DFC                    i1u471_21 3300  
                  i1u535_21 15D8                    i1u527_21 1472                    i1u456_20 298C  
                  i1u464_20 2E32                    i1u472_20 3314                    i1u536_20 1684  
                  i1u528_20 1486                    i1u456_21 2988                    i1u464_21 2E2E  
                  i1u472_21 3310                    i1u536_21 1680                    i1u528_21 1482  
                  i1u457_20 29BE                    i1u465_20 2E70                    i1u473_20 38FC  
                  i1u537_20 1702                    i1u529_20 14B0                    i1u545_20 368A  
                  i1u457_21 29BA                    i1u465_21 2E6C                    i1u473_21 38F8  
                  i1u537_21 16FE                    i1u529_21 14AC                    i1u545_21 3686  
                  i1u474_20 3A3A                    i1u466_20 2E9A                    i1u490_20 1EA8  
                  i1u474_21 3A34                    i1u458_21 29E8                    i1u466_21 2E96  
                  i1u490_21 1EA2                    i1u475_20 3A3C                    i1u459_20 2A0C  
                  i1u467_20 2EC8                    i1u491_20 1EAA                    i1u459_21 2A08  
                  i1u467_21 2EC4                    i1u476_20 3754                    i1u468_20 2F10  
                  i1u492_20 1EC0                    i1u572_20 005E                    i1u476_21 3750  
                  i1u468_21 2F0C                    i1u492_21 1EBC                    i1u572_21 005A  
                  i1u477_20 3782                    i1u397_20 31C4                    i1u469_20 328C  
                  i1u493_20 1EF0                    i1u573_20 0084                    i1u477_21 377E  
                  i1u397_21 31C0                    i1u469_21 3288                    i1u493_21 1EEC  
                  i1u573_21 007E                    i1u398_20 31D6                    i1u494_20 1F0C  
                  i1u574_20 0086                    i1u398_21 31D2                    i1u494_21 1F08  
                  i1u399_20 31FE                    i1u495_20 1F3A                    i1u575_20 0098  
                  i1u399_21 31FA                    i1u495_21 1F36                    i1u575_21 0094  
                  _PIR0bits 000E33                    i1u496_20 1F48                    i1u496_21 1F44  
                  i1u497_20 2072                    i1u497_21 206E                    i1u498_20 2090  
                  i1u498_21 208C                    i1u499_20 20AA                    i1u499_21 20A6  
                  _PIR2bits 000E35                    i2u381_40 3932                    i2u381_41 392E  
                  i2u382_40 3954                    i2u382_41 3950             time_now@datebuf 0118  
           time_now@daylist 012A                   _vfpfcnvrt 1786           ___wmul@multiplier 0075  
                  i1___wmul 3B44             time_now@minutes 011C             time_now@seconds 011A  
           time_now@timebuf 0116                    i1pad@buf 0013                    i1dtoa@fp 001C  
              _isspace$1849 007B                  _CM1NCHbits 000ED2                    i1_strlen 3A42  
                _CM1PCHbits 000ED3                    i1fputc@c 0001                    i1fputs@c 000E  
                  i1fputs@i 000F                    i1fputs@s 000A                   copy_data0 3408  
                 copy_data1 3428                   copy_data2 3448                    i1stoa@cp 001A  
                  i1stoa@fp 000A            __size_ofi1_fputc 00CA            __size_ofi1_fputs 0044  
          __size_ofi1_putch 0002       __end_of_LEDarray_init 3B44                 _LCD_setline 38A2  
                  __Hrparam 0000                  vfprintf@ap 00D0                    __Lrparam 0000  
                vfprintf@fp 00CC                    _TimerISR 0008            __size_of___aodiv 018A  
          __size_of___aomod 0166               _time_now$2116 0170                  ?_vfpfcnvrt 00B4  
          __size_of___lwdiv 0076            __size_of___lwmod 0066          i1___aodiv@dividend 0001  
           ___aodiv@divisor 007D             ___aodiv@counter 0085                  _ANSELFbits 000EB4  
                sprintf@fmt 0102                  _T0CON0bits 000FD5                  _T0CON1bits 000FD6  
            time_now@F14541 02AC              time_now@F14544 0266            __size_of_isdigit 003A  
           ___lwdiv@divisor 0077            __size_of_isspace 0054             ___lwdiv@counter 0079  
                  __ptext10 2F52                    __ptext11 3BD2                    __ptext20 3480  
                  __ptext12 3860                    __ptext21 3B6A                    __ptext13 2C88  
                  __ptext30 3B9A                    __ptext22 3B1E                    __ptext14 27F0  
                  __ptext31 3ACE                    __ptext23 30E8                    __ptext15 2318  
                  __ptext40 3A42                    __ptext32 3B86                    __ptext24 38A2  
                  __ptext16 36E8                    __ptext41 381C                    __ptext25 39D2  
                  __ptext17 3998                    __ptext50 3B44                    __ptext42 31B2  
                  __ptext34 3AF6                    __ptext26 3342                    __ptext18 3AA6  
                  __ptext43 3BD4                    __ptext35 362E                    __ptext27 3A78  
                  __ptext19 35C8                    __ptext44 38E2                    __ptext36 1372  
                  __ptext28 34F6                    __ptext45 2DEE                    __ptext37 2B02  
                  __ptext29 3BBC                    __ptext46 297A                    __ptext38 1E78  
                  __ptext47 24C0                    __ptext39 327C                    __ptext48 373C  
                  __ptext49 3A0A              i1_isspace$1849 0007     LEDarray_disp_bin@number 0075  
          __size_of_sprintf 0054               __size_of_atoi 01A8               __size_of_main 01BC  
             __size_of_dtoa 02E4               __size_of_stoa 018C          i1___aodiv@quotient 0013  
                 stoa@F1141 00E3                    _time_now 0E2E    __size_of_Interrupts_init 0012  
                  int$flags 005E        __size_of_Timer0_init 001C                    _vfprintf 3562  
                 printf@fmt 0062              time_now@season 0128              time_now@months 0124  
          ___aomod@dividend 0075              _vfpfcnvrt$1810 00CA                  _INTCONbits 000FF2  
                  isdigit@c 0075                    intlevel1 0000                    intlevel2 0000  
                 sprintf@ap 010E                _DAC1CON0bits 000EC6                _DAC1CON1bits 000EC7  
          ___lwmod@dividend 0075                    isspace@c 0075               ??i1_vfpfcnvrt 0046  
                  printf@ap 0066               time_now@hours 011E               time_now@years 0126  
           ___aomod@divisor 007D                 ??_vfpfcnvrt 00BA                    stoa@nuls 0083  
           ___aomod@counter 0085                    sprintf@f 0110                    sprintf@s 0100  
           ___lwmod@divisor 0077             ___lwmod@counter 0079                time_now@days 0122  
              time_now@leap 018A                ___aodiv@sign 0086                ___aomod@sign 0086  

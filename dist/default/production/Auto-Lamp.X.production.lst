

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 19 22:44:05 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    76                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    77                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    78  0000                     
    79                           ; Version 2.20
    80                           ; Generated 05/05/2020 GMT
    81                           ; 
    82                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F67K40 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     
   114                           	psect	idataBANK0
   115  003BDC                     __pidataBANK0:
   116                           	callstack 0
   117                           
   118                           ;initializer for stoa@F1141
   119  003BDC  28                 	db	40
   120  003BDD  6E                 	db	110
   121  003BDE  75                 	db	117
   122  003BDF  6C                 	db	108
   123  003BE0  6C                 	db	108
   124  003BE1  29                 	db	41
   125  003BE2  00                 	db	0
   126                           
   127                           	psect	idataBANK1
   128  003BBE                     __pidataBANK1:
   129                           	callstack 0
   130                           
   131                           ;initializer for main@F14550
   132  003BBE  0000               	dw	0
   133  003BC0  0000               	dw	0
   134  003BC2  0000               	dw	0
   135  003BC4  0000               	dw	0
   136  003BC6  0000               	dw	0
   137  003BC8  0000               	dw	0
   138  003BCA  07E5               	dw	2021
   139  003BCC  0000               	dw	0
   140                           
   141                           	psect	idataBANK2
   142  0037E4                     __pidataBANK2:
   143                           	callstack 0
   144                           
   145                           ;initializer for time_now@F14544
   146  0037E4  4D                 	db	77
   147  0037E5  6F                 	db	111
   148  0037E6  6E                 	db	110
   149  0037E7  00                 	db	0
   150  0037E8  00                 	db	0
   151  0037E9  00                 	db	0
   152  0037EA  00                 	db	0
   153  0037EB  00                 	db	0
   154  0037EC  00                 	db	0
   155  0037ED  00                 	db	0
   156  0037EE  54                 	db	84
   157  0037EF  75                 	db	117
   158  0037F0  65                 	db	101
   159  0037F1  00                 	db	0
   160  0037F2  00                 	db	0
   161  0037F3  00                 	db	0
   162  0037F4  00                 	db	0
   163  0037F5  00                 	db	0
   164  0037F6  00                 	db	0
   165  0037F7  00                 	db	0
   166  0037F8  57                 	db	87
   167  0037F9  65                 	db	101
   168  0037FA  64                 	db	100
   169  0037FB  00                 	db	0
   170  0037FC  00                 	db	0
   171  0037FD  00                 	db	0
   172  0037FE  00                 	db	0
   173  0037FF  00                 	db	0
   174  003800  00                 	db	0
   175  003801  00                 	db	0
   176  003802  54                 	db	84
   177  003803  68                 	db	104
   178  003804  75                 	db	117
   179  003805  00                 	db	0
   180  003806  00                 	db	0
   181  003807  00                 	db	0
   182  003808  00                 	db	0
   183  003809  00                 	db	0
   184  00380A  00                 	db	0
   185  00380B  00                 	db	0
   186  00380C  46                 	db	70
   187  00380D  72                 	db	114
   188  00380E  69                 	db	105
   189  00380F  00                 	db	0
   190  003810  00                 	db	0
   191  003811  00                 	db	0
   192  003812  00                 	db	0
   193  003813  00                 	db	0
   194  003814  00                 	db	0
   195  003815  00                 	db	0
   196  003816  53                 	db	83
   197  003817  61                 	db	97
   198  003818  74                 	db	116
   199  003819  00                 	db	0
   200  00381A  00                 	db	0
   201  00381B  00                 	db	0
   202  00381C  00                 	db	0
   203  00381D  00                 	db	0
   204  00381E  00                 	db	0
   205  00381F  00                 	db	0
   206  003820  53                 	db	83
   207  003821  75                 	db	117
   208  003822  6E                 	db	110
   209  003823  00                 	db	0
   210  003824  00                 	db	0
   211  003825  00                 	db	0
   212  003826  00                 	db	0
   213  003827  00                 	db	0
   214  003828  00                 	db	0
   215  003829  00                 	db	0
   216  0000                     _PIR0bits	set	3635
   217  0000                     _PIR2bits	set	3637
   218  0000                     _IPR0bits	set	3615
   219  0000                     _IPR2bits	set	3617
   220  0000                     _PIE0bits	set	3625
   221  0000                     _PIE2bits	set	3627
   222  0000                     _CM1CON1bits	set	3793
   223  0000                     _CM1CON0bits	set	3792
   224  0000                     _CM1PCHbits	set	3795
   225  0000                     _CM1NCHbits	set	3794
   226  0000                     _ANSELFbits	set	3764
   227  0000                     _DAC1CON1bits	set	3783
   228  0000                     _DAC1CON0bits	set	3782
   229  0000                     _T0CON0bits	set	4053
   230  0000                     _T0CON1bits	set	4054
   231  0000                     _LATHbits	set	3968
   232  0000                     _TRISHbits	set	3976
   233  0000                     _LATDbits	set	3964
   234  0000                     _TRISDbits	set	3972
   235  0000                     _TMR0L	set	4051
   236  0000                     _TMR0H	set	4052
   237  0000                     _INTCONbits	set	4082
   238  0000                     _LATFbits	set	3966
   239  0000                     _LATAbits	set	3961
   240  0000                     _LATGbits	set	3967
   241  0000                     _TRISFbits	set	3974
   242  0000                     _TRISAbits	set	3969
   243  0000                     _TRISGbits	set	3975
   244  0000                     _TRISEbits	set	3973
   245  0000                     _TRISBbits	set	3970
   246  0000                     _TRISCbits	set	3971
   247  0000                     _LATBbits	set	3962
   248  0000                     _LATEbits	set	3965
   249  0000                     _LATCbits	set	3963
   250                           
   251                           	psect	smallconst
   252  000E00                     __psmallconst:
   253                           	callstack 0
   254  000E00  00                 	db	0
   255  000E01                     STR_2:
   256  000E01  20                 	db	32
   257  000E02  20                 	db	32
   258  000E03  20                 	db	32
   259  000E04  20                 	db	32
   260  000E05  25                 	db	37
   261  000E06  30                 	db	48	;'0'
   262  000E07  32                 	db	50	;'2'
   263  000E08  64                 	db	100	;'d'
   264  000E09  3A                 	db	58	;':'
   265  000E0A  25                 	db	37
   266  000E0B  30                 	db	48	;'0'
   267  000E0C  32                 	db	50	;'2'
   268  000E0D  64                 	db	100	;'d'
   269  000E0E  3A                 	db	58	;':'
   270  000E0F  25                 	db	37
   271  000E10  30                 	db	48	;'0'
   272  000E11  32                 	db	50	;'2'
   273  000E12  64                 	db	100	;'d'
   274  000E13  00                 	db	0
   275  000E14                     STR_3:
   276  000E14  20                 	db	32
   277  000E15  25                 	db	37
   278  000E16  73                 	db	115	;'s'
   279  000E17  20                 	db	32
   280  000E18  25                 	db	37
   281  000E19  30                 	db	48	;'0'
   282  000E1A  32                 	db	50	;'2'
   283  000E1B  64                 	db	100	;'d'
   284  000E1C  2F                 	db	47
   285  000E1D  25                 	db	37
   286  000E1E  30                 	db	48	;'0'
   287  000E1F  32                 	db	50	;'2'
   288  000E20  64                 	db	100	;'d'
   289  000E21  2F                 	db	47
   290  000E22  25                 	db	37
   291  000E23  30                 	db	48	;'0'
   292  000E24  34                 	db	52	;'4'
   293  000E25  64                 	db	100	;'d'
   294  000E26  00                 	db	0
   295  000E27                     STR_4:
   296  000E27  68                 	db	104	;'h'
   297  000E28  65                 	db	101	;'e'
   298  000E29  6C                 	db	108	;'l'
   299  000E2A  6C                 	db	108	;'l'
   300  000E2B  6F                 	db	111	;'o'
   301  000E2C  00                 	db	0
   302  000E2D  00                 	db	0	; dummy byte at the end
   303  0000                     
   304                           ; #config settings
   305                           
   306                           	psect	cinit
   307  003402                     __pcinit:
   308                           	callstack 0
   309  003402                     start_initialization:
   310                           	callstack 0
   311  003402                     __initialization:
   312                           	callstack 0
   313                           
   314                           ; Initialize objects allocated to BANK2 (70 bytes)
   315                           ; load TBLPTR registers with __pidataBANK2
   316  003402  0EE4               	movlw	low __pidataBANK2
   317  003404  6EF6               	movwf	tblptrl,c
   318  003406  0E37               	movlw	high __pidataBANK2
   319  003408  6EF7               	movwf	tblptrh,c
   320  00340A  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   321  00340C  6EF8               	movwf	tblptru,c
   322  00340E  EE02  F066         	lfsr	0,__pdataBANK2
   323  003412  EE10 F046          	lfsr	1,70
   324  003416                     copy_data0:
   325  003416  0009               	tblrd		*+
   326  003418  CFF5 FFEE          	movff	tablat,postinc0
   327  00341C  50E5               	movf	postdec1,w,c
   328  00341E  50E1               	movf	fsr1l,w,c
   329  003420  E1FA               	bnz	copy_data0
   330                           
   331                           ; Initialize objects allocated to BANK1 (16 bytes)
   332                           ; load TBLPTR registers with __pidataBANK1
   333  003422  0EBE               	movlw	low __pidataBANK1
   334  003424  6EF6               	movwf	tblptrl,c
   335  003426  0E3B               	movlw	high __pidataBANK1
   336  003428  6EF7               	movwf	tblptrh,c
   337  00342A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   338  00342C  6EF8               	movwf	tblptru,c
   339  00342E  EE01  F08D         	lfsr	0,__pdataBANK1
   340  003432  EE10 F010          	lfsr	1,16
   341  003436                     copy_data1:
   342  003436  0009               	tblrd		*+
   343  003438  CFF5 FFEE          	movff	tablat,postinc0
   344  00343C  50E5               	movf	postdec1,w,c
   345  00343E  50E1               	movf	fsr1l,w,c
   346  003440  E1FA               	bnz	copy_data1
   347                           
   348                           ; Initialize objects allocated to BANK0 (7 bytes)
   349                           ; load TBLPTR registers with __pidataBANK0
   350  003442  0EDC               	movlw	low __pidataBANK0
   351  003444  6EF6               	movwf	tblptrl,c
   352  003446  0E3B               	movlw	high __pidataBANK0
   353  003448  6EF7               	movwf	tblptrh,c
   354  00344A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   355  00344C  6EF8               	movwf	tblptru,c
   356  00344E  EE00  F0E3         	lfsr	0,__pdataBANK0
   357  003452  EE10 F007          	lfsr	1,7
   358  003456                     copy_data2:
   359  003456  0009               	tblrd		*+
   360  003458  CFF5 FFEE          	movff	tablat,postinc0
   361  00345C  50E5               	movf	postdec1,w,c
   362  00345E  50E1               	movf	fsr1l,w,c
   363  003460  E1FA               	bnz	copy_data2
   364                           
   365                           ; Clear objects allocated to BANK2 (56 bytes)
   366  003462  EE02  F0AC         	lfsr	0,__pbssBANK2
   367  003466  0E38               	movlw	56
   368  003468                     clear_0:
   369  003468  6AEE               	clrf	postinc0,c
   370  00346A  06E8               	decf	wreg,f,c
   371  00346C  E1FD               	bnz	clear_0
   372                           
   373                           ; Clear objects allocated to BANK1 (4 bytes)
   374  00346E  0101               	movlb	1
   375  003470  6BA0               	clrf	(__pbssBANK1+3)& (0+255),b
   376  003472  6B9F               	clrf	(__pbssBANK1+2)& (0+255),b
   377  003474  6B9E               	clrf	(__pbssBANK1+1)& (0+255),b
   378  003476  6B9D               	clrf	__pbssBANK1& (0+255),b
   379                           
   380                           ; Clear objects allocated to BANK0 (9 bytes)
   381  003478  EE00  F0DA         	lfsr	0,__pbssBANK0
   382  00347C  0E09               	movlw	9
   383  00347E                     clear_1:
   384  00347E  6AEE               	clrf	postinc0,c
   385  003480  06E8               	decf	wreg,f,c
   386  003482  E1FD               	bnz	clear_1
   387  003484                     end_of_initialization:
   388                           	callstack 0
   389  003484                     __end_of__initialization:
   390                           	callstack 0
   391  003484  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   392  003486  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   393  003488  0100               	movlb	0
   394  00348A  EFAE  F010         	goto	_main	;jump to C main() function
   395                           
   396                           	psect	bssBANK0
   397  0000DA                     __pbssBANK0:
   398                           	callstack 0
   399  0000DA                     _nout:
   400                           	callstack 0
   401  0000DA                     	ds	2
   402  0000DC                     _width:
   403                           	callstack 0
   404  0000DC                     	ds	2
   405  0000DE                     _prec:
   406                           	callstack 0
   407  0000DE                     	ds	2
   408  0000E0                     _flags:
   409                           	callstack 0
   410  0000E0                     	ds	2
   411  0000E2                     _sun:
   412                           	callstack 0
   413  0000E2                     	ds	1
   414                           
   415                           	psect	dataBANK0
   416  0000E3                     __pdataBANK0:
   417                           	callstack 0
   418  0000E3                     stoa@F1141:
   419                           	callstack 0
   420  0000E3                     	ds	7
   421                           
   422                           	psect	bssBANK1
   423  00019D                     __pbssBANK1:
   424                           	callstack 0
   425  00019D                     _seconds_check:
   426                           	callstack 0
   427  00019D                     	ds	2
   428  00019F                     _seconds_counter:
   429                           	callstack 0
   430  00019F                     	ds	2
   431                           
   432                           	psect	dataBANK1
   433  00018D                     __pdataBANK1:
   434                           	callstack 0
   435  00018D                     main@F14550:
   436                           	callstack 0
   437  00018D                     	ds	16
   438                           
   439                           	psect	bssBANK2
   440  0002AC                     __pbssBANK2:
   441                           	callstack 0
   442  0002AC                     	ds	24
   443  0002C4                     _dbuf:
   444                           	callstack 0
   445  0002C4                     	ds	32
   446                           
   447                           	psect	dataBANK2
   448  000266                     __pdataBANK2:
   449                           	callstack 0
   450  000266                     time_now@F14544:
   451                           	callstack 0
   452  000266                     	ds	70
   453                           
   454                           	psect	cstackBANK2
   455  000200                     __pcstackBANK2:
   456                           	callstack 0
   457  000200                     main@timebuf:
   458                           	callstack 0
   459                           
   460                           ; 40 bytes @ 0x0
   461  000200                     	ds	40
   462  000228                     main@datebuf:
   463                           	callstack 0
   464                           
   465                           ; 40 bytes @ 0x28
   466  000228                     	ds	40
   467  000250                     main@prev_sec:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x50
   471  000250                     	ds	2
   472  000252                     main@prev_sun:
   473                           	callstack 0
   474                           
   475                           ; 1 bytes @ 0x52
   476  000252                     	ds	1
   477  000253                     _main$1252:
   478                           	callstack 0
   479                           
   480                           ; 1 bytes @ 0x53
   481  000253                     	ds	1
   482  000254                     main@time:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0x54
   486  000254                     	ds	2
   487  000256                     main@start_time:
   488                           	callstack 0
   489                           
   490                           ; 16 bytes @ 0x56
   491  000256                     	ds	16
   492                           
   493                           	psect	cstackBANK1
   494  000100                     __pcstackBANK1:
   495                           	callstack 0
   496  000100                     ?_sprintf:
   497                           	callstack 0
   498  000100                     sprintf@s:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x0
   502  000100                     	ds	2
   503  000102                     sprintf@fmt:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x2
   507  000102                     	ds	12
   508  00010E                     sprintf@ap:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0xE
   512  00010E                     	ds	2
   513  000110                     sprintf@f:
   514                           	callstack 0
   515                           
   516                           ; 6 bytes @ 0x10
   517  000110                     	ds	6
   518  000116                     ?_time_now:
   519                           	callstack 0
   520  000116                     time_now@timebuf:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x16
   524  000116                     	ds	2
   525  000118                     time_now@datebuf:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x18
   529  000118                     	ds	2
   530  00011A                     time_now@seconds:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x1A
   534  00011A                     	ds	2
   535  00011C                     time_now@minutes:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x1C
   539  00011C                     	ds	2
   540  00011E                     time_now@hours:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x1E
   544  00011E                     	ds	2
   545  000120                     time_now@weekdays:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x20
   549  000120                     	ds	2
   550  000122                     time_now@days:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x22
   554  000122                     	ds	2
   555  000124                     time_now@months:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x24
   559  000124                     	ds	2
   560  000126                     time_now@years:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x26
   564  000126                     	ds	2
   565  000128                     time_now@season:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x28
   569  000128                     	ds	2
   570  00012A                     time_now@daylist:
   571                           	callstack 0
   572                           
   573                           ; 70 bytes @ 0x2A
   574  00012A                     	ds	70
   575  000170                     _time_now$2193:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x70
   579  000170                     	ds	2
   580  000172                     time_now@month_days:
   581                           	callstack 0
   582                           
   583                           ; 24 bytes @ 0x72
   584  000172                     	ds	24
   585  00018A                     time_now@leap:
   586                           	callstack 0
   587                           
   588                           ; 1 bytes @ 0x8A
   589  00018A                     	ds	1
   590  00018B                     time_now@cur_month:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x8B
   594  00018B                     	ds	2
   595                           
   596                           	psect	cstackBANK0
   597  000060                     __pcstackBANK0:
   598                           	callstack 0
   599  000060                     i1vfprintf@cfmt:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x0
   603  000060                     	ds	2
   604  000062                     ?_printf:
   605                           	callstack 0
   606  000062                     printf@fmt:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x2
   610  000062                     	ds	4
   611  000066                     printf@ap:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0x6
   615  000066                     	ds	2
   616  000068                     ??_LdrISR:
   617                           
   618                           ; 1 bytes @ 0x8
   619  000068                     	ds	13
   620  000075                     ?_strlen:
   621                           	callstack 0
   622  000075                     ?_isdigit:
   623                           	callstack 0
   624  000075                     ?_isspace:
   625                           	callstack 0
   626  000075                     ?___wmul:
   627                           	callstack 0
   628  000075                     ?___lwdiv:
   629                           	callstack 0
   630  000075                     ?___lwmod:
   631                           	callstack 0
   632  000075                     ?___aodiv:
   633                           	callstack 0
   634  000075                     ?___aomod:
   635                           	callstack 0
   636  000075                     LCD_sendnibble@number:
   637                           	callstack 0
   638  000075                     LEDarray_disp_bin@number:
   639                           	callstack 0
   640  000075                     ___wmul@multiplier:
   641                           	callstack 0
   642  000075                     ___lwdiv@dividend:
   643                           	callstack 0
   644  000075                     ___lwmod@dividend:
   645                           	callstack 0
   646  000075                     isdigit@c:
   647                           	callstack 0
   648  000075                     isspace@c:
   649                           	callstack 0
   650  000075                     fputc@c:
   651                           	callstack 0
   652  000075                     strlen@s:
   653                           	callstack 0
   654  000075                     ___aodiv@dividend:
   655                           	callstack 0
   656  000075                     ___aomod@dividend:
   657                           	callstack 0
   658                           
   659                           ; 8 bytes @ 0x15
   660  000075                     	ds	1
   661  000076                     LCD_sendbyte@type:
   662                           	callstack 0
   663                           
   664                           ; 1 bytes @ 0x16
   665  000076                     	ds	1
   666  000077                     ??_isdigit:
   667  000077                     ??_isspace:
   668  000077                     LCD_sendbyte@Byte:
   669                           	callstack 0
   670  000077                     ___wmul@multiplicand:
   671                           	callstack 0
   672  000077                     ___lwdiv@divisor:
   673                           	callstack 0
   674  000077                     ___lwmod@divisor:
   675                           	callstack 0
   676  000077                     fputc@fp:
   677                           	callstack 0
   678  000077                     strlen@a:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x17
   682  000077                     	ds	1
   683  000078                     ??_LCD_Init:
   684  000078                     LCD_setline@line:
   685                           	callstack 0
   686  000078                     LCD_sendstring@string:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x18
   690  000078                     	ds	1
   691  000079                     ??_fputc:
   692  000079                     ___lwdiv@counter:
   693                           	callstack 0
   694  000079                     ___lwmod@counter:
   695                           	callstack 0
   696  000079                     ___wmul@product:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x19
   700  000079                     	ds	1
   701  00007A                     ___lwdiv@quotient:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x1A
   705  00007A                     	ds	1
   706  00007B                     _isspace$1926:
   707                           	callstack 0
   708                           
   709                           ; 1 bytes @ 0x1B
   710  00007B                     	ds	1
   711  00007C                     ?_atoi:
   712                           	callstack 0
   713  00007C                     atoi@s:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x1C
   717  00007C                     	ds	1
   718  00007D                     ___aodiv@divisor:
   719                           	callstack 0
   720  00007D                     ___aomod@divisor:
   721                           	callstack 0
   722                           
   723                           ; 8 bytes @ 0x1D
   724  00007D                     	ds	1
   725  00007E                     ??_atoi:
   726  00007E                     ?_stoa:
   727                           	callstack 0
   728  00007E                     stoa@fp:
   729                           	callstack 0
   730  00007E                     fputs@s:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x1E
   734  00007E                     	ds	2
   735  000080                     stoa@s:
   736                           	callstack 0
   737  000080                     fputs@fp:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x20
   741  000080                     	ds	2
   742  000082                     ??_stoa:
   743  000082                     fputs@c:
   744                           	callstack 0
   745  000082                     atoi@neg:
   746                           	callstack 0
   747                           
   748                           ; 2 bytes @ 0x22
   749  000082                     	ds	1
   750  000083                     fputs@i:
   751                           	callstack 0
   752  000083                     stoa@nuls:
   753                           	callstack 0
   754                           
   755                           ; 7 bytes @ 0x23
   756  000083                     	ds	1
   757  000084                     _atoi$1908:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x24
   761  000084                     	ds	1
   762  000085                     ?_pad:
   763                           	callstack 0
   764  000085                     ___aodiv@counter:
   765                           	callstack 0
   766  000085                     ___aomod@counter:
   767                           	callstack 0
   768  000085                     pad@fp:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0x25
   772  000085                     	ds	1
   773  000086                     ___aodiv@sign:
   774                           	callstack 0
   775  000086                     ___aomod@sign:
   776                           	callstack 0
   777  000086                     _atoi$1910:
   778                           	callstack 0
   779                           
   780                           ; 2 bytes @ 0x26
   781  000086                     	ds	1
   782  000087                     ?_abs:
   783                           	callstack 0
   784  000087                     pad@buf:
   785                           	callstack 0
   786  000087                     abs@a:
   787                           	callstack 0
   788  000087                     ___aodiv@quotient:
   789                           	callstack 0
   790                           
   791                           ; 8 bytes @ 0x27
   792  000087                     	ds	1
   793  000088                     _atoi$1909:
   794                           	callstack 0
   795                           
   796                           ; 1 bytes @ 0x28
   797  000088                     	ds	1
   798  000089                     ??_abs:
   799  000089                     pad@p:
   800                           	callstack 0
   801  000089                     atoi@n:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0x29
   805  000089                     	ds	1
   806  00008A                     stoa@i:
   807                           	callstack 0
   808                           
   809                           ; 2 bytes @ 0x2A
   810  00008A                     	ds	1
   811  00008B                     ??_pad:
   812                           
   813                           ; 1 bytes @ 0x2B
   814  00008B                     	ds	1
   815  00008C                     pad@i:
   816                           	callstack 0
   817  00008C                     stoa@w:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x2C
   821  00008C                     	ds	2
   822  00008E                     pad@w:
   823                           	callstack 0
   824  00008E                     stoa@cp:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0x2E
   828  00008E                     	ds	2
   829  000090                     ?_dtoa:
   830                           	callstack 0
   831  000090                     dtoa@fp:
   832                           	callstack 0
   833  000090                     stoa@p:
   834                           	callstack 0
   835                           
   836                           ; 2 bytes @ 0x30
   837  000090                     	ds	2
   838  000092                     stoa@l:
   839                           	callstack 0
   840  000092                     dtoa@d:
   841                           	callstack 0
   842                           
   843                           ; 8 bytes @ 0x32
   844  000092                     	ds	8
   845  00009A                     ??_dtoa:
   846                           
   847                           ; 1 bytes @ 0x3A
   848  00009A                     	ds	8
   849  0000A2                     _dtoa$1861:
   850                           	callstack 0
   851                           
   852                           ; 2 bytes @ 0x42
   853  0000A2                     	ds	2
   854  0000A4                     dtoa@p:
   855                           	callstack 0
   856                           
   857                           ; 2 bytes @ 0x44
   858  0000A4                     	ds	2
   859  0000A6                     dtoa@w:
   860                           	callstack 0
   861                           
   862                           ; 2 bytes @ 0x46
   863  0000A6                     	ds	2
   864  0000A8                     dtoa@s:
   865                           	callstack 0
   866                           
   867                           ; 2 bytes @ 0x48
   868  0000A8                     	ds	2
   869  0000AA                     dtoa@n:
   870                           	callstack 0
   871                           
   872                           ; 8 bytes @ 0x4A
   873  0000AA                     	ds	8
   874  0000B2                     dtoa@i:
   875                           	callstack 0
   876                           
   877                           ; 2 bytes @ 0x52
   878  0000B2                     	ds	2
   879  0000B4                     ?_vfpfcnvrt:
   880                           	callstack 0
   881  0000B4                     vfpfcnvrt@fp:
   882                           	callstack 0
   883                           
   884                           ; 2 bytes @ 0x54
   885  0000B4                     	ds	2
   886  0000B6                     vfpfcnvrt@fmt:
   887                           	callstack 0
   888                           
   889                           ; 2 bytes @ 0x56
   890  0000B6                     	ds	2
   891  0000B8                     vfpfcnvrt@ap:
   892                           	callstack 0
   893                           
   894                           ; 2 bytes @ 0x58
   895  0000B8                     	ds	2
   896  0000BA                     ??_vfpfcnvrt:
   897                           
   898                           ; 1 bytes @ 0x5A
   899  0000BA                     	ds	4
   900  0000BE                     vfpfcnvrt@ll:
   901                           	callstack 0
   902                           
   903                           ; 8 bytes @ 0x5E
   904  0000BE                     	ds	8
   905  0000C6                     vfpfcnvrt@cp:
   906                           	callstack 0
   907                           
   908                           ; 2 bytes @ 0x66
   909  0000C6                     	ds	2
   910  0000C8                     vfpfcnvrt@done:
   911                           	callstack 0
   912                           
   913                           ; 2 bytes @ 0x68
   914  0000C8                     	ds	2
   915  0000CA                     _vfpfcnvrt$1887:
   916                           	callstack 0
   917                           
   918                           ; 2 bytes @ 0x6A
   919  0000CA                     	ds	2
   920  0000CC                     ?_vfprintf:
   921                           	callstack 0
   922  0000CC                     vfprintf@fp:
   923                           	callstack 0
   924                           
   925                           ; 2 bytes @ 0x6C
   926  0000CC                     	ds	2
   927  0000CE                     vfprintf@fmt:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0x6E
   931  0000CE                     	ds	2
   932  0000D0                     vfprintf@ap:
   933                           	callstack 0
   934                           
   935                           ; 2 bytes @ 0x70
   936  0000D0                     	ds	2
   937  0000D2                     vfprintf@cfmt:
   938                           	callstack 0
   939                           
   940                           ; 2 bytes @ 0x72
   941  0000D2                     	ds	2
   942  0000D4                     ??_time_now:
   943                           
   944                           ; 1 bytes @ 0x74
   945  0000D4                     	ds	4
   946  0000D8                     ??_main:
   947                           
   948                           ; 1 bytes @ 0x78
   949  0000D8                     	ds	2
   950                           
   951                           	psect	cstackCOMRAM
   952  000001                     __pcstackCOMRAM:
   953                           	callstack 0
   954  000001                     ?i1___wmul:
   955                           	callstack 0
   956  000001                     ?i1_isdigit:
   957                           	callstack 0
   958  000001                     ?i1_isspace:
   959                           	callstack 0
   960  000001                     ?i1_strlen:
   961                           	callstack 0
   962  000001                     ?i1___aodiv:
   963                           	callstack 0
   964  000001                     ?i1___aomod:
   965                           	callstack 0
   966  000001                     i1___wmul@multiplier:
   967                           	callstack 0
   968  000001                     i1isdigit@c:
   969                           	callstack 0
   970  000001                     i1isspace@c:
   971                           	callstack 0
   972  000001                     i1fputc@c:
   973                           	callstack 0
   974  000001                     i1strlen@s:
   975                           	callstack 0
   976  000001                     i1___aodiv@dividend:
   977                           	callstack 0
   978  000001                     i1___aomod@dividend:
   979                           	callstack 0
   980                           
   981                           ; 8 bytes @ 0x0
   982  000001                     	ds	2
   983  000003                     ??i1_isdigit:
   984  000003                     ??i1_isspace:
   985  000003                     i1___wmul@multiplicand:
   986                           	callstack 0
   987  000003                     i1fputc@fp:
   988                           	callstack 0
   989  000003                     i1strlen@a:
   990                           	callstack 0
   991                           
   992                           ; 2 bytes @ 0x2
   993  000003                     	ds	2
   994  000005                     ??i1_fputc:
   995  000005                     i1___wmul@product:
   996                           	callstack 0
   997                           
   998                           ; 2 bytes @ 0x4
   999  000005                     	ds	2
  1000  000007                     i1_isspace$1926:
  1001                           	callstack 0
  1002                           
  1003                           ; 1 bytes @ 0x6
  1004  000007                     	ds	1
  1005  000008                     ?i1_atoi:
  1006                           	callstack 0
  1007  000008                     i1atoi@s:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x7
  1011  000008                     	ds	1
  1012  000009                     i1___aodiv@divisor:
  1013                           	callstack 0
  1014  000009                     i1___aomod@divisor:
  1015                           	callstack 0
  1016                           
  1017                           ; 8 bytes @ 0x8
  1018  000009                     	ds	1
  1019  00000A                     ??i1_atoi:
  1020  00000A                     ?i1_stoa:
  1021                           	callstack 0
  1022  00000A                     i1stoa@fp:
  1023                           	callstack 0
  1024  00000A                     i1fputs@s:
  1025                           	callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x9
  1028  00000A                     	ds	2
  1029  00000C                     i1stoa@s:
  1030                           	callstack 0
  1031  00000C                     i1fputs@fp:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0xB
  1035  00000C                     	ds	2
  1036  00000E                     ??i1_stoa:
  1037  00000E                     i1fputs@c:
  1038                           	callstack 0
  1039  00000E                     i1atoi@neg:
  1040                           	callstack 0
  1041                           
  1042                           ; 2 bytes @ 0xD
  1043  00000E                     	ds	1
  1044  00000F                     i1fputs@i:
  1045                           	callstack 0
  1046  00000F                     i1stoa@nuls:
  1047                           	callstack 0
  1048                           
  1049                           ; 7 bytes @ 0xE
  1050  00000F                     	ds	1
  1051  000010                     i1_atoi$1908:
  1052                           	callstack 0
  1053                           
  1054                           ; 2 bytes @ 0xF
  1055  000010                     	ds	1
  1056  000011                     ?i1_pad:
  1057                           	callstack 0
  1058  000011                     i1___aodiv@counter:
  1059                           	callstack 0
  1060  000011                     i1___aomod@counter:
  1061                           	callstack 0
  1062  000011                     i1pad@fp:
  1063                           	callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x10
  1066  000011                     	ds	1
  1067  000012                     i1___aodiv@sign:
  1068                           	callstack 0
  1069  000012                     i1___aomod@sign:
  1070                           	callstack 0
  1071  000012                     i1_atoi$1910:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x11
  1075  000012                     	ds	1
  1076  000013                     ?i1_abs:
  1077                           	callstack 0
  1078  000013                     i1pad@buf:
  1079                           	callstack 0
  1080  000013                     i1abs@a:
  1081                           	callstack 0
  1082  000013                     i1___aodiv@quotient:
  1083                           	callstack 0
  1084                           
  1085                           ; 8 bytes @ 0x12
  1086  000013                     	ds	1
  1087  000014                     i1_atoi$1909:
  1088                           	callstack 0
  1089                           
  1090                           ; 1 bytes @ 0x13
  1091  000014                     	ds	1
  1092  000015                     ??i1_abs:
  1093  000015                     i1pad@p:
  1094                           	callstack 0
  1095  000015                     i1atoi@n:
  1096                           	callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x14
  1099  000015                     	ds	1
  1100  000016                     i1stoa@i:
  1101                           	callstack 0
  1102                           
  1103                           ; 2 bytes @ 0x15
  1104  000016                     	ds	1
  1105  000017                     ??i1_pad:
  1106                           
  1107                           ; 1 bytes @ 0x16
  1108  000017                     	ds	1
  1109  000018                     i1pad@i:
  1110                           	callstack 0
  1111  000018                     i1stoa@w:
  1112                           	callstack 0
  1113                           
  1114                           ; 2 bytes @ 0x17
  1115  000018                     	ds	2
  1116  00001A                     i1pad@w:
  1117                           	callstack 0
  1118  00001A                     i1stoa@cp:
  1119                           	callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x19
  1122  00001A                     	ds	2
  1123  00001C                     ?i1_dtoa:
  1124                           	callstack 0
  1125  00001C                     i1dtoa@fp:
  1126                           	callstack 0
  1127  00001C                     i1stoa@p:
  1128                           	callstack 0
  1129                           
  1130                           ; 2 bytes @ 0x1B
  1131  00001C                     	ds	2
  1132  00001E                     i1stoa@l:
  1133                           	callstack 0
  1134  00001E                     i1dtoa@d:
  1135                           	callstack 0
  1136                           
  1137                           ; 8 bytes @ 0x1D
  1138  00001E                     	ds	8
  1139  000026                     ??i1_dtoa:
  1140                           
  1141                           ; 1 bytes @ 0x25
  1142  000026                     	ds	8
  1143  00002E                     i1_dtoa$1861:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x2D
  1147  00002E                     	ds	2
  1148  000030                     i1dtoa@p:
  1149                           	callstack 0
  1150                           
  1151                           ; 2 bytes @ 0x2F
  1152  000030                     	ds	2
  1153  000032                     i1dtoa@w:
  1154                           	callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x31
  1157  000032                     	ds	2
  1158  000034                     i1dtoa@s:
  1159                           	callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x33
  1162  000034                     	ds	2
  1163  000036                     i1dtoa@n:
  1164                           	callstack 0
  1165                           
  1166                           ; 8 bytes @ 0x35
  1167  000036                     	ds	8
  1168  00003E                     i1dtoa@i:
  1169                           	callstack 0
  1170                           
  1171                           ; 2 bytes @ 0x3D
  1172  00003E                     	ds	2
  1173  000040                     ?i1_vfpfcnvrt:
  1174                           	callstack 0
  1175  000040                     i1vfpfcnvrt@fp:
  1176                           	callstack 0
  1177                           
  1178                           ; 2 bytes @ 0x3F
  1179  000040                     	ds	2
  1180  000042                     i1vfpfcnvrt@fmt:
  1181                           	callstack 0
  1182                           
  1183                           ; 2 bytes @ 0x41
  1184  000042                     	ds	2
  1185  000044                     i1vfpfcnvrt@ap:
  1186                           	callstack 0
  1187                           
  1188                           ; 2 bytes @ 0x43
  1189  000044                     	ds	2
  1190  000046                     ??i1_vfpfcnvrt:
  1191                           
  1192                           ; 1 bytes @ 0x45
  1193  000046                     	ds	4
  1194  00004A                     i1vfpfcnvrt@ll:
  1195                           	callstack 0
  1196                           
  1197                           ; 8 bytes @ 0x49
  1198  00004A                     	ds	8
  1199  000052                     i1vfpfcnvrt@cp:
  1200                           	callstack 0
  1201                           
  1202                           ; 2 bytes @ 0x51
  1203  000052                     	ds	2
  1204  000054                     i1vfpfcnvrt@done:
  1205                           	callstack 0
  1206                           
  1207                           ; 2 bytes @ 0x53
  1208  000054                     	ds	2
  1209  000056                     i1_vfpfcnvrt$1887:
  1210                           	callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x55
  1213  000056                     	ds	2
  1214  000058                     ?i1_vfprintf:
  1215                           	callstack 0
  1216  000058                     i1vfprintf@fp:
  1217                           	callstack 0
  1218                           
  1219                           ; 2 bytes @ 0x57
  1220  000058                     	ds	2
  1221  00005A                     i1vfprintf@fmt:
  1222                           	callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x59
  1225  00005A                     	ds	2
  1226  00005C                     i1vfprintf@ap:
  1227                           	callstack 0
  1228                           
  1229                           ; 2 bytes @ 0x5B
  1230  00005C                     	ds	2
  1231  00005E                     
  1232                           ; 1 bytes @ 0x5D
  1233 ;;
  1234 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1235 ;;
  1236 ;; *************** function _main *****************
  1237 ;; Defined at:
  1238 ;;		line 26 in file "main.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;		None
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;  time            2   84[BANK2 ] unsigned int 
  1243 ;;  datebuf        40   40[BANK2 ] unsigned char [40]
  1244 ;;  timebuf        40    0[BANK2 ] unsigned char [40]
  1245 ;;  start_time     16   86[BANK2 ] unsigned int [8]
  1246 ;;  prev_sec        2   80[BANK2 ] unsigned int 
  1247 ;;  prev_sun        1   82[BANK2 ] _Bool 
  1248 ;; Return value:  Size  Location     Type
  1249 ;;                  1    wreg      void 
  1250 ;; Registers used:
  1251 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1252 ;; Tracked objects:
  1253 ;;		On entry : 0/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1258 ;;      Locals:         0       0       0     102       0       0       0       0       0       0       0       0       
      +0       0       0
  1259 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1260 ;;      Totals:         0       2       0     102       0       0       0       0       0       0       0       0       
      +0       0       0
  1261 ;;Total ram usage:      104 bytes
  1262 ;; Hardware stack levels required when called:   19
  1263 ;; This function calls:
  1264 ;;		_Comp1_init
  1265 ;;		_Interrupts_init
  1266 ;;		_LCD_Init
  1267 ;;		_LCD_sendbyte
  1268 ;;		_LCD_sendstring
  1269 ;;		_LCD_setline
  1270 ;;		_LEDarray_disp_bin
  1271 ;;		_LEDarray_init
  1272 ;;		_Timer0_init
  1273 ;;		_time_now
  1274 ;; This function is called by:
  1275 ;;		Startup code after reset
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           
  1279                           	psect	text0
  1280  00215C                     __ptext0:
  1281                           	callstack 0
  1282  00215C                     _main:
  1283                           	callstack 12
  1284  00215C                     
  1285                           ;main.c: 28:     LCD_Init();
  1286  00215C  ECA8  F019         	call	_LCD_Init	;wreg free
  1287  002160                     
  1288                           ;main.c: 29:     Timer0_init();
  1289  002160  ECBC  F01D         	call	_Timer0_init	;wreg free
  1290  002164                     
  1291                           ;main.c: 30:     LEDarray_init();
  1292  002164  EC96  F01D         	call	_LEDarray_init	;wreg free
  1293  002168                     
  1294                           ;main.c: 31:     Interrupts_init();
  1295  002168  ECD6  F01D         	call	_Interrupts_init	;wreg free
  1296  00216C                     
  1297                           ;main.c: 32:     Comp1_init();
  1298  00216C  EC6E  F01D         	call	_Comp1_init	;wreg free
  1299  002170                     
  1300                           ;main.c: 34:     TRISFbits.TRISF7=1;
  1301  002170  8E86               	bsf	134,7,c	;volatile
  1302  002172                     
  1303                           ;main.c: 35:     ANSELFbits.ANSELF7=1;
  1304  002172  010E               	movlb	14	; () banked
  1305  002174  8FB4               	bsf	180,7,b	;volatile
  1306  002176                     
  1307                           ; BSR set to: 14
  1308                           ;main.c: 38:     TRISDbits.TRISD7 = 0;
  1309  002176  9E84               	bcf	132,7,c	;volatile
  1310  002178                     
  1311                           ; BSR set to: 14
  1312                           ;main.c: 39:     LATDbits.LATD7 = 1;
  1313  002178  8E7C               	bsf	124,7,c	;volatile
  1314  00217A                     
  1315                           ; BSR set to: 14
  1316                           ;main.c: 42:     TRISHbits.TRISH3 = 0;
  1317  00217A  9688               	bcf	136,3,c	;volatile
  1318  00217C                     
  1319                           ; BSR set to: 14
  1320                           ;main.c: 43:     LATHbits.LATH3 = 1;
  1321  00217C  8680               	bsf	128,3,c	;volatile
  1322  00217E                     
  1323                           ; BSR set to: 14
  1324                           ;main.c: 51:     sun = 0;
  1325  00217E  0E00               	movlw	0
  1326  002180  0100               	movlb	0	; () banked
  1327  002182  6FE2               	movwf	_sun& (0+255),b
  1328  002184                     
  1329                           ; BSR set to: 0
  1330                           ;main.c: 53:     _Bool prev_sun = sun;
  1331  002184  C0E2  F252         	movff	_sun,main@prev_sun
  1332  002188                     
  1333                           ; BSR set to: 0
  1334                           ;main.c: 72:     unsigned int start_time[] = {0, 0, 0, 0, 0, 0, 2021, 0};
  1335  002188  EE21  F08D         	lfsr	2,main@F14550
  1336  00218C  EE12  F056         	lfsr	1,main@start_time
  1337  002190  0E0F               	movlw	15
  1338  002192                     u5781:
  1339  002192  CFDB FFE3          	movff	plusw2,plusw1
  1340  002196  06E8               	decf	wreg,f,c
  1341  002198  E2FC               	bc	u5781
  1342  00219A                     
  1343                           ; BSR set to: 0
  1344                           ;main.c: 74:     seconds_counter = start_time[0];
  1345  00219A  C256  F19F         	movff	main@start_time,_seconds_counter
  1346  00219E  C257  F1A0         	movff	main@start_time+1,_seconds_counter+1
  1347  0021A2                     
  1348                           ; BSR set to: 0
  1349                           ;main.c: 76:     unsigned int prev_sec = 0;
  1350  0021A2  0E00               	movlw	0
  1351  0021A4  0102               	movlb	2	; () banked
  1352  0021A6  6F51               	movwf	(main@prev_sec+1)& (0+255),b
  1353  0021A8  0E00               	movlw	0
  1354  0021AA  6F50               	movwf	main@prev_sec& (0+255),b
  1355  0021AC                     l4992:
  1356                           
  1357                           ;main.c: 83:     {;main.c: 84:         if (seconds_counter != prev_sec)
  1358  0021AC  0102               	movlb	2	; () banked
  1359  0021AE  5150               	movf	main@prev_sec& (0+255),w,b
  1360  0021B0  0101               	movlb	1	; () banked
  1361  0021B2  199F               	xorwf	_seconds_counter& (0+255),w,b
  1362  0021B4  E10B               	bnz	u5790
  1363  0021B6  0102               	movlb	2	; () banked
  1364  0021B8  5151               	movf	(main@prev_sec+1)& (0+255),w,b
  1365  0021BA  0101               	movlb	1	; () banked
  1366  0021BC  19A0               	xorwf	(_seconds_counter+1)& (0+255),w,b
  1367  0021BE  B4D8               	btfsc	status,2,c
  1368  0021C0  EFE4  F010         	goto	u5791
  1369  0021C4  EFE6  F010         	goto	u5790
  1370  0021C8                     u5791:
  1371  0021C8  EFD6  F010         	goto	l4992
  1372  0021CC                     u5790:
  1373  0021CC                     
  1374                           ; BSR set to: 1
  1375                           ;main.c: 85:         {;main.c: 87:             unsigned int time = time_now(timebuf, dat
      +                          ebuf,
  1376  0021CC  0E00               	movlw	low main@timebuf
  1377  0021CE  6F16               	movwf	time_now@timebuf& (0+255),b
  1378  0021D0  0E02               	movlw	high main@timebuf
  1379  0021D2  6F17               	movwf	(time_now@timebuf+1)& (0+255),b
  1380  0021D4  0E28               	movlw	low main@datebuf
  1381  0021D6  6F18               	movwf	time_now@datebuf& (0+255),b
  1382  0021D8  0E02               	movlw	high main@datebuf
  1383  0021DA  6F19               	movwf	(time_now@datebuf+1)& (0+255),b
  1384  0021DC  0E9F               	movlw	low _seconds_counter
  1385  0021DE  6F1A               	movwf	time_now@seconds& (0+255),b
  1386  0021E0  0E01               	movlw	high _seconds_counter
  1387  0021E2  6F1B               	movwf	(time_now@seconds+1)& (0+255),b
  1388  0021E4  0E58               	movlw	low (main@start_time+2)
  1389  0021E6  6F1C               	movwf	time_now@minutes& (0+255),b
  1390  0021E8  0E02               	movlw	high (main@start_time+2)
  1391  0021EA  6F1D               	movwf	(time_now@minutes+1)& (0+255),b
  1392  0021EC  0E5A               	movlw	low (main@start_time+4)
  1393  0021EE  6F1E               	movwf	time_now@hours& (0+255),b
  1394  0021F0  0E02               	movlw	high (main@start_time+4)
  1395  0021F2  6F1F               	movwf	(time_now@hours+1)& (0+255),b
  1396  0021F4  0E5C               	movlw	low (main@start_time+6)
  1397  0021F6  6F20               	movwf	time_now@weekdays& (0+255),b
  1398  0021F8  0E02               	movlw	high (main@start_time+6)
  1399  0021FA  6F21               	movwf	(time_now@weekdays+1)& (0+255),b
  1400  0021FC  0E5E               	movlw	low (main@start_time+8)
  1401  0021FE  6F22               	movwf	time_now@days& (0+255),b
  1402  002200  0E02               	movlw	high (main@start_time+8)
  1403  002202  6F23               	movwf	(time_now@days+1)& (0+255),b
  1404  002204  0E60               	movlw	low (main@start_time+10)
  1405  002206  6F24               	movwf	time_now@months& (0+255),b
  1406  002208  0E02               	movlw	high (main@start_time+10)
  1407  00220A  6F25               	movwf	(time_now@months+1)& (0+255),b
  1408  00220C  0E62               	movlw	low (main@start_time+12)
  1409  00220E  6F26               	movwf	time_now@years& (0+255),b
  1410  002210  0E02               	movlw	high (main@start_time+12)
  1411  002212  6F27               	movwf	(time_now@years+1)& (0+255),b
  1412  002214  0E64               	movlw	low (main@start_time+14)
  1413  002216  6F28               	movwf	time_now@season& (0+255),b
  1414  002218  0E02               	movlw	high (main@start_time+14)
  1415  00221A  6F29               	movwf	(time_now@season+1)& (0+255),b
  1416  00221C  EC17  F007         	call	_time_now	;wreg free
  1417  002220  C116  F254         	movff	?_time_now,main@time
  1418  002224  C117  F255         	movff	?_time_now+1,main@time+1
  1419  002228                     
  1420                           ;main.c: 94:             if ((sun != prev_sun) && (!sun))
  1421  002228  0102               	movlb	2	; () banked
  1422  00222A  5152               	movf	main@prev_sun& (0+255),w,b
  1423  00222C  0100               	movlb	0	; () banked
  1424  00222E  19E2               	xorwf	_sun& (0+255),w,b
  1425  002230  B4D8               	btfsc	status,2,c
  1426  002232  EF1D  F011         	goto	u5801
  1427  002236  EF1F  F011         	goto	u5800
  1428  00223A                     u5801:
  1429  00223A  EF3A  F011         	goto	l5004
  1430  00223E                     u5800:
  1431  00223E                     
  1432                           ; BSR set to: 0
  1433  00223E  51E2               	movf	_sun& (0+255),w,b
  1434  002240  A4D8               	btfss	status,2,c
  1435  002242  EF25  F011         	goto	u5811
  1436  002246  EF27  F011         	goto	u5810
  1437  00224A                     u5811:
  1438  00224A  EF3A  F011         	goto	l5004
  1439  00224E                     u5810:
  1440  00224E                     
  1441                           ; BSR set to: 0
  1442                           ;main.c: 95:             {;main.c: 96:                 start_time[1] = 0;
  1443  00224E  0E00               	movlw	0
  1444  002250  0102               	movlb	2	; () banked
  1445  002252  6F59               	movwf	(main@start_time+3)& (0+255),b
  1446  002254  0E00               	movlw	0
  1447  002256  6F58               	movwf	(main@start_time+2)& (0+255),b
  1448                           
  1449                           ;main.c: 97:                 start_time[2] = 12;
  1450  002258  0E00               	movlw	0
  1451  00225A  6F5B               	movwf	(main@start_time+5)& (0+255),b
  1452  00225C  0E0C               	movlw	12
  1453  00225E  6F5A               	movwf	(main@start_time+4)& (0+255),b
  1454  002260                     
  1455                           ; BSR set to: 2
  1456                           ;main.c: 98:                 seconds_counter = seconds_check/2;
  1457  002260  90D8               	bcf	status,0,c
  1458  002262  0101               	movlb	1	; () banked
  1459  002264  319E               	rrcf	(_seconds_check+1)& (0+255),w,b
  1460  002266  0100               	movlb	0	; () banked
  1461  002268  6FD8               	movwf	??_main& (0+255),b
  1462  00226A  0101               	movlb	1	; () banked
  1463  00226C  319D               	rrcf	_seconds_check& (0+255),w,b
  1464  00226E  6F9F               	movwf	_seconds_counter& (0+255),b
  1465  002270  C0D8  F1A0         	movff	??_main,_seconds_counter+1
  1466  002274                     l5004:
  1467                           
  1468                           ;main.c: 103:             LATDbits.LATD7 = sun;
  1469  002274  0100               	movlb	0	; () banked
  1470  002276  B1E2               	btfsc	_sun& (0+255),0,b
  1471  002278  D002               	bra	u5825
  1472  00227A  9E7C               	bcf	124,7,c	;volatile
  1473  00227C  D001               	bra	u5826
  1474  00227E                     u5825:
  1475  00227E  8E7C               	bsf	124,7,c	;volatile
  1476  002280                     u5826:
  1477  002280                     
  1478                           ;main.c: 106:             LATHbits.LATH3 = !(((time > 0) && (time < 6)) || sun);
  1479  002280  0E00               	movlw	0
  1480  002282  0102               	movlb	2	; () banked
  1481  002284  6F53               	movwf	_main$1252& (0+255),b
  1482  002286  5154               	movf	main@time& (0+255),w,b
  1483  002288  1155               	iorwf	(main@time+1)& (0+255),w,b
  1484  00228A  B4D8               	btfsc	status,2,c
  1485  00228C  EF4A  F011         	goto	u5831
  1486  002290  EF4C  F011         	goto	u5830
  1487  002294                     u5831:
  1488  002294  EF57  F011         	goto	l5010
  1489  002298                     u5830:
  1490  002298                     
  1491                           ; BSR set to: 2
  1492  002298  5155               	movf	(main@time+1)& (0+255),w,b
  1493  00229A  E109               	bnz	u5840
  1494  00229C  0E06               	movlw	6
  1495  00229E  5D54               	subwf	main@time& (0+255),w,b
  1496  0022A0  A0D8               	btfss	status,0,c
  1497  0022A2  EF55  F011         	goto	u5841
  1498  0022A6  EF57  F011         	goto	u5840
  1499  0022AA                     u5841:
  1500  0022AA  EF63  F011         	goto	l5014
  1501  0022AE                     u5840:
  1502  0022AE                     l5010:
  1503                           
  1504                           ; BSR set to: 2
  1505  0022AE  0100               	movlb	0	; () banked
  1506  0022B0  51E2               	movf	_sun& (0+255),w,b
  1507  0022B2  A4D8               	btfss	status,2,c
  1508  0022B4  EF5E  F011         	goto	u5851
  1509  0022B8  EF60  F011         	goto	u5850
  1510  0022BC                     u5851:
  1511  0022BC  EF63  F011         	goto	l5014
  1512  0022C0                     u5850:
  1513  0022C0                     
  1514                           ; BSR set to: 0
  1515  0022C0  0E01               	movlw	1
  1516  0022C2  0102               	movlb	2	; () banked
  1517  0022C4  6F53               	movwf	_main$1252& (0+255),b
  1518  0022C6                     l5014:
  1519  0022C6  0102               	movlb	2	; () banked
  1520  0022C8  B153               	btfsc	_main$1252& (0+255),0,b
  1521  0022CA  D002               	bra	u5865
  1522  0022CC  9680               	bcf	128,3,c	;volatile
  1523  0022CE  D001               	bra	u5866
  1524  0022D0                     u5865:
  1525  0022D0  8680               	bsf	128,3,c	;volatile
  1526  0022D2                     u5866:
  1527  0022D2                     
  1528                           ;main.c: 108:             LEDarray_disp_bin(time);
  1529  0022D2  C254  F075         	movff	main@time,LEDarray_disp_bin@number
  1530  0022D6  C255  F076         	movff	main@time+1,LEDarray_disp_bin@number+1
  1531  0022DA  EC7B  F018         	call	_LEDarray_disp_bin	;wreg free
  1532  0022DE                     
  1533                           ;main.c: 112:             LCD_setline(1);
  1534  0022DE  0E01               	movlw	1
  1535  0022E0  EC58  F01C         	call	_LCD_setline
  1536  0022E4                     
  1537                           ;main.c: 113:             LCD_sendstring(timebuf);
  1538  0022E4  0E00               	movlw	low main@timebuf
  1539  0022E6  0100               	movlb	0	; () banked
  1540  0022E8  6F78               	movwf	LCD_sendstring@string& (0+255),b
  1541  0022EA  0E02               	movlw	high main@timebuf
  1542  0022EC  6F79               	movwf	(LCD_sendstring@string+1)& (0+255),b
  1543  0022EE  ECF0  F01C         	call	_LCD_sendstring	;wreg free
  1544  0022F2                     
  1545                           ;main.c: 115:             LCD_setline(2);
  1546  0022F2  0E02               	movlw	2
  1547  0022F4  EC58  F01C         	call	_LCD_setline
  1548  0022F8                     
  1549                           ;main.c: 116:             LCD_sendstring(datebuf);
  1550  0022F8  0E28               	movlw	low main@datebuf
  1551  0022FA  0100               	movlb	0	; () banked
  1552  0022FC  6F78               	movwf	LCD_sendstring@string& (0+255),b
  1553  0022FE  0E02               	movlw	high main@datebuf
  1554  002300  6F79               	movwf	(LCD_sendstring@string+1)& (0+255),b
  1555  002302  ECF0  F01C         	call	_LCD_sendstring	;wreg free
  1556  002306                     
  1557                           ;main.c: 118:             LCD_sendbyte(0b00000010, 0);
  1558  002306  0E00               	movlw	0
  1559  002308  0100               	movlb	0	; () banked
  1560  00230A  6F76               	movwf	LCD_sendbyte@type& (0+255),b
  1561  00230C  0E02               	movlw	2
  1562  00230E  EC43  F01D         	call	_LCD_sendbyte
  1563  002312                     
  1564                           ;main.c: 121:             prev_sec = seconds_counter;
  1565  002312  C19F  F250         	movff	_seconds_counter,main@prev_sec
  1566  002316  C1A0  F251         	movff	_seconds_counter+1,main@prev_sec+1
  1567  00231A                     
  1568                           ;main.c: 122:             prev_sun = sun;
  1569  00231A  C0E2  F252         	movff	_sun,main@prev_sun
  1570  00231E  EFD6  F010         	goto	l4992
  1571  002322  EF6D  F000         	goto	start
  1572  002326                     __end_of_main:
  1573                           	callstack 0
  1574                           
  1575 ;; *************** function _time_now *****************
  1576 ;; Defined at:
  1577 ;;		line 22 in file "datetime.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;  timebuf         2   22[BANK1 ] PTR unsigned char 
  1580 ;;		 -> main@timebuf(40), 
  1581 ;;  datebuf         2   24[BANK1 ] PTR unsigned char 
  1582 ;;		 -> main@datebuf(40), 
  1583 ;;  seconds         2   26[BANK1 ] PTR unsigned int 
  1584 ;;		 -> seconds_counter(2), 
  1585 ;;  minutes         2   28[BANK1 ] PTR unsigned int 
  1586 ;;		 -> main@start_time(16), 
  1587 ;;  hours           2   30[BANK1 ] PTR unsigned int 
  1588 ;;		 -> main@start_time(16), 
  1589 ;;  weekdays        2   32[BANK1 ] PTR unsigned int 
  1590 ;;		 -> main@start_time(16), 
  1591 ;;  days            2   34[BANK1 ] PTR unsigned int 
  1592 ;;		 -> main@start_time(16), 
  1593 ;;  months          2   36[BANK1 ] PTR unsigned int 
  1594 ;;		 -> main@start_time(16), 
  1595 ;;  years           2   38[BANK1 ] PTR unsigned int 
  1596 ;;		 -> main@start_time(16), 
  1597 ;;  season          2   40[BANK1 ] PTR unsigned int 
  1598 ;;		 -> main@start_time(16), 
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;  daylist        70   42[BANK1 ] unsigned char [10][7]
  1601 ;;  month_days     24  114[BANK1 ] unsigned int [12]
  1602 ;;  cur_month       2  139[BANK1 ] unsigned int 
  1603 ;;  leap            1  138[BANK1 ] _Bool 
  1604 ;; Return value:  Size  Location     Type
  1605 ;;                  2   22[BANK1 ] unsigned int 
  1606 ;; Registers used:
  1607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1608 ;; Tracked objects:
  1609 ;;		On entry : 0/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1613 ;;      Params:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1614 ;;      Locals:         0       0      99       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1615 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1616 ;;      Totals:         0       4     119       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1617 ;;Total ram usage:      123 bytes
  1618 ;; Hardware stack levels used:    1
  1619 ;; Hardware stack levels required when called:   18
  1620 ;; This function calls:
  1621 ;;		___lwdiv
  1622 ;;		___lwmod
  1623 ;;		___wmul
  1624 ;;		_sprintf
  1625 ;; This function is called by:
  1626 ;;		_main
  1627 ;; This function uses a non-reentrant model
  1628 ;;
  1629                           
  1630                           	psect	text1
  1631  000E2E                     __ptext1:
  1632                           	callstack 0
  1633  000E2E                     _time_now:
  1634                           	callstack 12
  1635  000E2E                     
  1636                           ;datetime.c: 22: unsigned int time_now(char *timebuf, char *datebuf,;datetime.c: 23:    
      +                                               unsigned int *seconds, unsigned int *minutes,;datetime.c: 24:      
      +                                             unsigned int *hours, unsigned int *weekdays,;datetime.c: 25:         
      +                                          unsigned int *days, unsigned int *months,;datetime.c: 26:               
      +                                    unsigned int *years, unsigned int *season);datetime.c: 27: {;datetime.c: 29:  
      +                             _Bool leap = !(*years % 4);
  1637  000E2E  C126  FFD9         	movff	time_now@years,fsr2l
  1638  000E32  C127  FFDA         	movff	time_now@years+1,fsr2h
  1639  000E36  CFDE F0D4          	movff	postinc2,??_time_now
  1640  000E3A  CFDD F0D5          	movff	postdec2,??_time_now+1
  1641  000E3E  0E03               	movlw	3
  1642  000E40  0100               	movlb	0	; () banked
  1643  000E42  17D4               	andwf	??_time_now& (0+255),f,b
  1644  000E44  0E00               	movlw	0
  1645  000E46  17D5               	andwf	(??_time_now+1)& (0+255),f,b
  1646  000E48  51D4               	movf	??_time_now& (0+255),w,b
  1647  000E4A  11D5               	iorwf	(??_time_now+1)& (0+255),w,b
  1648  000E4C  B4D8               	btfsc	status,2,c
  1649  000E4E  EF2B  F007         	goto	u5601
  1650  000E52  EF2E  F007         	goto	u5600
  1651  000E56                     u5601:
  1652  000E56  0E01               	movlw	1
  1653  000E58  EF2F  F007         	goto	u5610
  1654  000E5C                     u5600:
  1655  000E5C  0E00               	movlw	0
  1656  000E5E                     u5610:
  1657  000E5E  0101               	movlb	1	; () banked
  1658  000E60  6F8A               	movwf	time_now@leap& (0+255),b
  1659                           
  1660                           ;datetime.c: 32:     unsigned int month_days[] = {31, 28 + leap, 31, 30, 31, 30,
  1661  000E62  EE21  F072         	lfsr	2,time_now@month_days
  1662  000E66  0E17               	movlw	23
  1663  000E68                     u5621:
  1664  000E68  6ADE               	clrf	postinc2,c
  1665  000E6A  06E8               	decf	wreg,f,c
  1666  000E6C  E2FD               	bc	u5621
  1667  000E6E                     
  1668                           ; BSR set to: 1
  1669  000E6E  0E00               	movlw	0
  1670  000E70  6F73               	movwf	(time_now@month_days+1)& (0+255),b
  1671  000E72  0E1F               	movlw	31
  1672  000E74  6F72               	movwf	time_now@month_days& (0+255),b
  1673  000E76                     
  1674                           ; BSR set to: 1
  1675  000E76  0E1C               	movlw	28
  1676  000E78  258A               	addwf	time_now@leap& (0+255),w,b
  1677  000E7A  6F74               	movwf	(time_now@month_days+2)& (0+255),b
  1678  000E7C  6B75               	clrf	(time_now@month_days+3)& (0+255),b
  1679  000E7E  0E00               	movlw	0
  1680  000E80  2375               	addwfc	(time_now@month_days+3)& (0+255),f,b
  1681  000E82                     
  1682                           ; BSR set to: 1
  1683  000E82  0E00               	movlw	0
  1684  000E84  6F77               	movwf	(time_now@month_days+5)& (0+255),b
  1685  000E86  0E1F               	movlw	31
  1686  000E88  6F76               	movwf	(time_now@month_days+4)& (0+255),b
  1687  000E8A                     
  1688                           ; BSR set to: 1
  1689  000E8A  0E00               	movlw	0
  1690  000E8C  6F79               	movwf	(time_now@month_days+7)& (0+255),b
  1691  000E8E  0E1E               	movlw	30
  1692  000E90  6F78               	movwf	(time_now@month_days+6)& (0+255),b
  1693  000E92                     
  1694                           ; BSR set to: 1
  1695  000E92  0E00               	movlw	0
  1696  000E94  6F7B               	movwf	(time_now@month_days+9)& (0+255),b
  1697  000E96  0E1F               	movlw	31
  1698  000E98  6F7A               	movwf	(time_now@month_days+8)& (0+255),b
  1699  000E9A                     
  1700                           ; BSR set to: 1
  1701  000E9A  0E00               	movlw	0
  1702  000E9C  6F7D               	movwf	(time_now@month_days+11)& (0+255),b
  1703  000E9E  0E1E               	movlw	30
  1704  000EA0  6F7C               	movwf	(time_now@month_days+10)& (0+255),b
  1705  000EA2                     
  1706                           ; BSR set to: 1
  1707  000EA2  0E00               	movlw	0
  1708  000EA4  6F7F               	movwf	(time_now@month_days+13)& (0+255),b
  1709  000EA6  0E1F               	movlw	31
  1710  000EA8  6F7E               	movwf	(time_now@month_days+12)& (0+255),b
  1711  000EAA                     
  1712                           ; BSR set to: 1
  1713  000EAA  0E00               	movlw	0
  1714  000EAC  6F81               	movwf	(time_now@month_days+15)& (0+255),b
  1715  000EAE  0E1F               	movlw	31
  1716  000EB0  6F80               	movwf	(time_now@month_days+14)& (0+255),b
  1717  000EB2                     
  1718                           ; BSR set to: 1
  1719  000EB2  0E00               	movlw	0
  1720  000EB4  6F83               	movwf	(time_now@month_days+17)& (0+255),b
  1721  000EB6  0E1E               	movlw	30
  1722  000EB8  6F82               	movwf	(time_now@month_days+16)& (0+255),b
  1723  000EBA                     
  1724                           ; BSR set to: 1
  1725  000EBA  0E00               	movlw	0
  1726  000EBC  6F85               	movwf	(time_now@month_days+19)& (0+255),b
  1727  000EBE  0E1F               	movlw	31
  1728  000EC0  6F84               	movwf	(time_now@month_days+18)& (0+255),b
  1729  000EC2                     
  1730                           ; BSR set to: 1
  1731  000EC2  0E00               	movlw	0
  1732  000EC4  6F87               	movwf	(time_now@month_days+21)& (0+255),b
  1733  000EC6  0E1E               	movlw	30
  1734  000EC8  6F86               	movwf	(time_now@month_days+20)& (0+255),b
  1735  000ECA                     
  1736                           ; BSR set to: 1
  1737  000ECA  0E00               	movlw	0
  1738  000ECC  6F89               	movwf	(time_now@month_days+23)& (0+255),b
  1739  000ECE  0E1F               	movlw	31
  1740  000ED0  6F88               	movwf	(time_now@month_days+22)& (0+255),b
  1741  000ED2                     
  1742                           ; BSR set to: 1
  1743                           ;datetime.c: 35:     unsigned int cur_month = month_days[*months];
  1744  000ED2  C124  FFD9         	movff	time_now@months,fsr2l
  1745  000ED6  C125  FFDA         	movff	time_now@months+1,fsr2h
  1746  000EDA  CFDE F0D4          	movff	postinc2,??_time_now
  1747  000EDE  CFDD F0D5          	movff	postdec2,??_time_now+1
  1748  000EE2  90D8               	bcf	status,0,c
  1749  000EE4  0100               	movlb	0	; () banked
  1750  000EE6  37D4               	rlcf	??_time_now& (0+255),f,b
  1751  000EE8  37D5               	rlcf	(??_time_now+1)& (0+255),f,b
  1752  000EEA  0E72               	movlw	low time_now@month_days
  1753  000EEC  25D4               	addwf	??_time_now& (0+255),w,b
  1754  000EEE  6ED9               	movwf	fsr2l,c
  1755  000EF0  0E01               	movlw	high time_now@month_days
  1756  000EF2  21D5               	addwfc	(??_time_now+1)& (0+255),w,b
  1757  000EF4  6EDA               	movwf	fsr2h,c
  1758  000EF6  CFDE F18B          	movff	postinc2,time_now@cur_month
  1759  000EFA  CFDD F18C          	movff	postdec2,time_now@cur_month+1
  1760  000EFE                     
  1761                           ; BSR set to: 0
  1762                           ;datetime.c: 39:     if ((*months == 2) && (*days > 23) && (*weekdays == 6) && (*hours =
      +                          = 1))
  1763  000EFE  C124  FFD9         	movff	time_now@months,fsr2l
  1764  000F02  C125  FFDA         	movff	time_now@months+1,fsr2h
  1765  000F06  0E02               	movlw	2
  1766  000F08  18DE               	xorwf	postinc2,w,c
  1767  000F0A  10DE               	iorwf	postinc2,w,c
  1768  000F0C  A4D8               	btfss	status,2,c
  1769  000F0E  EF8B  F007         	goto	u5631
  1770  000F12  EF8D  F007         	goto	u5630
  1771  000F16                     u5631:
  1772  000F16  EFC7  F007         	goto	l4868
  1773  000F1A                     u5630:
  1774  000F1A                     
  1775                           ; BSR set to: 0
  1776  000F1A  C122  FFD9         	movff	time_now@days,fsr2l
  1777  000F1E  C123  FFDA         	movff	time_now@days+1,fsr2h
  1778  000F22  0E01               	movlw	1
  1779  000F24  50DB               	movf	plusw2,w,c
  1780  000F26  E109               	bnz	u5640
  1781  000F28  0E18               	movlw	24
  1782  000F2A  5CDE               	subwf	postinc2,w,c
  1783  000F2C  A0D8               	btfss	status,0,c
  1784  000F2E  EF9B  F007         	goto	u5641
  1785  000F32  EF9D  F007         	goto	u5640
  1786  000F36                     u5641:
  1787  000F36  EFC7  F007         	goto	l4868
  1788  000F3A                     u5640:
  1789  000F3A                     
  1790                           ; BSR set to: 0
  1791  000F3A  C120  FFD9         	movff	time_now@weekdays,fsr2l
  1792  000F3E  C121  FFDA         	movff	time_now@weekdays+1,fsr2h
  1793  000F42  0E06               	movlw	6
  1794  000F44  18DE               	xorwf	postinc2,w,c
  1795  000F46  10DE               	iorwf	postinc2,w,c
  1796  000F48  A4D8               	btfss	status,2,c
  1797  000F4A  EFA9  F007         	goto	u5651
  1798  000F4E  EFAB  F007         	goto	u5650
  1799  000F52                     u5651:
  1800  000F52  EFC7  F007         	goto	l4868
  1801  000F56                     u5650:
  1802  000F56                     
  1803                           ; BSR set to: 0
  1804  000F56  C11E  FFD9         	movff	time_now@hours,fsr2l
  1805  000F5A  C11F  FFDA         	movff	time_now@hours+1,fsr2h
  1806  000F5E  04DE               	decf	postinc2,w,c
  1807  000F60  10DE               	iorwf	postinc2,w,c
  1808  000F62  A4D8               	btfss	status,2,c
  1809  000F64  EFB6  F007         	goto	u5661
  1810  000F68  EFB8  F007         	goto	u5660
  1811  000F6C                     u5661:
  1812  000F6C  EFC7  F007         	goto	l4868
  1813  000F70                     u5660:
  1814  000F70                     
  1815                           ; BSR set to: 0
  1816                           ;datetime.c: 40:     {;datetime.c: 41:         *season = 1;
  1817  000F70  C128  FFD9         	movff	time_now@season,fsr2l
  1818  000F74  C129  FFDA         	movff	time_now@season+1,fsr2h
  1819  000F78  0E01               	movlw	1
  1820  000F7A  6EDE               	movwf	postinc2,c
  1821  000F7C  0E00               	movlw	0
  1822  000F7E  6EDD               	movwf	postdec2,c
  1823  000F80                     
  1824                           ; BSR set to: 0
  1825                           ;datetime.c: 42:         *hours += 1;
  1826  000F80  C11E  FFD9         	movff	time_now@hours,fsr2l
  1827  000F84  C11F  FFDA         	movff	time_now@hours+1,fsr2h
  1828  000F88  2ADE               	incf	postinc2,f,c
  1829  000F8A  0E00               	movlw	0
  1830  000F8C  22DD               	addwfc	postdec2,f,c
  1831  000F8E                     l4868:
  1832                           
  1833                           ; BSR set to: 0
  1834                           ;datetime.c: 46:     if ((*months == 9) && (*days > 23) && (*weekdays == 6) && (*hours =
      +                          = 2)
  1835  000F8E  C124  FFD9         	movff	time_now@months,fsr2l
  1836  000F92  C125  FFDA         	movff	time_now@months+1,fsr2h
  1837  000F96  0E09               	movlw	9
  1838  000F98  18DE               	xorwf	postinc2,w,c
  1839  000F9A  10DE               	iorwf	postinc2,w,c
  1840  000F9C  A4D8               	btfss	status,2,c
  1841  000F9E  EFD3  F007         	goto	u5671
  1842  000FA2  EFD5  F007         	goto	u5670
  1843  000FA6                     u5671:
  1844  000FA6  EF1D  F008         	goto	l4882
  1845  000FAA                     u5670:
  1846  000FAA                     
  1847                           ; BSR set to: 0
  1848  000FAA  C122  FFD9         	movff	time_now@days,fsr2l
  1849  000FAE  C123  FFDA         	movff	time_now@days+1,fsr2h
  1850  000FB2  0E01               	movlw	1
  1851  000FB4  50DB               	movf	plusw2,w,c
  1852  000FB6  E109               	bnz	u5680
  1853  000FB8  0E18               	movlw	24
  1854  000FBA  5CDE               	subwf	postinc2,w,c
  1855  000FBC  A0D8               	btfss	status,0,c
  1856  000FBE  EFE3  F007         	goto	u5681
  1857  000FC2  EFE5  F007         	goto	u5680
  1858  000FC6                     u5681:
  1859  000FC6  EF1D  F008         	goto	l4882
  1860  000FCA                     u5680:
  1861  000FCA                     
  1862                           ; BSR set to: 0
  1863  000FCA  C120  FFD9         	movff	time_now@weekdays,fsr2l
  1864  000FCE  C121  FFDA         	movff	time_now@weekdays+1,fsr2h
  1865  000FD2  0E06               	movlw	6
  1866  000FD4  18DE               	xorwf	postinc2,w,c
  1867  000FD6  10DE               	iorwf	postinc2,w,c
  1868  000FD8  A4D8               	btfss	status,2,c
  1869  000FDA  EFF1  F007         	goto	u5691
  1870  000FDE  EFF3  F007         	goto	u5690
  1871  000FE2                     u5691:
  1872  000FE2  EF1D  F008         	goto	l4882
  1873  000FE6                     u5690:
  1874  000FE6                     
  1875                           ; BSR set to: 0
  1876  000FE6  C11E  FFD9         	movff	time_now@hours,fsr2l
  1877  000FEA  C11F  FFDA         	movff	time_now@hours+1,fsr2h
  1878  000FEE  0E02               	movlw	2
  1879  000FF0  18DE               	xorwf	postinc2,w,c
  1880  000FF2  10DE               	iorwf	postinc2,w,c
  1881  000FF4  A4D8               	btfss	status,2,c
  1882  000FF6  EFFF  F007         	goto	u5701
  1883  000FFA  EF01  F008         	goto	u5700
  1884  000FFE                     u5701:
  1885  000FFE  EF1D  F008         	goto	l4882
  1886  001002                     u5700:
  1887  001002                     
  1888                           ; BSR set to: 0
  1889  001002  C128  FFD9         	movff	time_now@season,fsr2l
  1890  001006  C129  FFDA         	movff	time_now@season+1,fsr2h
  1891  00100A  04DE               	decf	postinc2,w,c
  1892  00100C  10DE               	iorwf	postinc2,w,c
  1893  00100E  A4D8               	btfss	status,2,c
  1894  001010  EF0C  F008         	goto	u5711
  1895  001014  EF0E  F008         	goto	u5710
  1896  001018                     u5711:
  1897  001018  EF1D  F008         	goto	l4882
  1898  00101C                     u5710:
  1899  00101C                     
  1900                           ; BSR set to: 0
  1901                           ;datetime.c: 48:     {;datetime.c: 49:         *season = 0;
  1902  00101C  C128  FFD9         	movff	time_now@season,fsr2l
  1903  001020  C129  FFDA         	movff	time_now@season+1,fsr2h
  1904  001024  0E00               	movlw	0
  1905  001026  6EDE               	movwf	postinc2,c
  1906  001028  0E00               	movlw	0
  1907  00102A  6EDD               	movwf	postdec2,c
  1908  00102C                     
  1909                           ; BSR set to: 0
  1910                           ;datetime.c: 50:         *hours -= 1;
  1911  00102C  C11E  FFD9         	movff	time_now@hours,fsr2l
  1912  001030  C11F  FFDA         	movff	time_now@hours+1,fsr2h
  1913  001034  06DE               	decf	postinc2,f,c
  1914  001036  0E00               	movlw	0
  1915  001038  5ADD               	subwfb	postdec2,f,c
  1916  00103A                     l4882:
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;datetime.c: 53:     *minutes += *seconds / 60;
  1920  00103A  C11A  FFD9         	movff	time_now@seconds,fsr2l
  1921  00103E  C11B  FFDA         	movff	time_now@seconds+1,fsr2h
  1922  001042  CFDE F075          	movff	postinc2,___lwdiv@dividend
  1923  001046  CFDD F076          	movff	postdec2,___lwdiv@dividend+1
  1924  00104A  0E00               	movlw	0
  1925  00104C  6F78               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1926  00104E  0E3C               	movlw	60
  1927  001050  6F77               	movwf	___lwdiv@divisor& (0+255),b
  1928  001052  EC47  F01A         	call	___lwdiv	;wreg free
  1929  001056  C11C  FFD9         	movff	time_now@minutes,fsr2l
  1930  00105A  C11D  FFDA         	movff	time_now@minutes+1,fsr2h
  1931  00105E  0100               	movlb	0	; () banked
  1932  001060  5175               	movf	?___lwdiv& (0+255),w,b
  1933  001062  26DE               	addwf	postinc2,f,c
  1934  001064  5176               	movf	(?___lwdiv+1)& (0+255),w,b
  1935  001066  22DD               	addwfc	postdec2,f,c
  1936  001068                     
  1937                           ; BSR set to: 0
  1938                           ;datetime.c: 54:     *seconds %= 60;
  1939  001068  C11A  FFD9         	movff	time_now@seconds,fsr2l
  1940  00106C  C11B  FFDA         	movff	time_now@seconds+1,fsr2h
  1941  001070  CFDE F075          	movff	postinc2,___lwmod@dividend
  1942  001074  CFDD F076          	movff	postdec2,___lwmod@dividend+1
  1943  001078  0E00               	movlw	0
  1944  00107A  6F78               	movwf	(___lwmod@divisor+1)& (0+255),b
  1945  00107C  0E3C               	movlw	60
  1946  00107E  6F77               	movwf	___lwmod@divisor& (0+255),b
  1947  001080  ECEB  F01A         	call	___lwmod	;wreg free
  1948  001084  C11A  FFD9         	movff	time_now@seconds,fsr2l
  1949  001088  C11B  FFDA         	movff	time_now@seconds+1,fsr2h
  1950  00108C  0100               	movlb	0	; () banked
  1951  00108E  C075  FFDE         	movff	?___lwmod,postinc2
  1952  001092  C076  FFDD         	movff	?___lwmod+1,postdec2
  1953  001096                     
  1954                           ; BSR set to: 0
  1955                           ;datetime.c: 55:     *hours += *minutes / 60;
  1956  001096  C11C  FFD9         	movff	time_now@minutes,fsr2l
  1957  00109A  C11D  FFDA         	movff	time_now@minutes+1,fsr2h
  1958  00109E  CFDE F075          	movff	postinc2,___lwdiv@dividend
  1959  0010A2  CFDD F076          	movff	postdec2,___lwdiv@dividend+1
  1960  0010A6  0E00               	movlw	0
  1961  0010A8  6F78               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1962  0010AA  0E3C               	movlw	60
  1963  0010AC  6F77               	movwf	___lwdiv@divisor& (0+255),b
  1964  0010AE  EC47  F01A         	call	___lwdiv	;wreg free
  1965  0010B2  C11E  FFD9         	movff	time_now@hours,fsr2l
  1966  0010B6  C11F  FFDA         	movff	time_now@hours+1,fsr2h
  1967  0010BA  0100               	movlb	0	; () banked
  1968  0010BC  5175               	movf	?___lwdiv& (0+255),w,b
  1969  0010BE  26DE               	addwf	postinc2,f,c
  1970  0010C0  5176               	movf	(?___lwdiv+1)& (0+255),w,b
  1971  0010C2  22DD               	addwfc	postdec2,f,c
  1972  0010C4                     
  1973                           ; BSR set to: 0
  1974                           ;datetime.c: 56:     *minutes %= 60;
  1975  0010C4  C11C  FFD9         	movff	time_now@minutes,fsr2l
  1976  0010C8  C11D  FFDA         	movff	time_now@minutes+1,fsr2h
  1977  0010CC  CFDE F075          	movff	postinc2,___lwmod@dividend
  1978  0010D0  CFDD F076          	movff	postdec2,___lwmod@dividend+1
  1979  0010D4  0E00               	movlw	0
  1980  0010D6  6F78               	movwf	(___lwmod@divisor+1)& (0+255),b
  1981  0010D8  0E3C               	movlw	60
  1982  0010DA  6F77               	movwf	___lwmod@divisor& (0+255),b
  1983  0010DC  ECEB  F01A         	call	___lwmod	;wreg free
  1984  0010E0  C11C  FFD9         	movff	time_now@minutes,fsr2l
  1985  0010E4  C11D  FFDA         	movff	time_now@minutes+1,fsr2h
  1986  0010E8  0100               	movlb	0	; () banked
  1987  0010EA  C075  FFDE         	movff	?___lwmod,postinc2
  1988  0010EE  C076  FFDD         	movff	?___lwmod+1,postdec2
  1989  0010F2                     
  1990                           ; BSR set to: 0
  1991                           ;datetime.c: 57:     *days += *hours / 24;
  1992  0010F2  C11E  FFD9         	movff	time_now@hours,fsr2l
  1993  0010F6  C11F  FFDA         	movff	time_now@hours+1,fsr2h
  1994  0010FA  CFDE F075          	movff	postinc2,___lwdiv@dividend
  1995  0010FE  CFDD F076          	movff	postdec2,___lwdiv@dividend+1
  1996  001102  0E00               	movlw	0
  1997  001104  6F78               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1998  001106  0E18               	movlw	24
  1999  001108  6F77               	movwf	___lwdiv@divisor& (0+255),b
  2000  00110A  EC47  F01A         	call	___lwdiv	;wreg free
  2001  00110E  C122  FFD9         	movff	time_now@days,fsr2l
  2002  001112  C123  FFDA         	movff	time_now@days+1,fsr2h
  2003  001116  0100               	movlb	0	; () banked
  2004  001118  5175               	movf	?___lwdiv& (0+255),w,b
  2005  00111A  26DE               	addwf	postinc2,f,c
  2006  00111C  5176               	movf	(?___lwdiv+1)& (0+255),w,b
  2007  00111E  22DD               	addwfc	postdec2,f,c
  2008  001120                     
  2009                           ; BSR set to: 0
  2010                           ;datetime.c: 58:     *weekdays += *hours / 24;
  2011  001120  C11E  FFD9         	movff	time_now@hours,fsr2l
  2012  001124  C11F  FFDA         	movff	time_now@hours+1,fsr2h
  2013  001128  CFDE F075          	movff	postinc2,___lwdiv@dividend
  2014  00112C  CFDD F076          	movff	postdec2,___lwdiv@dividend+1
  2015  001130  0E00               	movlw	0
  2016  001132  6F78               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2017  001134  0E18               	movlw	24
  2018  001136  6F77               	movwf	___lwdiv@divisor& (0+255),b
  2019  001138  EC47  F01A         	call	___lwdiv	;wreg free
  2020  00113C  C120  FFD9         	movff	time_now@weekdays,fsr2l
  2021  001140  C121  FFDA         	movff	time_now@weekdays+1,fsr2h
  2022  001144  0100               	movlb	0	; () banked
  2023  001146  5175               	movf	?___lwdiv& (0+255),w,b
  2024  001148  26DE               	addwf	postinc2,f,c
  2025  00114A  5176               	movf	(?___lwdiv+1)& (0+255),w,b
  2026  00114C  22DD               	addwfc	postdec2,f,c
  2027  00114E                     
  2028                           ; BSR set to: 0
  2029                           ;datetime.c: 59:     *hours %= 24;
  2030  00114E  C11E  FFD9         	movff	time_now@hours,fsr2l
  2031  001152  C11F  FFDA         	movff	time_now@hours+1,fsr2h
  2032  001156  CFDE F075          	movff	postinc2,___lwmod@dividend
  2033  00115A  CFDD F076          	movff	postdec2,___lwmod@dividend+1
  2034  00115E  0E00               	movlw	0
  2035  001160  6F78               	movwf	(___lwmod@divisor+1)& (0+255),b
  2036  001162  0E18               	movlw	24
  2037  001164  6F77               	movwf	___lwmod@divisor& (0+255),b
  2038  001166  ECEB  F01A         	call	___lwmod	;wreg free
  2039  00116A  C11E  FFD9         	movff	time_now@hours,fsr2l
  2040  00116E  C11F  FFDA         	movff	time_now@hours+1,fsr2h
  2041  001172  0100               	movlb	0	; () banked
  2042  001174  C075  FFDE         	movff	?___lwmod,postinc2
  2043  001178  C076  FFDD         	movff	?___lwmod+1,postdec2
  2044  00117C                     
  2045                           ; BSR set to: 0
  2046                           ;datetime.c: 60:     *months += *days / cur_month;
  2047  00117C  C122  FFD9         	movff	time_now@days,fsr2l
  2048  001180  C123  FFDA         	movff	time_now@days+1,fsr2h
  2049  001184  CFDE F075          	movff	postinc2,___lwdiv@dividend
  2050  001188  CFDD F076          	movff	postdec2,___lwdiv@dividend+1
  2051  00118C  C18B  F077         	movff	time_now@cur_month,___lwdiv@divisor
  2052  001190  C18C  F078         	movff	time_now@cur_month+1,___lwdiv@divisor+1
  2053  001194  EC47  F01A         	call	___lwdiv	;wreg free
  2054  001198  C124  FFD9         	movff	time_now@months,fsr2l
  2055  00119C  C125  FFDA         	movff	time_now@months+1,fsr2h
  2056  0011A0  0100               	movlb	0	; () banked
  2057  0011A2  5175               	movf	?___lwdiv& (0+255),w,b
  2058  0011A4  26DE               	addwf	postinc2,f,c
  2059  0011A6  5176               	movf	(?___lwdiv+1)& (0+255),w,b
  2060  0011A8  22DD               	addwfc	postdec2,f,c
  2061  0011AA                     
  2062                           ; BSR set to: 0
  2063                           ;datetime.c: 62:     *days %= cur_month;
  2064  0011AA  C122  FFD9         	movff	time_now@days,fsr2l
  2065  0011AE  C123  FFDA         	movff	time_now@days+1,fsr2h
  2066  0011B2  CFDE F075          	movff	postinc2,___lwmod@dividend
  2067  0011B6  CFDD F076          	movff	postdec2,___lwmod@dividend+1
  2068  0011BA  C18B  F077         	movff	time_now@cur_month,___lwmod@divisor
  2069  0011BE  C18C  F078         	movff	time_now@cur_month+1,___lwmod@divisor+1
  2070  0011C2  ECEB  F01A         	call	___lwmod	;wreg free
  2071  0011C6  C122  FFD9         	movff	time_now@days,fsr2l
  2072  0011CA  C123  FFDA         	movff	time_now@days+1,fsr2h
  2073  0011CE  0100               	movlb	0	; () banked
  2074  0011D0  C075  FFDE         	movff	?___lwmod,postinc2
  2075  0011D4  C076  FFDD         	movff	?___lwmod+1,postdec2
  2076  0011D8                     
  2077                           ; BSR set to: 0
  2078                           ;datetime.c: 63:     *weekdays %= 7;
  2079  0011D8  C120  FFD9         	movff	time_now@weekdays,fsr2l
  2080  0011DC  C121  FFDA         	movff	time_now@weekdays+1,fsr2h
  2081  0011E0  CFDE F075          	movff	postinc2,___lwmod@dividend
  2082  0011E4  CFDD F076          	movff	postdec2,___lwmod@dividend+1
  2083  0011E8  0E00               	movlw	0
  2084  0011EA  6F78               	movwf	(___lwmod@divisor+1)& (0+255),b
  2085  0011EC  0E07               	movlw	7
  2086  0011EE  6F77               	movwf	___lwmod@divisor& (0+255),b
  2087  0011F0  ECEB  F01A         	call	___lwmod	;wreg free
  2088  0011F4  C120  FFD9         	movff	time_now@weekdays,fsr2l
  2089  0011F8  C121  FFDA         	movff	time_now@weekdays+1,fsr2h
  2090  0011FC  0100               	movlb	0	; () banked
  2091  0011FE  C075  FFDE         	movff	?___lwmod,postinc2
  2092  001202  C076  FFDD         	movff	?___lwmod+1,postdec2
  2093  001206                     
  2094                           ; BSR set to: 0
  2095                           ;datetime.c: 64:     *years += *months / 12;
  2096  001206  C124  FFD9         	movff	time_now@months,fsr2l
  2097  00120A  C125  FFDA         	movff	time_now@months+1,fsr2h
  2098  00120E  CFDE F075          	movff	postinc2,___lwdiv@dividend
  2099  001212  CFDD F076          	movff	postdec2,___lwdiv@dividend+1
  2100  001216  0E00               	movlw	0
  2101  001218  6F78               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2102  00121A  0E0C               	movlw	12
  2103  00121C  6F77               	movwf	___lwdiv@divisor& (0+255),b
  2104  00121E  EC47  F01A         	call	___lwdiv	;wreg free
  2105  001222  C126  FFD9         	movff	time_now@years,fsr2l
  2106  001226  C127  FFDA         	movff	time_now@years+1,fsr2h
  2107  00122A  0100               	movlb	0	; () banked
  2108  00122C  5175               	movf	?___lwdiv& (0+255),w,b
  2109  00122E  26DE               	addwf	postinc2,f,c
  2110  001230  5176               	movf	(?___lwdiv+1)& (0+255),w,b
  2111  001232  22DD               	addwfc	postdec2,f,c
  2112  001234                     
  2113                           ; BSR set to: 0
  2114                           ;datetime.c: 65:     *months %= 12;
  2115  001234  C124  FFD9         	movff	time_now@months,fsr2l
  2116  001238  C125  FFDA         	movff	time_now@months+1,fsr2h
  2117  00123C  CFDE F075          	movff	postinc2,___lwmod@dividend
  2118  001240  CFDD F076          	movff	postdec2,___lwmod@dividend+1
  2119  001244  0E00               	movlw	0
  2120  001246  6F78               	movwf	(___lwmod@divisor+1)& (0+255),b
  2121  001248  0E0C               	movlw	12
  2122  00124A  6F77               	movwf	___lwmod@divisor& (0+255),b
  2123  00124C  ECEB  F01A         	call	___lwmod	;wreg free
  2124  001250  C124  FFD9         	movff	time_now@months,fsr2l
  2125  001254  C125  FFDA         	movff	time_now@months+1,fsr2h
  2126  001258  0100               	movlb	0	; () banked
  2127  00125A  C075  FFDE         	movff	?___lwmod,postinc2
  2128  00125E  C076  FFDD         	movff	?___lwmod+1,postdec2
  2129  001262                     
  2130                           ; BSR set to: 0
  2131                           ;datetime.c: 68:     char daylist[7][10] = {"Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "S
      +                          un"};
  2132  001262  EE22  F066         	lfsr	2,time_now@F14544
  2133  001266  EE11  F02A         	lfsr	1,time_now@daylist
  2134  00126A  0E45               	movlw	69
  2135  00126C                     u5721:
  2136  00126C  CFDB FFE3          	movff	plusw2,plusw1
  2137  001270  06E8               	decf	wreg,f,c
  2138  001272  E2FC               	bc	u5721
  2139  001274                     
  2140                           ; BSR set to: 0
  2141                           ;datetime.c: 71:     sprintf(timebuf, "    %02d:%02d:%02d", *hours, *minutes, *seconds);
  2142  001274  C116  F100         	movff	time_now@timebuf,sprintf@s
  2143  001278  C117  F101         	movff	time_now@timebuf+1,sprintf@s+1
  2144  00127C  0E01               	movlw	low STR_2
  2145  00127E  0101               	movlb	1	; () banked
  2146  001280  6F02               	movwf	sprintf@fmt& (0+255),b
  2147  001282  0E0E               	movlw	high STR_2
  2148  001284  6F03               	movwf	(sprintf@fmt+1)& (0+255),b
  2149  001286  C11E  FFD9         	movff	time_now@hours,fsr2l
  2150  00128A  C11F  FFDA         	movff	time_now@hours+1,fsr2h
  2151  00128E  CFDE F104          	movff	postinc2,?_sprintf+4
  2152  001292  CFDD F105          	movff	postdec2,?_sprintf+5
  2153  001296  C11C  FFD9         	movff	time_now@minutes,fsr2l
  2154  00129A  C11D  FFDA         	movff	time_now@minutes+1,fsr2h
  2155  00129E  CFDE F106          	movff	postinc2,?_sprintf+6
  2156  0012A2  CFDD F107          	movff	postdec2,?_sprintf+7
  2157  0012A6  C11A  FFD9         	movff	time_now@seconds,fsr2l
  2158  0012AA  C11B  FFDA         	movff	time_now@seconds+1,fsr2h
  2159  0012AE  CFDE F108          	movff	postinc2,?_sprintf+8
  2160  0012B2  CFDD F109          	movff	postdec2,?_sprintf+9
  2161  0012B6  EC51  F01B         	call	_sprintf	;wreg free
  2162  0012BA                     
  2163                           ;datetime.c: 74:     sprintf(datebuf, " %s %02d/%02d/%04d", daylist[*weekdays], *days + 
      +                          1, *months + 1, *years);
  2164  0012BA  C120  FFD9         	movff	time_now@weekdays,fsr2l
  2165  0012BE  C121  FFDA         	movff	time_now@weekdays+1,fsr2h
  2166  0012C2  CFDE F075          	movff	postinc2,___wmul@multiplier
  2167  0012C6  CFDD F076          	movff	postdec2,___wmul@multiplier+1
  2168  0012CA  0E00               	movlw	0
  2169  0012CC  0100               	movlb	0	; () banked
  2170  0012CE  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2171  0012D0  0E0A               	movlw	10
  2172  0012D2  6F77               	movwf	___wmul@multiplicand& (0+255),b
  2173  0012D4  EC5A  F01D         	call	___wmul	;wreg free
  2174  0012D8  0E2A               	movlw	low time_now@daylist
  2175  0012DA  0100               	movlb	0	; () banked
  2176  0012DC  2575               	addwf	?___wmul& (0+255),w,b
  2177  0012DE  0101               	movlb	1	; () banked
  2178  0012E0  6F70               	movwf	_time_now$2193& (0+255),b
  2179  0012E2  0E01               	movlw	high time_now@daylist
  2180  0012E4  0100               	movlb	0	; () banked
  2181  0012E6  2176               	addwfc	(?___wmul+1)& (0+255),w,b
  2182  0012E8  0101               	movlb	1	; () banked
  2183  0012EA  6F71               	movwf	(_time_now$2193+1)& (0+255),b
  2184  0012EC                     
  2185                           ; BSR set to: 1
  2186                           ;datetime.c: 74:     sprintf(datebuf, " %s %02d/%02d/%04d", daylist[*weekdays], *days + 
      +                          1, *months + 1, *years);
  2187  0012EC  C118  F100         	movff	time_now@datebuf,sprintf@s
  2188  0012F0  C119  F101         	movff	time_now@datebuf+1,sprintf@s+1
  2189  0012F4  0E14               	movlw	low STR_3
  2190  0012F6  6F02               	movwf	sprintf@fmt& (0+255),b
  2191  0012F8  0E0E               	movlw	high STR_3
  2192  0012FA  6F03               	movwf	(sprintf@fmt+1)& (0+255),b
  2193  0012FC  C170  F104         	movff	_time_now$2193,?_sprintf+4
  2194  001300  C171  F105         	movff	_time_now$2193+1,?_sprintf+5
  2195  001304  C122  FFD9         	movff	time_now@days,fsr2l
  2196  001308  C123  FFDA         	movff	time_now@days+1,fsr2h
  2197  00130C  CFDE F0D4          	movff	postinc2,??_time_now
  2198  001310  CFDD F0D5          	movff	postdec2,??_time_now+1
  2199  001314  0E01               	movlw	1
  2200  001316  0100               	movlb	0	; () banked
  2201  001318  25D4               	addwf	??_time_now& (0+255),w,b
  2202  00131A  0101               	movlb	1	; () banked
  2203  00131C  6F06               	movwf	(?_sprintf+6)& (0+255),b
  2204  00131E  0E00               	movlw	0
  2205  001320  0100               	movlb	0	; () banked
  2206  001322  21D5               	addwfc	(??_time_now+1)& (0+255),w,b
  2207  001324  0101               	movlb	1	; () banked
  2208  001326  6F07               	movwf	(?_sprintf+7)& (0+255),b
  2209  001328  C124  FFD9         	movff	time_now@months,fsr2l
  2210  00132C  C125  FFDA         	movff	time_now@months+1,fsr2h
  2211  001330  CFDE F0D6          	movff	postinc2,??_time_now+2
  2212  001334  CFDD F0D7          	movff	postdec2,??_time_now+3
  2213  001338  0E01               	movlw	1
  2214  00133A  0100               	movlb	0	; () banked
  2215  00133C  25D6               	addwf	(??_time_now+2)& (0+255),w,b
  2216  00133E  0101               	movlb	1	; () banked
  2217  001340  6F08               	movwf	(?_sprintf+8)& (0+255),b
  2218  001342  0E00               	movlw	0
  2219  001344  0100               	movlb	0	; () banked
  2220  001346  21D7               	addwfc	(??_time_now+3)& (0+255),w,b
  2221  001348  0101               	movlb	1	; () banked
  2222  00134A  6F09               	movwf	(?_sprintf+9)& (0+255),b
  2223  00134C  C126  FFD9         	movff	time_now@years,fsr2l
  2224  001350  C127  FFDA         	movff	time_now@years+1,fsr2h
  2225  001354  CFDE F10A          	movff	postinc2,?_sprintf+10
  2226  001358  CFDD F10B          	movff	postdec2,?_sprintf+11
  2227  00135C  EC51  F01B         	call	_sprintf	;wreg free
  2228  001360                     
  2229                           ;datetime.c: 78:     return (*seconds);
  2230  001360  C11A  FFD9         	movff	time_now@seconds,fsr2l
  2231  001364  C11B  FFDA         	movff	time_now@seconds+1,fsr2h
  2232  001368  CFDE F116          	movff	postinc2,?_time_now
  2233  00136C  CFDD F117          	movff	postdec2,?_time_now+1
  2234  001370  0012               	return		;funcret
  2235  001372                     __end_of_time_now:
  2236                           	callstack 0
  2237                           
  2238 ;; *************** function _sprintf *****************
  2239 ;; Defined at:
  2240 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;  s               2    0[BANK1 ] PTR unsigned char 
  2243 ;;		 -> main@datebuf(40), main@timebuf(40), 
  2244 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  2245 ;;		 -> STR_3(19), STR_2(19), STR_1(5), 
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;  f               6   16[BANK1 ] struct _IO_FILE
  2248 ;;  ap              2   14[BANK1 ] PTR void [1]
  2249 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2250 ;;  ret             2    0        int 
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  2    0[BANK1 ] int 
  2253 ;; Registers used:
  2254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2260 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2261 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2263 ;;      Totals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2264 ;;Total ram usage:       22 bytes
  2265 ;; Hardware stack levels used:    1
  2266 ;; Hardware stack levels required when called:   17
  2267 ;; This function calls:
  2268 ;;		_vfprintf
  2269 ;; This function is called by:
  2270 ;;		_time_now
  2271 ;;		_Time2String
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275                           	psect	text2
  2276  0036A2                     __ptext2:
  2277                           	callstack 0
  2278  0036A2                     _sprintf:
  2279                           	callstack 12
  2280  0036A2  0E04               	movlw	low (?_sprintf+4)
  2281  0036A4  0101               	movlb	1	; () banked
  2282  0036A6  6F0E               	movwf	sprintf@ap& (0+255),b
  2283  0036A8  0E01               	movlw	high (?_sprintf+4)
  2284  0036AA  6F0F               	movwf	(sprintf@ap+1)& (0+255),b
  2285  0036AC  C100  F110         	movff	sprintf@s,sprintf@f
  2286  0036B0  C101  F111         	movff	sprintf@s+1,sprintf@f+1
  2287  0036B4                     
  2288                           ; BSR set to: 1
  2289  0036B4  0E00               	movlw	0
  2290  0036B6  6F13               	movwf	(sprintf@f+3)& (0+255),b
  2291  0036B8  0E00               	movlw	0
  2292  0036BA  6F12               	movwf	(sprintf@f+2)& (0+255),b
  2293  0036BC                     
  2294                           ; BSR set to: 1
  2295  0036BC  0E00               	movlw	0
  2296  0036BE  6F15               	movwf	(sprintf@f+5)& (0+255),b
  2297  0036C0  0E00               	movlw	0
  2298  0036C2  6F14               	movwf	(sprintf@f+4)& (0+255),b
  2299  0036C4                     
  2300                           ; BSR set to: 1
  2301  0036C4  0E10               	movlw	low sprintf@f
  2302  0036C6  0100               	movlb	0	; () banked
  2303  0036C8  6FCC               	movwf	vfprintf@fp& (0+255),b
  2304  0036CA  0E01               	movlw	high sprintf@f
  2305  0036CC  6FCD               	movwf	(vfprintf@fp+1)& (0+255),b
  2306  0036CE  C102  F0CE         	movff	sprintf@fmt,vfprintf@fmt
  2307  0036D2  C103  F0CF         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2308  0036D6  0E0E               	movlw	low sprintf@ap
  2309  0036D8  6FD0               	movwf	vfprintf@ap& (0+255),b
  2310  0036DA  0E01               	movlw	high sprintf@ap
  2311  0036DC  6FD1               	movwf	(vfprintf@ap+1)& (0+255),b
  2312  0036DE  ECB8  F01A         	call	_vfprintf	;wreg free
  2313  0036E2  0101               	movlb	1	; () banked
  2314  0036E4  5112               	movf	(sprintf@f+2)& (0+255),w,b
  2315  0036E6  2500               	addwf	sprintf@s& (0+255),w,b
  2316  0036E8  6ED9               	movwf	fsr2l,c
  2317  0036EA  5113               	movf	(sprintf@f+3)& (0+255),w,b
  2318  0036EC  2101               	addwfc	(sprintf@s+1)& (0+255),w,b
  2319  0036EE  6EDA               	movwf	fsr2h,c
  2320  0036F0  0E00               	movlw	0
  2321  0036F2  6EDF               	movwf	indf2,c
  2322  0036F4                     
  2323                           ; BSR set to: 1
  2324  0036F4  0012               	return		;funcret
  2325  0036F6                     __end_of_sprintf:
  2326                           	callstack 0
  2327                           
  2328 ;; *************** function _vfprintf *****************
  2329 ;; Defined at:
  2330 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;  fp              2  108[BANK0 ] PTR struct _IO_FILE
  2333 ;;		 -> NULL(0), sprintf@f(6), 
  2334 ;;  fmt             2  110[BANK0 ] PTR const unsigned char 
  2335 ;;		 -> STR_4(6), STR_3(19), STR_2(19), STR_1(5), 
  2336 ;;  ap              2  112[BANK0 ] PTR PTR void 
  2337 ;;		 -> printf@ap(2), sprintf@ap(2), 
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;  cfmt            2  114[BANK0 ] PTR unsigned char 
  2340 ;;		 -> STR_4(6), STR_3(19), STR_2(19), STR_1(5), 
  2341 ;; Return value:  Size  Location     Type
  2342 ;;                  2  108[BANK0 ] int 
  2343 ;; Registers used:
  2344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2345 ;; Tracked objects:
  2346 ;;		On entry : 0/0
  2347 ;;		On exit  : 0/0
  2348 ;;		Unchanged: 0/0
  2349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2350 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2351 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2353 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2354 ;;Total ram usage:        8 bytes
  2355 ;; Hardware stack levels used:    1
  2356 ;; Hardware stack levels required when called:   16
  2357 ;; This function calls:
  2358 ;;		_vfpfcnvrt
  2359 ;; This function is called by:
  2360 ;;		_sprintf
  2361 ;; This function uses a non-reentrant model
  2362 ;;
  2363                           
  2364                           	psect	text3
  2365  003570                     __ptext3:
  2366                           	callstack 0
  2367  003570                     _vfprintf:
  2368                           	callstack 12
  2369  003570                     
  2370                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2371  003570  C0CE  F0D2         	movff	vfprintf@fmt,vfprintf@cfmt
  2372  003574  C0CF  F0D3         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2373  003578                     
  2374                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2375  003578  0E00               	movlw	0
  2376  00357A  0100               	movlb	0	; () banked
  2377  00357C  6FDB               	movwf	(_nout+1)& (0+255),b
  2378  00357E  0E00               	movlw	0
  2379  003580  6FDA               	movwf	_nout& (0+255),b
  2380                           
  2381                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2382  003582  EFD6  F01A         	goto	l4568
  2383  003586                     l4566:
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2387  003586  C0CC  F0B4         	movff	vfprintf@fp,vfpfcnvrt@fp
  2388  00358A  C0CD  F0B5         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2389  00358E  0ED2               	movlw	low vfprintf@cfmt
  2390  003590  6FB6               	movwf	vfpfcnvrt@fmt& (0+255),b
  2391  003592  0E00               	movlw	high vfprintf@cfmt
  2392  003594  6FB7               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2393  003596  C0D0  F0B8         	movff	vfprintf@ap,vfpfcnvrt@ap
  2394  00359A  C0D1  F0B9         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2395  00359E  ECC3  F00B         	call	_vfpfcnvrt	;wreg free
  2396  0035A2  0100               	movlb	0	; () banked
  2397  0035A4  51B4               	movf	?_vfpfcnvrt& (0+255),w,b
  2398  0035A6  27DA               	addwf	_nout& (0+255),f,b
  2399  0035A8  51B5               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2400  0035AA  23DB               	addwfc	(_nout+1)& (0+255),f,b
  2401  0035AC                     l4568:
  2402                           
  2403                           ; BSR set to: 0
  2404                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2405  0035AC  C0D2  FFF6         	movff	vfprintf@cfmt,tblptrl
  2406  0035B0  C0D3  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2407  0035B4                     	if	0	;tblptru may be non-zero
  2408  0035B4                     	endif
  2409  0035B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2410  0035B4  0E00               	movlw	low (__mediumconst shr (0+16))
  2411  0035B6  6EF8               	movwf	tblptru,c
  2412  0035B8                     	endif
  2413  0035B8  0008               	tblrd		*
  2414  0035BA  50F5               	movf	tablat,w,c
  2415  0035BC  0900               	iorlw	0
  2416  0035BE  A4D8               	btfss	status,2,c
  2417  0035C0  EFE4  F01A         	goto	u5271
  2418  0035C4  EFE6  F01A         	goto	u5270
  2419  0035C8                     u5271:
  2420  0035C8  EFC3  F01A         	goto	l4566
  2421  0035CC                     u5270:
  2422  0035CC                     
  2423                           ; BSR set to: 0
  2424                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2425  0035CC  C0DA  F0CC         	movff	_nout,?_vfprintf
  2426  0035D0  C0DB  F0CD         	movff	_nout+1,?_vfprintf+1
  2427  0035D4                     
  2428                           ; BSR set to: 0
  2429  0035D4  0012               	return		;funcret
  2430  0035D6                     __end_of_vfprintf:
  2431                           	callstack 0
  2432                           
  2433 ;; *************** function _vfpfcnvrt *****************
  2434 ;; Defined at:
  2435 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;  fp              2   84[BANK0 ] PTR struct _IO_FILE
  2438 ;;		 -> NULL(0), sprintf@f(6), 
  2439 ;;  fmt             2   86[BANK0 ] PTR PTR unsigned char 
  2440 ;;		 -> vfprintf@cfmt(2), 
  2441 ;;  ap              2   88[BANK0 ] PTR PTR void 
  2442 ;;		 -> printf@ap(2), sprintf@ap(2), 
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;  ll              8   94[BANK0 ] long long 
  2445 ;;  llu             8    0        unsigned long long 
  2446 ;;  f               4    0        unsigned long long 
  2447 ;;  vp              3    0        PTR void 
  2448 ;;  ct              3    0        unsigned char [3]
  2449 ;;  done            2  104[BANK0 ] int 
  2450 ;;  cp              2  102[BANK0 ] PTR unsigned char 
  2451 ;;		 -> ?_printf(2), ?_sprintf(2), time_now@daylist(70), 
  2452 ;;  i               2    0        int 
  2453 ;;  c               1    0        unsigned char 
  2454 ;; Return value:  Size  Location     Type
  2455 ;;                  2   84[BANK0 ] int 
  2456 ;; Registers used:
  2457 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2458 ;; Tracked objects:
  2459 ;;		On entry : 0/0
  2460 ;;		On exit  : 0/0
  2461 ;;		Unchanged: 0/0
  2462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2463 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2464 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2465 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2466 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2467 ;;Total ram usage:       24 bytes
  2468 ;; Hardware stack levels used:    1
  2469 ;; Hardware stack levels required when called:   15
  2470 ;; This function calls:
  2471 ;;		_atoi
  2472 ;;		_dtoa
  2473 ;;		_fputc
  2474 ;;		_isdigit
  2475 ;;		_stoa
  2476 ;; This function is called by:
  2477 ;;		_vfprintf
  2478 ;; This function uses a non-reentrant model
  2479 ;;
  2480                           
  2481                           	psect	text4
  2482  001786                     __ptext4:
  2483                           	callstack 0
  2484  001786                     _vfpfcnvrt:
  2485                           	callstack 12
  2486  001786                     
  2487                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2488  001786  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2489  00178A  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2490  00178E  CFDE FFF6          	movff	postinc2,tblptrl
  2491  001792  CFDD FFF7          	movff	postdec2,tblptrh
  2492  001796                     	if	0	;tblptru may be non-zero
  2493  001796                     	endif
  2494  001796                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2495  001796  0E00               	movlw	low (__mediumconst shr (0+16))
  2496  001798  6EF8               	movwf	tblptru,c
  2497  00179A                     	endif
  2498  00179A  0008               	tblrd		*
  2499  00179C  50F5               	movf	tablat,w,c
  2500  00179E  0A25               	xorlw	37
  2501  0017A0  A4D8               	btfss	status,2,c
  2502  0017A2  EFD5  F00B         	goto	u4801
  2503  0017A6  EFD7  F00B         	goto	u4800
  2504  0017AA                     u4801:
  2505  0017AA  EFAB  F00D         	goto	l4382
  2506  0017AE                     u4800:
  2507  0017AE                     
  2508                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2509  0017AE  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2510  0017B2  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2511  0017B6  2ADE               	incf	postinc2,f,c
  2512  0017B8  0E00               	movlw	0
  2513  0017BA  22DD               	addwfc	postdec2,f,c
  2514  0017BC                     
  2515                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2516  0017BC  0E00               	movlw	0
  2517  0017BE  0100               	movlb	0	; () banked
  2518  0017C0  6FDD               	movwf	(_width+1)& (0+255),b
  2519  0017C2  0E00               	movlw	0
  2520  0017C4  6FDC               	movwf	_width& (0+255),b
  2521  0017C6  C0DC  F0E0         	movff	_width,_flags
  2522  0017CA  C0DD  F0E1         	movff	_width+1,_flags+1
  2523  0017CE                     
  2524                           ; BSR set to: 0
  2525                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2526  0017CE  69DE               	setf	_prec& (0+255),b
  2527  0017D0  69DF               	setf	(_prec+1)& (0+255),b
  2528  0017D2                     
  2529                           ; BSR set to: 0
  2530                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  2531  0017D2  0E00               	movlw	0
  2532  0017D4  6FC9               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2533  0017D6  0E00               	movlw	0
  2534  0017D8  6FC8               	movwf	vfpfcnvrt@done& (0+255),b
  2535                           
  2536                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2537  0017DA  EF37  F00C         	goto	l4326
  2538  0017DE                     l4300:
  2539                           
  2540                           ; BSR set to: 0
  2541                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  2542  0017DE  81E0               	bsf	_flags& (0+255),0,b
  2543  0017E0                     l4302:
  2544                           
  2545                           ; BSR set to: 0
  2546                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  2547  0017E0  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2548  0017E4  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2549  0017E8  2ADE               	incf	postinc2,f,c
  2550  0017EA  0E00               	movlw	0
  2551  0017EC  22DD               	addwfc	postdec2,f,c
  2552                           
  2553                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  2554  0017EE  EF37  F00C         	goto	l4326
  2555  0017F2                     l4304:
  2556                           
  2557                           ; BSR set to: 0
  2558                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  2559  0017F2  83E0               	bsf	_flags& (0+255),1,b
  2560  0017F4  EFF0  F00B         	goto	l4302
  2561  0017F8                     l4308:
  2562                           
  2563                           ; BSR set to: 0
  2564                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  2565  0017F8  85E0               	bsf	_flags& (0+255),2,b
  2566  0017FA  EFF0  F00B         	goto	l4302
  2567  0017FE                     l4312:
  2568                           
  2569                           ; BSR set to: 0
  2570                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  2571  0017FE  87E0               	bsf	_flags& (0+255),3,b
  2572  001800  EFF0  F00B         	goto	l4302
  2573  001804                     l4316:
  2574                           
  2575                           ; BSR set to: 0
  2576                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  2577  001804  89E0               	bsf	_flags& (0+255),4,b
  2578  001806  EFF0  F00B         	goto	l4302
  2579  00180A                     l4320:
  2580                           
  2581                           ; BSR set to: 0
  2582                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  2583  00180A  0E00               	movlw	0
  2584  00180C  6FC9               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  2585  00180E  0E01               	movlw	1
  2586  001810  6FC8               	movwf	vfpfcnvrt@done& (0+255),b
  2587                           
  2588                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  2589  001812  EF37  F00C         	goto	l4326
  2590  001816                     l4324:
  2591                           
  2592                           ; BSR set to: 0
  2593  001816  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2594  00181A  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2595  00181E  CFDE FFF6          	movff	postinc2,tblptrl
  2596  001822  CFDD FFF7          	movff	postdec2,tblptrh
  2597  001826                     	if	0	;tblptru may be non-zero
  2598  001826                     	endif
  2599  001826                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2600  001826  0E00               	movlw	low (__mediumconst shr (0+16))
  2601  001828  6EF8               	movwf	tblptru,c
  2602  00182A                     	endif
  2603  00182A  0008               	tblrd		*
  2604  00182C  50F5               	movf	tablat,w,c
  2605  00182E  6FBA               	movwf	??_vfpfcnvrt& (0+255),b
  2606  001830  6BBB               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2607                           
  2608                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2609                           ; Switch size 1, requested type "simple"
  2610                           ; Number of cases is 1, Range of values is 0 to 0
  2611                           ; switch strategies available:
  2612                           ; Name         Instructions Cycles
  2613                           ; simple_byte            4     3 (average)
  2614                           ;	Chosen strategy is simple_byte
  2615  001832  51BB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2616  001834  0A00               	xorlw	0	; case 0
  2617  001836  B4D8               	btfsc	status,2,c
  2618  001838  EF20  F00C         	goto	l5132
  2619  00183C  EF05  F00C         	goto	l4320
  2620  001840                     l5132:
  2621                           
  2622                           ; BSR set to: 0
  2623                           ; Switch size 1, requested type "simple"
  2624                           ; Number of cases is 5, Range of values is 32 to 48
  2625                           ; switch strategies available:
  2626                           ; Name         Instructions Cycles
  2627                           ; simple_byte           16     9 (average)
  2628                           ;	Chosen strategy is simple_byte
  2629  001840  51BA               	movf	??_vfpfcnvrt& (0+255),w,b
  2630  001842  0A20               	xorlw	32	; case 32
  2631  001844  B4D8               	btfsc	status,2,c
  2632  001846  EFFF  F00B         	goto	l4312
  2633  00184A  0A03               	xorlw	3	; case 35
  2634  00184C  B4D8               	btfsc	status,2,c
  2635  00184E  EF02  F00C         	goto	l4316
  2636  001852  0A08               	xorlw	8	; case 43
  2637  001854  B4D8               	btfsc	status,2,c
  2638  001856  EFFC  F00B         	goto	l4308
  2639  00185A  0A06               	xorlw	6	; case 45
  2640  00185C  B4D8               	btfsc	status,2,c
  2641  00185E  EFEF  F00B         	goto	l4300
  2642  001862  0A1D               	xorlw	29	; case 48
  2643  001864  B4D8               	btfsc	status,2,c
  2644  001866  EFF9  F00B         	goto	l4304
  2645  00186A  EF05  F00C         	goto	l4320
  2646  00186E                     l4326:
  2647                           
  2648                           ; BSR set to: 0
  2649                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  2650  00186E  51C8               	movf	vfpfcnvrt@done& (0+255),w,b
  2651  001870  11C9               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  2652  001872  B4D8               	btfsc	status,2,c
  2653  001874  EF3E  F00C         	goto	u4811
  2654  001878  EF40  F00C         	goto	u4810
  2655  00187C                     u4811:
  2656  00187C  EF0B  F00C         	goto	l4324
  2657  001880                     u4810:
  2658  001880                     
  2659                           ; BSR set to: 0
  2660                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  2661  001880  A1E0               	btfss	_flags& (0+255),0,b
  2662  001882  EF45  F00C         	goto	u4821
  2663  001886  EF47  F00C         	goto	u4820
  2664  00188A                     u4821:
  2665  00188A  EF48  F00C         	goto	l4330
  2666  00188E                     u4820:
  2667  00188E                     
  2668                           ; BSR set to: 0
  2669                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  2670  00188E  93E0               	bcf	_flags& (0+255),1,b
  2671  001890                     l4330:
  2672                           
  2673                           ; BSR set to: 0
  2674                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2675  001890  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2676  001894  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2677  001898  CFDE FFF6          	movff	postinc2,tblptrl
  2678  00189C  CFDD FFF7          	movff	postdec2,tblptrh
  2679  0018A0                     	if	0	;tblptru may be non-zero
  2680  0018A0                     	endif
  2681  0018A0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2682  0018A0  0E00               	movlw	low (__mediumconst shr (0+16))
  2683  0018A2  6EF8               	movwf	tblptru,c
  2684  0018A4                     	endif
  2685  0018A4  0008               	tblrd		*
  2686  0018A6  50F5               	movf	tablat,w,c
  2687  0018A8  0A2A               	xorlw	42
  2688  0018AA  A4D8               	btfss	status,2,c
  2689  0018AC  EF5A  F00C         	goto	u4831
  2690  0018B0  EF5C  F00C         	goto	u4830
  2691  0018B4                     u4831:
  2692  0018B4  EF85  F00C         	goto	l4338
  2693  0018B8                     u4830:
  2694  0018B8                     
  2695                           ; BSR set to: 0
  2696                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2697  0018B8  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2698  0018BC  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2699  0018C0  2ADE               	incf	postinc2,f,c
  2700  0018C2  0E00               	movlw	0
  2701  0018C4  22DD               	addwfc	postdec2,f,c
  2702                           
  2703                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2704  0018C6  C0B8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2705  0018CA  C0B9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2706  0018CE  CFDF F0BA          	movff	indf2,??_vfpfcnvrt
  2707  0018D2  0E02               	movlw	2
  2708  0018D4  26DE               	addwf	postinc2,f,c
  2709  0018D6  CFDF F0BB          	movff	indf2,??_vfpfcnvrt+1
  2710  0018DA  0E00               	movlw	0
  2711  0018DC  22DD               	addwfc	postdec2,f,c
  2712  0018DE  C0BA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2713  0018E2  C0BB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2714  0018E6  CFDE F0DC          	movff	postinc2,_width
  2715  0018EA  CFDD F0DD          	movff	postdec2,_width+1
  2716  0018EE                     
  2717                           ; BSR set to: 0
  2718                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2719  0018EE  BFDD               	btfsc	(_width+1)& (0+255),7,b
  2720  0018F0  EF7E  F00C         	goto	u4840
  2721  0018F4  EF7C  F00C         	goto	u4841
  2722  0018F8                     u4841:
  2723  0018F8  EFCB  F00C         	goto	l4348
  2724  0018FC                     u4840:
  2725  0018FC                     
  2726                           ; BSR set to: 0
  2727                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2728  0018FC  81E0               	bsf	_flags& (0+255),0,b
  2729                           
  2730                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2731  0018FE  6DDC               	negf	_width& (0+255),b
  2732  001900  1FDD               	comf	(_width+1)& (0+255),f,b
  2733  001902  B0D8               	btfsc	status,0,c
  2734  001904  2BDD               	incf	(_width+1)& (0+255),f,b
  2735  001906  EFCB  F00C         	goto	l4348
  2736  00190A                     l4338:
  2737                           
  2738                           ; BSR set to: 0
  2739                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2740  00190A  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2741  00190E  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2742  001912  CFDE F07C          	movff	postinc2,atoi@s
  2743  001916  CFDD F07D          	movff	postdec2,atoi@s+1
  2744  00191A  EC93  F011         	call	_atoi	;wreg free
  2745  00191E  C07C  F0DC         	movff	?_atoi,_width
  2746  001922  C07D  F0DD         	movff	?_atoi+1,_width+1
  2747                           
  2748                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2749  001926  EF9C  F00C         	goto	l4342
  2750  00192A                     l4340:
  2751                           
  2752                           ; BSR set to: 0
  2753                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2754  00192A  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2755  00192E  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2756  001932  2ADE               	incf	postinc2,f,c
  2757  001934  0E00               	movlw	0
  2758  001936  22DD               	addwfc	postdec2,f,c
  2759  001938                     l4342:
  2760  001938  0ED0               	movlw	208
  2761  00193A  0100               	movlb	0	; () banked
  2762  00193C  6FBA               	movwf	??_vfpfcnvrt& (0+255),b
  2763  00193E  0EFF               	movlw	255
  2764  001940  6FBB               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2765  001942  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2766  001946  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2767  00194A  CFDE FFF6          	movff	postinc2,tblptrl
  2768  00194E  CFDD FFF7          	movff	postdec2,tblptrh
  2769  001952                     	if	0	;tblptru may be non-zero
  2770  001952                     	endif
  2771  001952                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2772  001952  0E00               	movlw	low (__mediumconst shr (0+16))
  2773  001954  6EF8               	movwf	tblptru,c
  2774  001956                     	endif
  2775  001956  0008               	tblrd		*
  2776  001958  50F5               	movf	tablat,w,c
  2777  00195A  6FBC               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2778  00195C  6BBD               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2779  00195E  51BA               	movf	??_vfpfcnvrt& (0+255),w,b
  2780  001960  27BC               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2781  001962  51BB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2782  001964  23BD               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2783  001966  51BD               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2784  001968  E10A               	bnz	u4850
  2785  00196A  0E0A               	movlw	10
  2786  00196C  5DBC               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2787  00196E  A0D8               	btfss	status,0,c
  2788  001970  EFBC  F00C         	goto	u4851
  2789  001974  EFBF  F00C         	goto	u4850
  2790  001978                     u4851:
  2791  001978  0E01               	movlw	1
  2792  00197A  EFC0  F00C         	goto	u4860
  2793  00197E                     u4850:
  2794  00197E  0E00               	movlw	0
  2795  001980                     u4860:
  2796  001980  6FCA               	movwf	_vfpfcnvrt$1887& (0+255),b
  2797  001982  6BCB               	clrf	(_vfpfcnvrt$1887+1)& (0+255),b
  2798  001984                     
  2799                           ; BSR set to: 0
  2800  001984  51CA               	movf	_vfpfcnvrt$1887& (0+255),w,b
  2801  001986  11CB               	iorwf	(_vfpfcnvrt$1887+1)& (0+255),w,b
  2802  001988  A4D8               	btfss	status,2,c
  2803  00198A  EFC9  F00C         	goto	u4871
  2804  00198E  EFCB  F00C         	goto	u4870
  2805  001992                     u4871:
  2806  001992  EF95  F00C         	goto	l4340
  2807  001996                     u4870:
  2808  001996                     l4348:
  2809                           
  2810                           ; BSR set to: 0
  2811                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2812  001996  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2813  00199A  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2814  00199E  CFDE FFF6          	movff	postinc2,tblptrl
  2815  0019A2  CFDD FFF7          	movff	postdec2,tblptrh
  2816  0019A6                     	if	0	;tblptru may be non-zero
  2817  0019A6                     	endif
  2818  0019A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2819  0019A6  0E00               	movlw	low (__mediumconst shr (0+16))
  2820  0019A8  6EF8               	movwf	tblptru,c
  2821  0019AA                     	endif
  2822  0019AA  0008               	tblrd		*
  2823  0019AC  50F5               	movf	tablat,w,c
  2824  0019AE  0A64               	xorlw	100
  2825  0019B0  B4D8               	btfsc	status,2,c
  2826  0019B2  EFDD  F00C         	goto	u4881
  2827  0019B6  EFDF  F00C         	goto	u4880
  2828  0019BA                     u4881:
  2829  0019BA  EFF3  F00C         	goto	l4352
  2830  0019BE                     u4880:
  2831  0019BE                     
  2832                           ; BSR set to: 0
  2833  0019BE  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2834  0019C2  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2835  0019C6  CFDE FFF6          	movff	postinc2,tblptrl
  2836  0019CA  CFDD FFF7          	movff	postdec2,tblptrh
  2837  0019CE                     	if	0	;tblptru may be non-zero
  2838  0019CE                     	endif
  2839  0019CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2840  0019CE  0E00               	movlw	low (__mediumconst shr (0+16))
  2841  0019D0  6EF8               	movwf	tblptru,c
  2842  0019D2                     	endif
  2843  0019D2  0008               	tblrd		*
  2844  0019D4  50F5               	movf	tablat,w,c
  2845  0019D6  0A69               	xorlw	105
  2846  0019D8  A4D8               	btfss	status,2,c
  2847  0019DA  EFF1  F00C         	goto	u4891
  2848  0019DE  EFF3  F00C         	goto	u4890
  2849  0019E2                     u4891:
  2850  0019E2  EF33  F00D         	goto	l4358
  2851  0019E6                     u4890:
  2852  0019E6                     l4352:
  2853                           
  2854                           ; BSR set to: 0
  2855                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2856  0019E6  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2857  0019EA  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2858  0019EE  2ADE               	incf	postinc2,f,c
  2859  0019F0  0E00               	movlw	0
  2860  0019F2  22DD               	addwfc	postdec2,f,c
  2861                           
  2862                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2863  0019F4  C0B8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2864  0019F8  C0B9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2865  0019FC  CFDF F0BA          	movff	indf2,??_vfpfcnvrt
  2866  001A00  0E02               	movlw	2
  2867  001A02  26DE               	addwf	postinc2,f,c
  2868  001A04  CFDF F0BB          	movff	indf2,??_vfpfcnvrt+1
  2869  001A08  0E00               	movlw	0
  2870  001A0A  22DD               	addwfc	postdec2,f,c
  2871  001A0C  C0BA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2872  001A10  C0BB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2873  001A14  CFDE F0BE          	movff	postinc2,vfpfcnvrt@ll
  2874  001A18  CFDD F0BF          	movff	postdec2,vfpfcnvrt@ll+1
  2875  001A1C  0E00               	movlw	0
  2876  001A1E  BFBF               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2877  001A20  0EFF               	movlw	-1
  2878  001A22  6FC0               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2879  001A24  6FC1               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2880  001A26  6FC2               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2881  001A28  6FC3               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2882  001A2A  6FC4               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2883  001A2C  6FC5               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2884  001A2E                     
  2885                           ; BSR set to: 0
  2886                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2887  001A2E  C0B4  F090         	movff	vfpfcnvrt@fp,dtoa@fp
  2888  001A32  C0B5  F091         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2889  001A36  C0BE  F092         	movff	vfpfcnvrt@ll,dtoa@d
  2890  001A3A  C0BF  F093         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2891  001A3E  C0C0  F094         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2892  001A42  C0C1  F095         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2893  001A46  C0C2  F096         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2894  001A4A  C0C3  F097         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2895  001A4E  C0C4  F098         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2896  001A52  C0C5  F099         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2897  001A56  ECCA  F00D         	call	_dtoa	;wreg free
  2898  001A5A  C090  F0B4         	movff	?_dtoa,?_vfpfcnvrt
  2899  001A5E  C091  F0B5         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2900  001A62  EFC9  F00D         	goto	l1038
  2901  001A66                     l4358:
  2902                           
  2903                           ; BSR set to: 0
  2904                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1171:         if 
      +                          (*fmt[0] == 's') {
  2905  001A66  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2906  001A6A  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2907  001A6E  CFDE FFF6          	movff	postinc2,tblptrl
  2908  001A72  CFDD FFF7          	movff	postdec2,tblptrh
  2909  001A76                     	if	0	;tblptru may be non-zero
  2910  001A76                     	endif
  2911  001A76                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2912  001A76  0E00               	movlw	low (__mediumconst shr (0+16))
  2913  001A78  6EF8               	movwf	tblptru,c
  2914  001A7A                     	endif
  2915  001A7A  0008               	tblrd		*
  2916  001A7C  50F5               	movf	tablat,w,c
  2917  001A7E  0A73               	xorlw	115
  2918  001A80  A4D8               	btfss	status,2,c
  2919  001A82  EF45  F00D         	goto	u4901
  2920  001A86  EF47  F00D         	goto	u4900
  2921  001A8A                     u4901:
  2922  001A8A  EF72  F00D         	goto	l4366
  2923  001A8E                     u4900:
  2924  001A8E                     
  2925                           ; BSR set to: 0
  2926                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1173:            
      +                           ++*fmt;
  2927  001A8E  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2928  001A92  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2929  001A96  2ADE               	incf	postinc2,f,c
  2930  001A98  0E00               	movlw	0
  2931  001A9A  22DD               	addwfc	postdec2,f,c
  2932                           
  2933                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1174:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  2934  001A9C  C0B8  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2935  001AA0  C0B9  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2936  001AA4  CFDF F0BA          	movff	indf2,??_vfpfcnvrt
  2937  001AA8  0E02               	movlw	2
  2938  001AAA  26DE               	addwf	postinc2,f,c
  2939  001AAC  CFDF F0BB          	movff	indf2,??_vfpfcnvrt+1
  2940  001AB0  0E00               	movlw	0
  2941  001AB2  22DD               	addwfc	postdec2,f,c
  2942  001AB4  C0BA  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2943  001AB8  C0BB  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2944  001ABC  CFDE F0C6          	movff	postinc2,vfpfcnvrt@cp
  2945  001AC0  CFDD F0C7          	movff	postdec2,vfpfcnvrt@cp+1
  2946  001AC4                     
  2947                           ; BSR set to: 0
  2948                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1176:            
      +                           return stoa(fp, cp);
  2949  001AC4  C0B4  F07E         	movff	vfpfcnvrt@fp,stoa@fp
  2950  001AC8  C0B5  F07F         	movff	vfpfcnvrt@fp+1,stoa@fp+1
  2951  001ACC  C0C6  F080         	movff	vfpfcnvrt@cp,stoa@s
  2952  001AD0  C0C7  F081         	movff	vfpfcnvrt@cp+1,stoa@s+1
  2953  001AD4  EC39  F013         	call	_stoa	;wreg free
  2954  001AD8  C07E  F0B4         	movff	?_stoa,?_vfpfcnvrt
  2955  001ADC  C07F  F0B5         	movff	?_stoa+1,?_vfpfcnvrt+1
  2956  001AE0  EFC9  F00D         	goto	l1038
  2957  001AE4                     l4366:
  2958                           
  2959                           ; BSR set to: 0
  2960                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2961  001AE4  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2962  001AE8  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2963  001AEC  CFDE FFF6          	movff	postinc2,tblptrl
  2964  001AF0  CFDD FFF7          	movff	postdec2,tblptrh
  2965  001AF4                     	if	0	;tblptru may be non-zero
  2966  001AF4                     	endif
  2967  001AF4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2968  001AF4  0E00               	movlw	low (__mediumconst shr (0+16))
  2969  001AF6  6EF8               	movwf	tblptru,c
  2970  001AF8                     	endif
  2971  001AF8  0008               	tblrd		*
  2972  001AFA  50F5               	movf	tablat,w,c
  2973  001AFC  0A25               	xorlw	37
  2974  001AFE  A4D8               	btfss	status,2,c
  2975  001B00  EF84  F00D         	goto	u4911
  2976  001B04  EF86  F00D         	goto	u4910
  2977  001B08                     u4911:
  2978  001B08  EF9E  F00D         	goto	l4376
  2979  001B0C                     u4910:
  2980  001B0C                     
  2981                           ; BSR set to: 0
  2982                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2983  001B0C  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2984  001B10  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2985  001B14  2ADE               	incf	postinc2,f,c
  2986  001B16  0E00               	movlw	0
  2987  001B18  22DD               	addwfc	postdec2,f,c
  2988  001B1A                     
  2989                           ; BSR set to: 0
  2990                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2991  001B1A  0E00               	movlw	0
  2992  001B1C  6F76               	movwf	(fputc@c+1)& (0+255),b
  2993  001B1E  0E25               	movlw	37
  2994  001B20  6F75               	movwf	fputc@c& (0+255),b
  2995  001B22  C0B4  F077         	movff	vfpfcnvrt@fp,fputc@fp
  2996  001B26  C0B5  F078         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2997  001B2A  ECB0  F017         	call	_fputc	;wreg free
  2998  001B2E                     l4372:
  2999                           
  3000                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3001  001B2E  0E00               	movlw	0
  3002  001B30  0100               	movlb	0	; () banked
  3003  001B32  6FB5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3004  001B34  0E01               	movlw	1
  3005  001B36  6FB4               	movwf	?_vfpfcnvrt& (0+255),b
  3006  001B38  EFC9  F00D         	goto	l1038
  3007  001B3C                     l4376:
  3008                           
  3009                           ; BSR set to: 0
  3010                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3011  001B3C  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3012  001B40  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3013  001B44  2ADE               	incf	postinc2,f,c
  3014  001B46  0E00               	movlw	0
  3015  001B48  22DD               	addwfc	postdec2,f,c
  3016  001B4A                     
  3017                           ; BSR set to: 0
  3018                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3019  001B4A  0E00               	movlw	0
  3020  001B4C  6FB5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3021  001B4E  0E00               	movlw	0
  3022  001B50  6FB4               	movwf	?_vfpfcnvrt& (0+255),b
  3023  001B52  EFC9  F00D         	goto	l1038
  3024  001B56                     l4382:
  3025                           
  3026                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3027  001B56  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3028  001B5A  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3029  001B5E  CFDE FFF6          	movff	postinc2,tblptrl
  3030  001B62  CFDD FFF7          	movff	postdec2,tblptrh
  3031  001B66                     	if	0	;tblptru may be non-zero
  3032  001B66                     	endif
  3033  001B66                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3034  001B66  0E00               	movlw	low (__mediumconst shr (0+16))
  3035  001B68  6EF8               	movwf	tblptru,c
  3036  001B6A                     	endif
  3037  001B6A  0008               	tblrd		*
  3038  001B6C  50F5               	movf	tablat,w,c
  3039  001B6E  0100               	movlb	0	; () banked
  3040  001B70  6F75               	movwf	fputc@c& (0+255),b
  3041  001B72  6B76               	clrf	(fputc@c+1)& (0+255),b
  3042  001B74  C0B4  F077         	movff	vfpfcnvrt@fp,fputc@fp
  3043  001B78  C0B5  F078         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3044  001B7C  ECB0  F017         	call	_fputc	;wreg free
  3045  001B80                     
  3046                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3047  001B80  C0B6  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3048  001B84  C0B7  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3049  001B88  2ADE               	incf	postinc2,f,c
  3050  001B8A  0E00               	movlw	0
  3051  001B8C  22DD               	addwfc	postdec2,f,c
  3052  001B8E  EF97  F00D         	goto	l4372
  3053  001B92                     l1038:
  3054  001B92  0012               	return		;funcret
  3055  001B94                     __end_of_vfpfcnvrt:
  3056                           	callstack 0
  3057                           
  3058 ;; *************** function _stoa *****************
  3059 ;; Defined at:
  3060 ;;		line 568 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3061 ;; Parameters:    Size  Location     Type
  3062 ;;  fp              2   30[BANK0 ] PTR struct _IO_FILE
  3063 ;;		 -> NULL(0), sprintf@f(6), 
  3064 ;;  s               2   32[BANK0 ] PTR unsigned char 
  3065 ;;		 -> ?_printf(2), ?_sprintf(2), time_now@daylist(70), 
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;  nuls            7   35[BANK0 ] unsigned char [7]
  3068 ;;  l               2   50[BANK0 ] int 
  3069 ;;  p               2   48[BANK0 ] int 
  3070 ;;  cp              2   46[BANK0 ] PTR unsigned char 
  3071 ;;		 -> ?_printf(2), stoa@nuls(7), ?_sprintf(2), time_now@daylist(70), 
  3072 ;;  w               2   44[BANK0 ] int 
  3073 ;;  i               2   42[BANK0 ] int 
  3074 ;; Return value:  Size  Location     Type
  3075 ;;                  2   30[BANK0 ] int 
  3076 ;; Registers used:
  3077 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3083 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3084 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3085 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3086 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3087 ;;Total ram usage:       22 bytes
  3088 ;; Hardware stack levels used:    1
  3089 ;; Hardware stack levels required when called:   12
  3090 ;; This function calls:
  3091 ;;		_fputc
  3092 ;;		_strlen
  3093 ;; This function is called by:
  3094 ;;		_vfpfcnvrt
  3095 ;; This function uses a non-reentrant model
  3096 ;;
  3097                           
  3098                           	psect	text5
  3099  002672                     __ptext5:
  3100                           	callstack 0
  3101  002672                     _stoa:
  3102                           	callstack 14
  3103  002672                     
  3104                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 568: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 569: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 570:  
      +                             char *cp, nuls[] = "(null)";
  3105  002672  EE20  F0E3         	lfsr	2,stoa@F1141
  3106  002676  EE10  F083         	lfsr	1,stoa@nuls
  3107  00267A  0E06               	movlw	6
  3108  00267C                     u4421:
  3109  00267C  CFDB FFE3          	movff	plusw2,plusw1
  3110  002680  06E8               	decf	wreg,f,c
  3111  002682  E2FC               	bc	u4421
  3112  002684                     
  3113                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 571:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 574:     c
      +                          p = s;
  3114  002684  C080  F08E         	movff	stoa@s,stoa@cp
  3115  002688  C081  F08F         	movff	stoa@s+1,stoa@cp+1
  3116  00268C                     
  3117                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 575:     if (!cp)
      +                           {
  3118  00268C  0100               	movlb	0	; () banked
  3119  00268E  518E               	movf	stoa@cp& (0+255),w,b
  3120  002690  118F               	iorwf	(stoa@cp+1)& (0+255),w,b
  3121  002692  A4D8               	btfss	status,2,c
  3122  002694  EF4E  F013         	goto	u4431
  3123  002698  EF50  F013         	goto	u4430
  3124  00269C                     u4431:
  3125  00269C  EF54  F013         	goto	l4080
  3126  0026A0                     u4430:
  3127  0026A0                     
  3128                           ; BSR set to: 0
  3129                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 576:         cp =
      +                           nuls;
  3130  0026A0  0E83               	movlw	low stoa@nuls
  3131  0026A2  6F8E               	movwf	stoa@cp& (0+255),b
  3132  0026A4  0E00               	movlw	high stoa@nuls
  3133  0026A6  6F8F               	movwf	(stoa@cp+1)& (0+255),b
  3134  0026A8                     l4080:
  3135                           
  3136                           ; BSR set to: 0
  3137                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 580:     l = (int
      +                          )strlen(cp);
  3138  0026A8  C08E  F075         	movff	stoa@cp,strlen@s
  3139  0026AC  C08F  F076         	movff	stoa@cp+1,strlen@s+1
  3140  0026B0  ECB6  F01C         	call	_strlen	;wreg free
  3141  0026B4  C075  F092         	movff	?_strlen,stoa@l
  3142  0026B8  C076  F093         	movff	?_strlen+1,stoa@l+1
  3143  0026BC                     
  3144                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 581:     p = prec
      +                          ;
  3145  0026BC  C0DE  F090         	movff	_prec,stoa@p
  3146  0026C0  C0DF  F091         	movff	_prec+1,stoa@p+1
  3147  0026C4                     
  3148                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 582:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  3149  0026C4  0100               	movlb	0	; () banked
  3150  0026C6  BF91               	btfsc	(stoa@p+1)& (0+255),7,b
  3151  0026C8  EF68  F013         	goto	u4441
  3152  0026CC  EF6A  F013         	goto	u4440
  3153  0026D0                     u4441:
  3154  0026D0  EF7F  F013         	goto	l995
  3155  0026D4                     u4440:
  3156  0026D4                     
  3157                           ; BSR set to: 0
  3158  0026D4  5192               	movf	stoa@l& (0+255),w,b
  3159  0026D6  5D90               	subwf	stoa@p& (0+255),w,b
  3160  0026D8  5191               	movf	(stoa@p+1)& (0+255),w,b
  3161  0026DA  0A80               	xorlw	128
  3162  0026DC  6F82               	movwf	??_stoa& (0+255),b
  3163  0026DE  5193               	movf	(stoa@l+1)& (0+255),w,b
  3164  0026E0  0A80               	xorlw	128
  3165  0026E2  5982               	subwfb	??_stoa& (0+255),w,b
  3166  0026E4  A0D8               	btfss	status,0,c
  3167  0026E6  EF77  F013         	goto	u4451
  3168  0026EA  EF79  F013         	goto	u4450
  3169  0026EE                     u4451:
  3170  0026EE  EF7B  F013         	goto	l993
  3171  0026F2                     u4450:
  3172  0026F2  EF7F  F013         	goto	l995
  3173  0026F6                     l993:
  3174                           
  3175                           ; BSR set to: 0
  3176  0026F6  C090  F092         	movff	stoa@p,stoa@l
  3177  0026FA  C091  F093         	movff	stoa@p+1,stoa@l+1
  3178  0026FE                     l995:
  3179                           
  3180                           ; BSR set to: 0
  3181                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 583:     p = l;
  3182  0026FE  C092  F090         	movff	stoa@l,stoa@p
  3183  002702  C093  F091         	movff	stoa@l+1,stoa@p+1
  3184                           
  3185                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 584:     w = widt
      +                          h;
  3186  002706  C0DC  F08C         	movff	_width,stoa@w
  3187  00270A  C0DD  F08D         	movff	_width+1,stoa@w+1
  3188                           
  3189                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 587:     if (!(fl
      +                          ags & (1 << 0))) {
  3190  00270E  B1E0               	btfsc	_flags& (0+255),0,b
  3191  002710  EF8C  F013         	goto	u4461
  3192  002714  EF8E  F013         	goto	u4460
  3193  002718                     u4461:
  3194  002718  EFAC  F013         	goto	l4096
  3195  00271C                     u4460:
  3196  00271C  EF9D  F013         	goto	l4094
  3197  002720                     l4090:
  3198                           
  3199                           ; BSR set to: 0
  3200                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 589:             
      +                          fputc(' ', fp);
  3201  002720  0E00               	movlw	0
  3202  002722  6F76               	movwf	(fputc@c+1)& (0+255),b
  3203  002724  0E20               	movlw	32
  3204  002726  6F75               	movwf	fputc@c& (0+255),b
  3205  002728  C07E  F077         	movff	stoa@fp,fputc@fp
  3206  00272C  C07F  F078         	movff	stoa@fp+1,fputc@fp+1
  3207  002730  ECB0  F017         	call	_fputc	;wreg free
  3208  002734                     
  3209                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 590:             
      +                          ++l;
  3210  002734  0100               	movlb	0	; () banked
  3211  002736  4B92               	infsnz	stoa@l& (0+255),f,b
  3212  002738  2B93               	incf	(stoa@l+1)& (0+255),f,b
  3213  00273A                     l4094:
  3214                           
  3215                           ; BSR set to: 0
  3216                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 588:         whil
      +                          e (l < w) {
  3217  00273A  518C               	movf	stoa@w& (0+255),w,b
  3218  00273C  5D92               	subwf	stoa@l& (0+255),w,b
  3219  00273E  5193               	movf	(stoa@l+1)& (0+255),w,b
  3220  002740  0A80               	xorlw	128
  3221  002742  6F82               	movwf	??_stoa& (0+255),b
  3222  002744  518D               	movf	(stoa@w+1)& (0+255),w,b
  3223  002746  0A80               	xorlw	128
  3224  002748  5982               	subwfb	??_stoa& (0+255),w,b
  3225  00274A  A0D8               	btfss	status,0,c
  3226  00274C  EFAA  F013         	goto	u4471
  3227  002750  EFAC  F013         	goto	u4470
  3228  002754                     u4471:
  3229  002754  EF90  F013         	goto	l4090
  3230  002758                     u4470:
  3231  002758                     l4096:
  3232                           
  3233                           ; BSR set to: 0
  3234                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 595:     i = 0;
  3235  002758  0E00               	movlw	0
  3236  00275A  6F8B               	movwf	(stoa@i+1)& (0+255),b
  3237  00275C  0E00               	movlw	0
  3238  00275E  6F8A               	movwf	stoa@i& (0+255),b
  3239                           
  3240                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  3241  002760  EFC6  F013         	goto	l4104
  3242  002764                     l4098:
  3243                           
  3244                           ; BSR set to: 0
  3245                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 597:         fput
      +                          c(*cp, fp);
  3246  002764  C08E  FFD9         	movff	stoa@cp,fsr2l
  3247  002768  C08F  FFDA         	movff	stoa@cp+1,fsr2h
  3248  00276C  50DF               	movf	indf2,w,c
  3249  00276E  6F82               	movwf	??_stoa& (0+255),b
  3250  002770  5182               	movf	??_stoa& (0+255),w,b
  3251  002772  6F75               	movwf	fputc@c& (0+255),b
  3252  002774  6B76               	clrf	(fputc@c+1)& (0+255),b
  3253  002776  C07E  F077         	movff	stoa@fp,fputc@fp
  3254  00277A  C07F  F078         	movff	stoa@fp+1,fputc@fp+1
  3255  00277E  ECB0  F017         	call	_fputc	;wreg free
  3256  002782                     
  3257                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 598:         ++cp
      +                          ;
  3258  002782  0100               	movlb	0	; () banked
  3259  002784  4B8E               	infsnz	stoa@cp& (0+255),f,b
  3260  002786  2B8F               	incf	(stoa@cp+1)& (0+255),f,b
  3261  002788                     
  3262                           ; BSR set to: 0
  3263                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 599:         ++i;
  3264  002788  4B8A               	infsnz	stoa@i& (0+255),f,b
  3265  00278A  2B8B               	incf	(stoa@i+1)& (0+255),f,b
  3266  00278C                     l4104:
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  3270  00278C  5190               	movf	stoa@p& (0+255),w,b
  3271  00278E  5D8A               	subwf	stoa@i& (0+255),w,b
  3272  002790  518B               	movf	(stoa@i+1)& (0+255),w,b
  3273  002792  0A80               	xorlw	128
  3274  002794  6F82               	movwf	??_stoa& (0+255),b
  3275  002796  5191               	movf	(stoa@p+1)& (0+255),w,b
  3276  002798  0A80               	xorlw	128
  3277  00279A  5982               	subwfb	??_stoa& (0+255),w,b
  3278  00279C  A0D8               	btfss	status,0,c
  3279  00279E  EFD3  F013         	goto	u4481
  3280  0027A2  EFD5  F013         	goto	u4480
  3281  0027A6                     u4481:
  3282  0027A6  EFB2  F013         	goto	l4098
  3283  0027AA                     u4480:
  3284  0027AA                     
  3285                           ; BSR set to: 0
  3286                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 603:     if (flag
      +                          s & (1 << 0)) {
  3287  0027AA  A1E0               	btfss	_flags& (0+255),0,b
  3288  0027AC  EFDA  F013         	goto	u4491
  3289  0027B0  EFDC  F013         	goto	u4490
  3290  0027B4                     u4491:
  3291  0027B4  EFFA  F013         	goto	l1005
  3292  0027B8                     u4490:
  3293  0027B8  EFEB  F013         	goto	l4112
  3294  0027BC                     l4108:
  3295                           
  3296                           ; BSR set to: 0
  3297                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 605:             
      +                          fputc(' ', fp);
  3298  0027BC  0E00               	movlw	0
  3299  0027BE  6F76               	movwf	(fputc@c+1)& (0+255),b
  3300  0027C0  0E20               	movlw	32
  3301  0027C2  6F75               	movwf	fputc@c& (0+255),b
  3302  0027C4  C07E  F077         	movff	stoa@fp,fputc@fp
  3303  0027C8  C07F  F078         	movff	stoa@fp+1,fputc@fp+1
  3304  0027CC  ECB0  F017         	call	_fputc	;wreg free
  3305  0027D0                     
  3306                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 606:             
      +                          ++l;
  3307  0027D0  0100               	movlb	0	; () banked
  3308  0027D2  4B92               	infsnz	stoa@l& (0+255),f,b
  3309  0027D4  2B93               	incf	(stoa@l+1)& (0+255),f,b
  3310  0027D6                     l4112:
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 604:         whil
      +                          e (l < w) {
  3314  0027D6  518C               	movf	stoa@w& (0+255),w,b
  3315  0027D8  5D92               	subwf	stoa@l& (0+255),w,b
  3316  0027DA  5193               	movf	(stoa@l+1)& (0+255),w,b
  3317  0027DC  0A80               	xorlw	128
  3318  0027DE  6F82               	movwf	??_stoa& (0+255),b
  3319  0027E0  518D               	movf	(stoa@w+1)& (0+255),w,b
  3320  0027E2  0A80               	xorlw	128
  3321  0027E4  5982               	subwfb	??_stoa& (0+255),w,b
  3322  0027E6  A0D8               	btfss	status,0,c
  3323  0027E8  EFF8  F013         	goto	u4501
  3324  0027EC  EFFA  F013         	goto	u4500
  3325  0027F0                     u4501:
  3326  0027F0  EFDE  F013         	goto	l4108
  3327  0027F4                     u4500:
  3328  0027F4                     l1005:
  3329                           
  3330                           ; BSR set to: 0
  3331                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 610:     return l
      +                          ;
  3332  0027F4  C092  F07E         	movff	stoa@l,?_stoa
  3333  0027F8  C093  F07F         	movff	stoa@l+1,?_stoa+1
  3334  0027FC                     
  3335                           ; BSR set to: 0
  3336  0027FC  0012               	return		;funcret
  3337  0027FE                     __end_of_stoa:
  3338                           	callstack 0
  3339                           
  3340 ;; *************** function _dtoa *****************
  3341 ;; Defined at:
  3342 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;  fp              2   48[BANK0 ] PTR struct _IO_FILE
  3345 ;;		 -> NULL(0), sprintf@f(6), 
  3346 ;;  d               8   50[BANK0 ] long long 
  3347 ;; Auto vars:     Size  Location     Type
  3348 ;;  n               8   74[BANK0 ] long long 
  3349 ;;  i               2   82[BANK0 ] int 
  3350 ;;  s               2   72[BANK0 ] int 
  3351 ;;  w               2   70[BANK0 ] int 
  3352 ;;  p               2   68[BANK0 ] int 
  3353 ;; Return value:  Size  Location     Type
  3354 ;;                  2   48[BANK0 ] int 
  3355 ;; Registers used:
  3356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3357 ;; Tracked objects:
  3358 ;;		On entry : 0/0
  3359 ;;		On exit  : 0/0
  3360 ;;		Unchanged: 0/0
  3361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3362 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3363 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3364 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3365 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3366 ;;Total ram usage:       36 bytes
  3367 ;; Hardware stack levels used:    1
  3368 ;; Hardware stack levels required when called:   14
  3369 ;; This function calls:
  3370 ;;		___aodiv
  3371 ;;		___aomod
  3372 ;;		_abs
  3373 ;;		_pad
  3374 ;; This function is called by:
  3375 ;;		_vfpfcnvrt
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           	psect	text6
  3380  001B94                     __ptext6:
  3381                           	callstack 0
  3382  001B94                     _dtoa:
  3383                           	callstack 12
  3384  001B94                     
  3385                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  3386  001B94  C092  F0AA         	movff	dtoa@d,dtoa@n
  3387  001B98  C093  F0AB         	movff	dtoa@d+1,dtoa@n+1
  3388  001B9C  C094  F0AC         	movff	dtoa@d+2,dtoa@n+2
  3389  001BA0  C095  F0AD         	movff	dtoa@d+3,dtoa@n+3
  3390  001BA4  C096  F0AE         	movff	dtoa@d+4,dtoa@n+4
  3391  001BA8  C097  F0AF         	movff	dtoa@d+5,dtoa@n+5
  3392  001BAC  C098  F0B0         	movff	dtoa@d+6,dtoa@n+6
  3393  001BB0  C099  F0B1         	movff	dtoa@d+7,dtoa@n+7
  3394  001BB4                     
  3395                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  3396  001BB4  0100               	movlb	0	; () banked
  3397  001BB6  BFB1               	btfsc	(dtoa@n+7)& (0+255),7,b
  3398  001BB8  EFE0  F00D         	goto	u4271
  3399  001BBC  EFE3  F00D         	goto	u4270
  3400  001BC0                     u4271:
  3401  001BC0  0E01               	movlw	1
  3402  001BC2  EFE4  F00D         	goto	u4280
  3403  001BC6                     u4270:
  3404  001BC6  0E00               	movlw	0
  3405  001BC8                     u4280:
  3406  001BC8  6FA8               	movwf	dtoa@s& (0+255),b
  3407  001BCA  6BA9               	clrf	(dtoa@s+1)& (0+255),b
  3408                           
  3409                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  3410  001BCC  51A8               	movf	dtoa@s& (0+255),w,b
  3411  001BCE  11A9               	iorwf	(dtoa@s+1)& (0+255),w,b
  3412  001BD0  B4D8               	btfsc	status,2,c
  3413  001BD2  EFED  F00D         	goto	u4291
  3414  001BD6  EFEF  F00D         	goto	u4290
  3415  001BDA                     u4291:
  3416  001BDA  EFFF  F00D         	goto	l4016
  3417  001BDE                     u4290:
  3418  001BDE                     
  3419                           ; BSR set to: 0
  3420                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  3421  001BDE  1FB1               	comf	(dtoa@n+7)& (0+255),f,b
  3422  001BE0  1FB0               	comf	(dtoa@n+6)& (0+255),f,b
  3423  001BE2  1FAF               	comf	(dtoa@n+5)& (0+255),f,b
  3424  001BE4  1FAE               	comf	(dtoa@n+4)& (0+255),f,b
  3425  001BE6  1FAD               	comf	(dtoa@n+3)& (0+255),f,b
  3426  001BE8  1FAC               	comf	(dtoa@n+2)& (0+255),f,b
  3427  001BEA  1FAB               	comf	(dtoa@n+1)& (0+255),f,b
  3428  001BEC  6DAA               	negf	dtoa@n& (0+255),b
  3429  001BEE  0E00               	movlw	0
  3430  001BF0  23AB               	addwfc	(dtoa@n+1)& (0+255),f,b
  3431  001BF2  23AC               	addwfc	(dtoa@n+2)& (0+255),f,b
  3432  001BF4  23AD               	addwfc	(dtoa@n+3)& (0+255),f,b
  3433  001BF6  23AE               	addwfc	(dtoa@n+4)& (0+255),f,b
  3434  001BF8  23AF               	addwfc	(dtoa@n+5)& (0+255),f,b
  3435  001BFA  23B0               	addwfc	(dtoa@n+6)& (0+255),f,b
  3436  001BFC  23B1               	addwfc	(dtoa@n+7)& (0+255),f,b
  3437  001BFE                     l4016:
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  3441  001BFE  BFDF               	btfsc	(_prec+1)& (0+255),7,b
  3442  001C00  EF04  F00E         	goto	u4301
  3443  001C04  EF06  F00E         	goto	u4300
  3444  001C08                     u4301:
  3445  001C08  EF07  F00E         	goto	l4020
  3446  001C0C                     u4300:
  3447  001C0C                     
  3448                           ; BSR set to: 0
  3449                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  3450  001C0C  93E0               	bcf	_flags& (0+255),1,b
  3451  001C0E                     l4020:
  3452                           
  3453                           ; BSR set to: 0
  3454                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  3455  001C0E  BFDF               	btfsc	(_prec+1)& (0+255),7,b
  3456  001C10  EF14  F00E         	goto	u4310
  3457  001C14  51DF               	movf	(_prec+1)& (0+255),w,b
  3458  001C16  E106               	bnz	u4311
  3459  001C18  05DE               	decf	_prec& (0+255),w,b
  3460  001C1A  B0D8               	btfsc	status,0,c
  3461  001C1C  EF12  F00E         	goto	u4311
  3462  001C20  EF14  F00E         	goto	u4310
  3463  001C24                     u4311:
  3464  001C24  EF1A  F00E         	goto	l966
  3465  001C28                     u4310:
  3466  001C28                     
  3467                           ; BSR set to: 0
  3468  001C28  0E00               	movlw	0
  3469  001C2A  6FA5               	movwf	(dtoa@p+1)& (0+255),b
  3470  001C2C  0E01               	movlw	1
  3471  001C2E  6FA4               	movwf	dtoa@p& (0+255),b
  3472  001C30  EF1E  F00E         	goto	l968
  3473  001C34                     l966:
  3474                           
  3475                           ; BSR set to: 0
  3476  001C34  C0DE  F0A4         	movff	_prec,dtoa@p
  3477  001C38  C0DF  F0A5         	movff	_prec+1,dtoa@p+1
  3478  001C3C                     l968:
  3479                           
  3480                           ; BSR set to: 0
  3481                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  3482  001C3C  C0DC  F0A6         	movff	_width,dtoa@w
  3483  001C40  C0DD  F0A7         	movff	_width+1,dtoa@w+1
  3484  001C44                     
  3485                           ; BSR set to: 0
  3486                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  3487  001C44  51A8               	movf	dtoa@s& (0+255),w,b
  3488  001C46  11A9               	iorwf	(dtoa@s+1)& (0+255),w,b
  3489  001C48  A4D8               	btfss	status,2,c
  3490  001C4A  EF29  F00E         	goto	u4321
  3491  001C4E  EF2B  F00E         	goto	u4320
  3492  001C52                     u4321:
  3493  001C52  EF32  F00E         	goto	l4028
  3494  001C56                     u4320:
  3495  001C56                     
  3496                           ; BSR set to: 0
  3497  001C56  A5E0               	btfss	_flags& (0+255),2,b
  3498  001C58  EF30  F00E         	goto	u4331
  3499  001C5C  EF32  F00E         	goto	u4330
  3500  001C60                     u4331:
  3501  001C60  EF35  F00E         	goto	l4030
  3502  001C64                     u4330:
  3503  001C64                     l4028:
  3504                           
  3505                           ; BSR set to: 0
  3506                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  3507  001C64  07A6               	decf	dtoa@w& (0+255),f,b
  3508  001C66  A0D8               	btfss	status,0,c
  3509  001C68  07A7               	decf	(dtoa@w+1)& (0+255),f,b
  3510  001C6A                     l4030:
  3511                           
  3512                           ; BSR set to: 0
  3513                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  3514  001C6A  0E00               	movlw	0
  3515  001C6C  6FB3               	movwf	(dtoa@i+1)& (0+255),b
  3516  001C6E  0E1F               	movlw	31
  3517  001C70  6FB2               	movwf	dtoa@i& (0+255),b
  3518  001C72                     
  3519                           ; BSR set to: 0
  3520                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  3521  001C72  0E00               	movlw	0
  3522  001C74  0102               	movlb	2	; () banked
  3523  001C76  6FE3               	movwf	(_dbuf+31)& (0+255),b
  3524                           
  3525                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3526  001C78  EFBB  F00E         	goto	l4044
  3527  001C7C                     l4034:
  3528                           
  3529                           ; BSR set to: 0
  3530                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  3531  001C7C  07B2               	decf	dtoa@i& (0+255),f,b
  3532  001C7E  A0D8               	btfss	status,0,c
  3533  001C80  07B3               	decf	(dtoa@i+1)& (0+255),f,b
  3534  001C82                     
  3535                           ; BSR set to: 0
  3536                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3537  001C82  0EC4               	movlw	low _dbuf
  3538  001C84  25B2               	addwf	dtoa@i& (0+255),w,b
  3539  001C86  6ED9               	movwf	fsr2l,c
  3540  001C88  0E02               	movlw	high _dbuf
  3541  001C8A  21B3               	addwfc	(dtoa@i+1)& (0+255),w,b
  3542  001C8C  6EDA               	movwf	fsr2h,c
  3543  001C8E  C0AA  F075         	movff	dtoa@n,___aomod@dividend
  3544  001C92  C0AB  F076         	movff	dtoa@n+1,___aomod@dividend+1
  3545  001C96  C0AC  F077         	movff	dtoa@n+2,___aomod@dividend+2
  3546  001C9A  C0AD  F078         	movff	dtoa@n+3,___aomod@dividend+3
  3547  001C9E  C0AE  F079         	movff	dtoa@n+4,___aomod@dividend+4
  3548  001CA2  C0AF  F07A         	movff	dtoa@n+5,___aomod@dividend+5
  3549  001CA6  C0B0  F07B         	movff	dtoa@n+6,___aomod@dividend+6
  3550  001CAA  C0B1  F07C         	movff	dtoa@n+7,___aomod@dividend+7
  3551  001CAE  0E0A               	movlw	10
  3552  001CB0  6F7D               	movwf	___aomod@divisor& (0+255),b
  3553  001CB2  0E00               	movlw	0
  3554  001CB4  6F7E               	movwf	(___aomod@divisor+1)& (0+255),b
  3555  001CB6  0E00               	movlw	0
  3556  001CB8  6F7F               	movwf	(___aomod@divisor+2)& (0+255),b
  3557  001CBA  0E00               	movlw	0
  3558  001CBC  6F80               	movwf	(___aomod@divisor+3)& (0+255),b
  3559  001CBE  0E00               	movlw	0
  3560  001CC0  6F81               	movwf	(___aomod@divisor+4)& (0+255),b
  3561  001CC2  0E00               	movlw	0
  3562  001CC4  6F82               	movwf	(___aomod@divisor+5)& (0+255),b
  3563  001CC6  0E00               	movlw	0
  3564  001CC8  6F83               	movwf	(___aomod@divisor+6)& (0+255),b
  3565  001CCA  0E00               	movlw	0
  3566  001CCC  6F84               	movwf	(___aomod@divisor+7)& (0+255),b
  3567  001CCE  EC4B  F016         	call	___aomod	;wreg free
  3568  001CD2  C075  F09A         	movff	?___aomod,??_dtoa
  3569  001CD6  C076  F09B         	movff	?___aomod+1,??_dtoa+1
  3570  001CDA  C077  F09C         	movff	?___aomod+2,??_dtoa+2
  3571  001CDE  C078  F09D         	movff	?___aomod+3,??_dtoa+3
  3572  001CE2  C079  F09E         	movff	?___aomod+4,??_dtoa+4
  3573  001CE6  C07A  F09F         	movff	?___aomod+5,??_dtoa+5
  3574  001CEA  C07B  F0A0         	movff	?___aomod+6,??_dtoa+6
  3575  001CEE  C07C  F0A1         	movff	?___aomod+7,??_dtoa+7
  3576  001CF2  C09A  F087         	movff	??_dtoa,abs@a
  3577  001CF6  C09C  F088         	movff	??_dtoa+2,abs@a+1
  3578  001CFA  EC37  F01C         	call	_abs	;wreg free
  3579  001CFE  0100               	movlb	0	; () banked
  3580  001D00  5187               	movf	?_abs& (0+255),w,b
  3581  001D02  0F30               	addlw	48
  3582  001D04  6EDF               	movwf	indf2,c
  3583  001D06                     
  3584                           ; BSR set to: 0
  3585                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  3586  001D06  07A4               	decf	dtoa@p& (0+255),f,b
  3587  001D08  A0D8               	btfss	status,0,c
  3588  001D0A  07A5               	decf	(dtoa@p+1)& (0+255),f,b
  3589  001D0C                     
  3590                           ; BSR set to: 0
  3591                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  3592  001D0C  07A6               	decf	dtoa@w& (0+255),f,b
  3593  001D0E  A0D8               	btfss	status,0,c
  3594  001D10  07A7               	decf	(dtoa@w+1)& (0+255),f,b
  3595  001D12                     
  3596                           ; BSR set to: 0
  3597                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  3598  001D12  C0AA  F075         	movff	dtoa@n,___aodiv@dividend
  3599  001D16  C0AB  F076         	movff	dtoa@n+1,___aodiv@dividend+1
  3600  001D1A  C0AC  F077         	movff	dtoa@n+2,___aodiv@dividend+2
  3601  001D1E  C0AD  F078         	movff	dtoa@n+3,___aodiv@dividend+3
  3602  001D22  C0AE  F079         	movff	dtoa@n+4,___aodiv@dividend+4
  3603  001D26  C0AF  F07A         	movff	dtoa@n+5,___aodiv@dividend+5
  3604  001D2A  C0B0  F07B         	movff	dtoa@n+6,___aodiv@dividend+6
  3605  001D2E  C0B1  F07C         	movff	dtoa@n+7,___aodiv@dividend+7
  3606  001D32  0E0A               	movlw	10
  3607  001D34  6F7D               	movwf	___aodiv@divisor& (0+255),b
  3608  001D36  0E00               	movlw	0
  3609  001D38  6F7E               	movwf	(___aodiv@divisor+1)& (0+255),b
  3610  001D3A  0E00               	movlw	0
  3611  001D3C  6F7F               	movwf	(___aodiv@divisor+2)& (0+255),b
  3612  001D3E  0E00               	movlw	0
  3613  001D40  6F80               	movwf	(___aodiv@divisor+3)& (0+255),b
  3614  001D42  0E00               	movlw	0
  3615  001D44  6F81               	movwf	(___aodiv@divisor+4)& (0+255),b
  3616  001D46  0E00               	movlw	0
  3617  001D48  6F82               	movwf	(___aodiv@divisor+5)& (0+255),b
  3618  001D4A  0E00               	movlw	0
  3619  001D4C  6F83               	movwf	(___aodiv@divisor+6)& (0+255),b
  3620  001D4E  0E00               	movlw	0
  3621  001D50  6F84               	movwf	(___aodiv@divisor+7)& (0+255),b
  3622  001D52  ECFF  F013         	call	___aodiv	;wreg free
  3623  001D56  C075  F0AA         	movff	?___aodiv,dtoa@n
  3624  001D5A  C076  F0AB         	movff	?___aodiv+1,dtoa@n+1
  3625  001D5E  C077  F0AC         	movff	?___aodiv+2,dtoa@n+2
  3626  001D62  C078  F0AD         	movff	?___aodiv+3,dtoa@n+3
  3627  001D66  C079  F0AE         	movff	?___aodiv+4,dtoa@n+4
  3628  001D6A  C07A  F0AF         	movff	?___aodiv+5,dtoa@n+5
  3629  001D6E  C07B  F0B0         	movff	?___aodiv+6,dtoa@n+6
  3630  001D72  C07C  F0B1         	movff	?___aodiv+7,dtoa@n+7
  3631  001D76                     l4044:
  3632                           
  3633                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3634  001D76  0100               	movlb	0	; () banked
  3635  001D78  BFB3               	btfsc	(dtoa@i+1)& (0+255),7,b
  3636  001D7A  EFC7  F00E         	goto	u4341
  3637  001D7E  51B3               	movf	(dtoa@i+1)& (0+255),w,b
  3638  001D80  E108               	bnz	u4340
  3639  001D82  05B2               	decf	dtoa@i& (0+255),w,b
  3640  001D84  A0D8               	btfss	status,0,c
  3641  001D86  EFC7  F00E         	goto	u4341
  3642  001D8A  EFC9  F00E         	goto	u4340
  3643  001D8E                     u4341:
  3644  001D8E  EFF9  F00E         	goto	l4054
  3645  001D92                     u4340:
  3646  001D92                     
  3647                           ; BSR set to: 0
  3648  001D92  51AA               	movf	dtoa@n& (0+255),w,b
  3649  001D94  11AB               	iorwf	(dtoa@n+1)& (0+255),w,b
  3650  001D96  11AC               	iorwf	(dtoa@n+2)& (0+255),w,b
  3651  001D98  11AD               	iorwf	(dtoa@n+3)& (0+255),w,b
  3652  001D9A  11AE               	iorwf	(dtoa@n+4)& (0+255),w,b
  3653  001D9C  11AF               	iorwf	(dtoa@n+5)& (0+255),w,b
  3654  001D9E  11B0               	iorwf	(dtoa@n+6)& (0+255),w,b
  3655  001DA0  11B1               	iorwf	(dtoa@n+7)& (0+255),w,b
  3656  001DA2  A4D8               	btfss	status,2,c
  3657  001DA4  EFD6  F00E         	goto	u4351
  3658  001DA8  EFD8  F00E         	goto	u4350
  3659  001DAC                     u4351:
  3660  001DAC  EF3E  F00E         	goto	l4034
  3661  001DB0                     u4350:
  3662  001DB0                     
  3663                           ; BSR set to: 0
  3664  001DB0  BFA5               	btfsc	(dtoa@p+1)& (0+255),7,b
  3665  001DB2  EFE5  F00E         	goto	u4360
  3666  001DB6  51A5               	movf	(dtoa@p+1)& (0+255),w,b
  3667  001DB8  E106               	bnz	u4361
  3668  001DBA  05A4               	decf	dtoa@p& (0+255),w,b
  3669  001DBC  B0D8               	btfsc	status,0,c
  3670  001DBE  EFE3  F00E         	goto	u4361
  3671  001DC2  EFE5  F00E         	goto	u4360
  3672  001DC6                     u4361:
  3673  001DC6  EF3E  F00E         	goto	l4034
  3674  001DCA                     u4360:
  3675  001DCA                     
  3676                           ; BSR set to: 0
  3677  001DCA  BFA7               	btfsc	(dtoa@w+1)& (0+255),7,b
  3678  001DCC  EFF0  F00E         	goto	u4371
  3679  001DD0  51A7               	movf	(dtoa@w+1)& (0+255),w,b
  3680  001DD2  E108               	bnz	u4370
  3681  001DD4  05A6               	decf	dtoa@w& (0+255),w,b
  3682  001DD6  A0D8               	btfss	status,0,c
  3683  001DD8  EFF0  F00E         	goto	u4371
  3684  001DDC  EFF2  F00E         	goto	u4370
  3685  001DE0                     u4371:
  3686  001DE0  EFF9  F00E         	goto	l4054
  3687  001DE4                     u4370:
  3688  001DE4                     
  3689                           ; BSR set to: 0
  3690  001DE4  B3E0               	btfsc	_flags& (0+255),1,b
  3691  001DE6  EFF7  F00E         	goto	u4381
  3692  001DEA  EFF9  F00E         	goto	u4380
  3693  001DEE                     u4381:
  3694  001DEE  EF3E  F00E         	goto	l4034
  3695  001DF2                     u4380:
  3696  001DF2                     l4054:
  3697                           
  3698                           ; BSR set to: 0
  3699                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  3700  001DF2  51A8               	movf	dtoa@s& (0+255),w,b
  3701  001DF4  11A9               	iorwf	(dtoa@s+1)& (0+255),w,b
  3702  001DF6  A4D8               	btfss	status,2,c
  3703  001DF8  EF00  F00F         	goto	u4391
  3704  001DFC  EF02  F00F         	goto	u4390
  3705  001E00                     u4391:
  3706  001E00  EF09  F00F         	goto	l4058
  3707  001E04                     u4390:
  3708  001E04                     
  3709                           ; BSR set to: 0
  3710  001E04  A5E0               	btfss	_flags& (0+255),2,b
  3711  001E06  EF07  F00F         	goto	u4401
  3712  001E0A  EF09  F00F         	goto	u4400
  3713  001E0E                     u4401:
  3714  001E0E  EF27  F00F         	goto	l4068
  3715  001E12                     u4400:
  3716  001E12                     l4058:
  3717                           
  3718                           ; BSR set to: 0
  3719                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  3720  001E12  07B2               	decf	dtoa@i& (0+255),f,b
  3721  001E14  A0D8               	btfss	status,0,c
  3722  001E16  07B3               	decf	(dtoa@i+1)& (0+255),f,b
  3723  001E18                     
  3724                           ; BSR set to: 0
  3725                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  3726  001E18  51A8               	movf	dtoa@s& (0+255),w,b
  3727  001E1A  11A9               	iorwf	(dtoa@s+1)& (0+255),w,b
  3728  001E1C  A4D8               	btfss	status,2,c
  3729  001E1E  EF13  F00F         	goto	u4411
  3730  001E22  EF15  F00F         	goto	u4410
  3731  001E26                     u4411:
  3732  001E26  EF1B  F00F         	goto	l4064
  3733  001E2A                     u4410:
  3734  001E2A                     
  3735                           ; BSR set to: 0
  3736  001E2A  0E00               	movlw	0
  3737  001E2C  6FA3               	movwf	(_dtoa$1861+1)& (0+255),b
  3738  001E2E  0E2B               	movlw	43
  3739  001E30  6FA2               	movwf	_dtoa$1861& (0+255),b
  3740  001E32  EF1F  F00F         	goto	l4066
  3741  001E36                     l4064:
  3742                           
  3743                           ; BSR set to: 0
  3744  001E36  0E00               	movlw	0
  3745  001E38  6FA3               	movwf	(_dtoa$1861+1)& (0+255),b
  3746  001E3A  0E2D               	movlw	45
  3747  001E3C  6FA2               	movwf	_dtoa$1861& (0+255),b
  3748  001E3E                     l4066:
  3749                           
  3750                           ; BSR set to: 0
  3751  001E3E  0EC4               	movlw	low _dbuf
  3752  001E40  25B2               	addwf	dtoa@i& (0+255),w,b
  3753  001E42  6ED9               	movwf	fsr2l,c
  3754  001E44  0E02               	movlw	high _dbuf
  3755  001E46  21B3               	addwfc	(dtoa@i+1)& (0+255),w,b
  3756  001E48  6EDA               	movwf	fsr2h,c
  3757  001E4A  C0A2  FFDF         	movff	_dtoa$1861,indf2
  3758  001E4E                     l4068:
  3759                           
  3760                           ; BSR set to: 0
  3761                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  3762  001E4E  C090  F085         	movff	dtoa@fp,pad@fp
  3763  001E52  C091  F086         	movff	dtoa@fp+1,pad@fp+1
  3764  001E56  0EC4               	movlw	low _dbuf
  3765  001E58  25B2               	addwf	dtoa@i& (0+255),w,b
  3766  001E5A  6F87               	movwf	pad@buf& (0+255),b
  3767  001E5C  0E02               	movlw	high _dbuf
  3768  001E5E  21B3               	addwfc	(dtoa@i+1)& (0+255),w,b
  3769  001E60  6F88               	movwf	(pad@buf+1)& (0+255),b
  3770  001E62  C0A6  F089         	movff	dtoa@w,pad@p
  3771  001E66  C0A7  F08A         	movff	dtoa@w+1,pad@p+1
  3772  001E6A  EC16  F018         	call	_pad	;wreg free
  3773  001E6E  C085  F090         	movff	?_pad,?_dtoa
  3774  001E72  C086  F091         	movff	?_pad+1,?_dtoa+1
  3775  001E76  0012               	return		;funcret
  3776  001E78                     __end_of_dtoa:
  3777                           	callstack 0
  3778                           
  3779 ;; *************** function _pad *****************
  3780 ;; Defined at:
  3781 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  3782 ;; Parameters:    Size  Location     Type
  3783 ;;  fp              2   37[BANK0 ] PTR struct _IO_FILE
  3784 ;;		 -> NULL(0), sprintf@f(6), 
  3785 ;;  buf             2   39[BANK0 ] PTR unsigned char 
  3786 ;;		 -> dbuf(32), 
  3787 ;;  p               2   41[BANK0 ] int 
  3788 ;; Auto vars:     Size  Location     Type
  3789 ;;  w               2   46[BANK0 ] int 
  3790 ;;  i               2   44[BANK0 ] int 
  3791 ;; Return value:  Size  Location     Type
  3792 ;;                  2   37[BANK0 ] int 
  3793 ;; Registers used:
  3794 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3795 ;; Tracked objects:
  3796 ;;		On entry : 0/0
  3797 ;;		On exit  : 0/0
  3798 ;;		Unchanged: 0/0
  3799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3800 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3801 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3802 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3803 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3804 ;;Total ram usage:       11 bytes
  3805 ;; Hardware stack levels used:    1
  3806 ;; Hardware stack levels required when called:   13
  3807 ;; This function calls:
  3808 ;;		_fputc
  3809 ;;		_fputs
  3810 ;;		_strlen
  3811 ;; This function is called by:
  3812 ;;		_dtoa
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816                           	psect	text7
  3817  00302C                     __ptext7:
  3818                           	callstack 0
  3819  00302C                     _pad:
  3820                           	callstack 12
  3821  00302C                     
  3822                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3823  00302C  0100               	movlb	0	; () banked
  3824  00302E  A1E0               	btfss	_flags& (0+255),0,b
  3825  003030  EF1C  F018         	goto	u4161
  3826  003034  EF1E  F018         	goto	u4160
  3827  003038                     u4161:
  3828  003038  EF28  F018         	goto	l3954
  3829  00303C                     u4160:
  3830  00303C                     
  3831                           ; BSR set to: 0
  3832                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3833  00303C  C087  F07E         	movff	pad@buf,fputs@s
  3834  003040  C088  F07F         	movff	pad@buf+1,fputs@s+1
  3835  003044  C085  F080         	movff	pad@fp,fputs@fp
  3836  003048  C086  F081         	movff	pad@fp+1,fputs@fp+1
  3837  00304C  ECCE  F01B         	call	_fputs	;wreg free
  3838  003050                     l3954:
  3839                           
  3840                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3841  003050  0100               	movlb	0	; () banked
  3842  003052  BF8A               	btfsc	(pad@p+1)& (0+255),7,b
  3843  003054  EF2E  F018         	goto	u4171
  3844  003058  EF30  F018         	goto	u4170
  3845  00305C                     u4171:
  3846  00305C  EF36  F018         	goto	l3958
  3847  003060                     u4170:
  3848  003060                     
  3849                           ; BSR set to: 0
  3850  003060  C089  F08E         	movff	pad@p,pad@w
  3851  003064  C08A  F08F         	movff	pad@p+1,pad@w+1
  3852  003068  EF3A  F018         	goto	l955
  3853  00306C                     l3958:
  3854                           
  3855                           ; BSR set to: 0
  3856  00306C  0E00               	movlw	0
  3857  00306E  6F8F               	movwf	(pad@w+1)& (0+255),b
  3858  003070  0E00               	movlw	0
  3859  003072  6F8E               	movwf	pad@w& (0+255),b
  3860  003074                     l955:
  3861                           
  3862                           ; BSR set to: 0
  3863                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3864  003074  0E00               	movlw	0
  3865  003076  6F8D               	movwf	(pad@i+1)& (0+255),b
  3866  003078  0E00               	movlw	0
  3867  00307A  6F8C               	movwf	pad@i& (0+255),b
  3868                           
  3869                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3870  00307C  EF4D  F018         	goto	l3964
  3871  003080                     l3960:
  3872                           
  3873                           ; BSR set to: 0
  3874                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3875  003080  0E00               	movlw	0
  3876  003082  6F76               	movwf	(fputc@c+1)& (0+255),b
  3877  003084  0E20               	movlw	32
  3878  003086  6F75               	movwf	fputc@c& (0+255),b
  3879  003088  C085  F077         	movff	pad@fp,fputc@fp
  3880  00308C  C086  F078         	movff	pad@fp+1,fputc@fp+1
  3881  003090  ECB0  F017         	call	_fputc	;wreg free
  3882  003094                     
  3883                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3884  003094  0100               	movlb	0	; () banked
  3885  003096  4B8C               	infsnz	pad@i& (0+255),f,b
  3886  003098  2B8D               	incf	(pad@i+1)& (0+255),f,b
  3887  00309A                     l3964:
  3888                           
  3889                           ; BSR set to: 0
  3890                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3891  00309A  518E               	movf	pad@w& (0+255),w,b
  3892  00309C  5D8C               	subwf	pad@i& (0+255),w,b
  3893  00309E  518D               	movf	(pad@i+1)& (0+255),w,b
  3894  0030A0  0A80               	xorlw	128
  3895  0030A2  6F8B               	movwf	??_pad& (0+255),b
  3896  0030A4  518F               	movf	(pad@w+1)& (0+255),w,b
  3897  0030A6  0A80               	xorlw	128
  3898  0030A8  598B               	subwfb	??_pad& (0+255),w,b
  3899  0030AA  A0D8               	btfss	status,0,c
  3900  0030AC  EF5A  F018         	goto	u4181
  3901  0030B0  EF5C  F018         	goto	u4180
  3902  0030B4                     u4181:
  3903  0030B4  EF40  F018         	goto	l3960
  3904  0030B8                     u4180:
  3905  0030B8                     
  3906                           ; BSR set to: 0
  3907                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3908  0030B8  B1E0               	btfsc	_flags& (0+255),0,b
  3909  0030BA  EF61  F018         	goto	u4191
  3910  0030BE  EF63  F018         	goto	u4190
  3911  0030C2                     u4191:
  3912  0030C2  EF6D  F018         	goto	l3968
  3913  0030C6                     u4190:
  3914  0030C6                     
  3915                           ; BSR set to: 0
  3916                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3917  0030C6  C087  F07E         	movff	pad@buf,fputs@s
  3918  0030CA  C088  F07F         	movff	pad@buf+1,fputs@s+1
  3919  0030CE  C085  F080         	movff	pad@fp,fputs@fp
  3920  0030D2  C086  F081         	movff	pad@fp+1,fputs@fp+1
  3921  0030D6  ECCE  F01B         	call	_fputs	;wreg free
  3922  0030DA                     l3968:
  3923                           
  3924                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3925  0030DA  C087  F075         	movff	pad@buf,strlen@s
  3926  0030DE  C088  F076         	movff	pad@buf+1,strlen@s+1
  3927  0030E2  ECB6  F01C         	call	_strlen	;wreg free
  3928  0030E6  0100               	movlb	0	; () banked
  3929  0030E8  518E               	movf	pad@w& (0+255),w,b
  3930  0030EA  2575               	addwf	?_strlen& (0+255),w,b
  3931  0030EC  6F85               	movwf	?_pad& (0+255),b
  3932  0030EE  518F               	movf	(pad@w+1)& (0+255),w,b
  3933  0030F0  2176               	addwfc	(?_strlen+1)& (0+255),w,b
  3934  0030F2  6F86               	movwf	(?_pad+1)& (0+255),b
  3935  0030F4                     
  3936                           ; BSR set to: 0
  3937  0030F4  0012               	return		;funcret
  3938  0030F6                     __end_of_pad:
  3939                           	callstack 0
  3940                           
  3941 ;; *************** function _strlen *****************
  3942 ;; Defined at:
  3943 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;  s               2   21[BANK0 ] PTR const unsigned char 
  3946 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), ?_sprintf(2), 
  3947 ;;		 -> time_now@daylist(70), 
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;  a               2   23[BANK0 ] PTR const unsigned char 
  3950 ;;		 -> ?_printf(2), stoa@nuls(7), dbuf(32), ?_sprintf(2), 
  3951 ;;		 -> time_now@daylist(70), 
  3952 ;; Return value:  Size  Location     Type
  3953 ;;                  2   21[BANK0 ] unsigned int 
  3954 ;; Registers used:
  3955 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3956 ;; Tracked objects:
  3957 ;;		On entry : 0/0
  3958 ;;		On exit  : 0/0
  3959 ;;		Unchanged: 0/0
  3960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3961 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3962 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3964 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3965 ;;Total ram usage:        4 bytes
  3966 ;; Hardware stack levels used:    1
  3967 ;; Hardware stack levels required when called:   10
  3968 ;; This function calls:
  3969 ;;		Nothing
  3970 ;; This function is called by:
  3971 ;;		_pad
  3972 ;;		_stoa
  3973 ;; This function uses a non-reentrant model
  3974 ;;
  3975                           
  3976                           	psect	text8
  3977  00396C                     __ptext8:
  3978                           	callstack 0
  3979  00396C                     _strlen:
  3980                           	callstack 15
  3981  00396C  C075  F077         	movff	strlen@s,strlen@a
  3982  003970  C076  F078         	movff	strlen@s+1,strlen@a+1
  3983  003974  EFBF  F01C         	goto	l3844
  3984  003978                     l3842:
  3985  003978  0100               	movlb	0	; () banked
  3986  00397A  4B75               	infsnz	strlen@s& (0+255),f,b
  3987  00397C  2B76               	incf	(strlen@s+1)& (0+255),f,b
  3988  00397E                     l3844:
  3989  00397E  C075  FFD9         	movff	strlen@s,fsr2l
  3990  003982  C076  FFDA         	movff	strlen@s+1,fsr2h
  3991  003986  50DF               	movf	indf2,w,c
  3992  003988  A4D8               	btfss	status,2,c
  3993  00398A  EFC9  F01C         	goto	u3981
  3994  00398E  EFCB  F01C         	goto	u3980
  3995  003992                     u3981:
  3996  003992  EFBC  F01C         	goto	l3842
  3997  003996                     u3980:
  3998  003996  0100               	movlb	0	; () banked
  3999  003998  5177               	movf	strlen@a& (0+255),w,b
  4000  00399A  5D75               	subwf	strlen@s& (0+255),w,b
  4001  00399C  6F75               	movwf	?_strlen& (0+255),b
  4002  00399E  5178               	movf	(strlen@a+1)& (0+255),w,b
  4003  0039A0  5976               	subwfb	(strlen@s+1)& (0+255),w,b
  4004  0039A2  6F76               	movwf	(?_strlen+1)& (0+255),b
  4005  0039A4                     
  4006                           ; BSR set to: 0
  4007  0039A4  0012               	return		;funcret
  4008  0039A6                     __end_of_strlen:
  4009                           	callstack 0
  4010                           
  4011 ;; *************** function _fputs *****************
  4012 ;; Defined at:
  4013 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;  s               2   30[BANK0 ] PTR const unsigned char 
  4016 ;;		 -> dbuf(32), 
  4017 ;;  fp              2   32[BANK0 ] PTR struct _IO_FILE
  4018 ;;		 -> NULL(0), sprintf@f(6), 
  4019 ;; Auto vars:     Size  Location     Type
  4020 ;;  i               2   35[BANK0 ] int 
  4021 ;;  c               1   34[BANK0 ] unsigned char 
  4022 ;; Return value:  Size  Location     Type
  4023 ;;                  2   30[BANK0 ] int 
  4024 ;; Registers used:
  4025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4026 ;; Tracked objects:
  4027 ;;		On entry : 0/0
  4028 ;;		On exit  : 0/0
  4029 ;;		Unchanged: 0/0
  4030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4031 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4032 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4034 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4035 ;;Total ram usage:        7 bytes
  4036 ;; Hardware stack levels used:    1
  4037 ;; Hardware stack levels required when called:   12
  4038 ;; This function calls:
  4039 ;;		_fputc
  4040 ;; This function is called by:
  4041 ;;		_pad
  4042 ;; This function uses a non-reentrant model
  4043 ;;
  4044                           
  4045                           	psect	text9
  4046  00379C                     __ptext9:
  4047                           	callstack 0
  4048  00379C                     _fputs:
  4049                           	callstack 12
  4050  00379C  0E00               	movlw	0
  4051  00379E  0100               	movlb	0	; () banked
  4052  0037A0  6F84               	movwf	(fputs@i+1)& (0+255),b
  4053  0037A2  0E00               	movlw	0
  4054  0037A4  6F83               	movwf	fputs@i& (0+255),b
  4055  0037A6  EFE1  F01B         	goto	l3838
  4056  0037AA                     l3834:
  4057                           
  4058                           ; BSR set to: 0
  4059  0037AA  C082  F075         	movff	fputs@c,fputc@c
  4060  0037AE  6B76               	clrf	(fputc@c+1)& (0+255),b
  4061  0037B0  C080  F077         	movff	fputs@fp,fputc@fp
  4062  0037B4  C081  F078         	movff	fputs@fp+1,fputc@fp+1
  4063  0037B8  ECB0  F017         	call	_fputc	;wreg free
  4064  0037BC  0100               	movlb	0	; () banked
  4065  0037BE  4B83               	infsnz	fputs@i& (0+255),f,b
  4066  0037C0  2B84               	incf	(fputs@i+1)& (0+255),f,b
  4067  0037C2                     l3838:
  4068                           
  4069                           ; BSR set to: 0
  4070  0037C2  5183               	movf	fputs@i& (0+255),w,b
  4071  0037C4  257E               	addwf	fputs@s& (0+255),w,b
  4072  0037C6  6ED9               	movwf	fsr2l,c
  4073  0037C8  5184               	movf	(fputs@i+1)& (0+255),w,b
  4074  0037CA  217F               	addwfc	(fputs@s+1)& (0+255),w,b
  4075  0037CC  6EDA               	movwf	fsr2h,c
  4076  0037CE  50DF               	movf	indf2,w,c
  4077  0037D0  6F82               	movwf	fputs@c& (0+255),b
  4078  0037D2  5182               	movf	fputs@c& (0+255),w,b
  4079  0037D4  A4D8               	btfss	status,2,c
  4080  0037D6  EFEF  F01B         	goto	u3971
  4081  0037DA  EFF1  F01B         	goto	u3970
  4082  0037DE                     u3971:
  4083  0037DE  EFD5  F01B         	goto	l3834
  4084  0037E2                     u3970:
  4085  0037E2                     
  4086                           ; BSR set to: 0
  4087  0037E2  0012               	return		;funcret
  4088  0037E4                     __end_of_fputs:
  4089                           	callstack 0
  4090                           
  4091 ;; *************** function _fputc *****************
  4092 ;; Defined at:
  4093 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;  c               2   21[BANK0 ] int 
  4096 ;;  fp              2   23[BANK0 ] PTR struct _IO_FILE
  4097 ;;		 -> NULL(0), sprintf@f(6), 
  4098 ;; Auto vars:     Size  Location     Type
  4099 ;;		None
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  2   21[BANK0 ] int 
  4102 ;; Registers used:
  4103 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4104 ;; Tracked objects:
  4105 ;;		On entry : 0/0
  4106 ;;		On exit  : 0/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4109 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4111 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4112 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4113 ;;Total ram usage:        9 bytes
  4114 ;; Hardware stack levels used:    1
  4115 ;; Hardware stack levels required when called:   11
  4116 ;; This function calls:
  4117 ;;		_putch
  4118 ;; This function is called by:
  4119 ;;		_pad
  4120 ;;		_stoa
  4121 ;;		_vfpfcnvrt
  4122 ;;		_fputs
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           
  4126                           	psect	text10
  4127  002F60                     __ptext10:
  4128                           	callstack 0
  4129  002F60                     _fputc:
  4130                           	callstack 14
  4131  002F60  0100               	movlb	0	; () banked
  4132  002F62  5177               	movf	fputc@fp& (0+255),w,b
  4133  002F64  1178               	iorwf	(fputc@fp+1)& (0+255),w,b
  4134  002F66  B4D8               	btfsc	status,2,c
  4135  002F68  EFB8  F017         	goto	u3931
  4136  002F6C  EFBA  F017         	goto	u3930
  4137  002F70                     u3931:
  4138  002F70  EFC3  F017         	goto	l3822
  4139  002F74                     u3930:
  4140  002F74                     
  4141                           ; BSR set to: 0
  4142  002F74  5177               	movf	fputc@fp& (0+255),w,b
  4143  002F76  1178               	iorwf	(fputc@fp+1)& (0+255),w,b
  4144  002F78  A4D8               	btfss	status,2,c
  4145  002F7A  EFC1  F017         	goto	u3941
  4146  002F7E  EFC3  F017         	goto	u3940
  4147  002F82                     u3941:
  4148  002F82  EFC8  F017         	goto	l3824
  4149  002F86                     u3940:
  4150  002F86                     l3822:
  4151                           
  4152                           ; BSR set to: 0
  4153  002F86  5175               	movf	fputc@c& (0+255),w,b
  4154  002F88  ECF2  F01D         	call	_putch
  4155  002F8C  EF15  F018         	goto	l1110
  4156  002F90                     l3824:
  4157                           
  4158                           ; BSR set to: 0
  4159  002F90  EE20 F004          	lfsr	2,4
  4160  002F94  5177               	movf	fputc@fp& (0+255),w,b
  4161  002F96  26D9               	addwf	fsr2l,f,c
  4162  002F98  5178               	movf	(fputc@fp+1)& (0+255),w,b
  4163  002F9A  22DA               	addwfc	fsr2h,f,c
  4164  002F9C  50DE               	movf	postinc2,w,c
  4165  002F9E  10DE               	iorwf	postinc2,w,c
  4166  002FA0  B4D8               	btfsc	status,2,c
  4167  002FA2  EFD5  F017         	goto	u3951
  4168  002FA6  EFD7  F017         	goto	u3950
  4169  002FAA                     u3951:
  4170  002FAA  EFF2  F017         	goto	l3828
  4171  002FAE                     u3950:
  4172  002FAE                     
  4173                           ; BSR set to: 0
  4174  002FAE  EE20 F004          	lfsr	2,4
  4175  002FB2  5177               	movf	fputc@fp& (0+255),w,b
  4176  002FB4  26D9               	addwf	fsr2l,f,c
  4177  002FB6  5178               	movf	(fputc@fp+1)& (0+255),w,b
  4178  002FB8  22DA               	addwfc	fsr2h,f,c
  4179  002FBA  EE10 F002          	lfsr	1,2
  4180  002FBE  5177               	movf	fputc@fp& (0+255),w,b
  4181  002FC0  26E1               	addwf	fsr1l,f,c
  4182  002FC2  5178               	movf	(fputc@fp+1)& (0+255),w,b
  4183  002FC4  22E2               	addwfc	fsr1h,f,c
  4184  002FC6  50DE               	movf	postinc2,w,c
  4185  002FC8  5CE6               	subwf	postinc1,w,c
  4186  002FCA  50E6               	movf	postinc1,w,c
  4187  002FCC  0A80               	xorlw	128
  4188  002FCE  6F7D               	movwf	(??_fputc+4)& (0+255),b
  4189  002FD0  50DE               	movf	postinc2,w,c
  4190  002FD2  0A80               	xorlw	128
  4191  002FD4  597D               	subwfb	(??_fputc+4)& (0+255),w,b
  4192  002FD6  B0D8               	btfsc	status,0,c
  4193  002FD8  EFF0  F017         	goto	u3961
  4194  002FDC  EFF2  F017         	goto	u3960
  4195  002FE0                     u3961:
  4196  002FE0  EF15  F018         	goto	l1110
  4197  002FE4                     u3960:
  4198  002FE4                     l3828:
  4199                           
  4200                           ; BSR set to: 0
  4201  002FE4  EE20 F002          	lfsr	2,2
  4202  002FE8  5177               	movf	fputc@fp& (0+255),w,b
  4203  002FEA  26D9               	addwf	fsr2l,f,c
  4204  002FEC  5178               	movf	(fputc@fp+1)& (0+255),w,b
  4205  002FEE  22DA               	addwfc	fsr2h,f,c
  4206  002FF0  CFDE F079          	movff	postinc2,??_fputc
  4207  002FF4  CFDD F07A          	movff	postdec2,??_fputc+1
  4208  002FF8  C077  FFD9         	movff	fputc@fp,fsr2l
  4209  002FFC  C078  FFDA         	movff	fputc@fp+1,fsr2h
  4210  003000  CFDE F07B          	movff	postinc2,??_fputc+2
  4211  003004  CFDD F07C          	movff	postdec2,??_fputc+3
  4212  003008  5179               	movf	??_fputc& (0+255),w,b
  4213  00300A  257B               	addwf	(??_fputc+2)& (0+255),w,b
  4214  00300C  6ED9               	movwf	fsr2l,c
  4215  00300E  517A               	movf	(??_fputc+1)& (0+255),w,b
  4216  003010  217C               	addwfc	(??_fputc+3)& (0+255),w,b
  4217  003012  6EDA               	movwf	fsr2h,c
  4218  003014  C075  FFDF         	movff	fputc@c,indf2
  4219  003018  EE20 F002          	lfsr	2,2
  4220  00301C  5177               	movf	fputc@fp& (0+255),w,b
  4221  00301E  26D9               	addwf	fsr2l,f,c
  4222  003020  5178               	movf	(fputc@fp+1)& (0+255),w,b
  4223  003022  22DA               	addwfc	fsr2h,f,c
  4224  003024  2ADE               	incf	postinc2,f,c
  4225  003026  0E00               	movlw	0
  4226  003028  22DD               	addwfc	postdec2,f,c
  4227  00302A                     l1110:
  4228  00302A  0012               	return		;funcret
  4229  00302C                     __end_of_fputc:
  4230                           	callstack 0
  4231                           
  4232 ;; *************** function _putch *****************
  4233 ;; Defined at:
  4234 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;  c               1    wreg     unsigned char 
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;  c               1    0[COMRAM] unsigned char 
  4239 ;; Return value:  Size  Location     Type
  4240 ;;                  1    wreg      void 
  4241 ;; Registers used:
  4242 ;;		wreg
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/0
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4252 ;;Total ram usage:        0 bytes
  4253 ;; Hardware stack levels used:    1
  4254 ;; Hardware stack levels required when called:   10
  4255 ;; This function calls:
  4256 ;;		Nothing
  4257 ;; This function is called by:
  4258 ;;		_fputc
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           	psect	text11
  4263  003BE4                     __ptext11:
  4264                           	callstack 0
  4265  003BE4                     _putch:
  4266                           	callstack 14
  4267  003BE4  0012               	return		;funcret
  4268  003BE6                     __end_of_putch:
  4269                           	callstack 0
  4270                           
  4271 ;; *************** function _abs *****************
  4272 ;; Defined at:
  4273 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  4274 ;; Parameters:    Size  Location     Type
  4275 ;;  a               2   39[BANK0 ] int 
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;		None
  4278 ;; Return value:  Size  Location     Type
  4279 ;;                  2   39[BANK0 ] int 
  4280 ;; Registers used:
  4281 ;;		wreg, status,2, status,0
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4287 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4289 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4290 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4291 ;;Total ram usage:        4 bytes
  4292 ;; Hardware stack levels used:    1
  4293 ;; Hardware stack levels required when called:   10
  4294 ;; This function calls:
  4295 ;;		Nothing
  4296 ;; This function is called by:
  4297 ;;		_dtoa
  4298 ;; This function uses a non-reentrant model
  4299 ;;
  4300                           
  4301                           	psect	text12
  4302  00386E                     __ptext12:
  4303                           	callstack 0
  4304  00386E                     _abs:
  4305                           	callstack 15
  4306  00386E  0100               	movlb	0	; () banked
  4307  003870  BF88               	btfsc	(abs@a+1)& (0+255),7,b
  4308  003872  EF45  F01C         	goto	u4200
  4309  003876  5188               	movf	(abs@a+1)& (0+255),w,b
  4310  003878  E106               	bnz	u4201
  4311  00387A  0587               	decf	abs@a& (0+255),w,b
  4312  00387C  B0D8               	btfsc	status,0,c
  4313  00387E  EF43  F01C         	goto	u4201
  4314  003882  EF45  F01C         	goto	u4200
  4315  003886                     u4201:
  4316  003886  EF53  F01C         	goto	l1050
  4317  00388A                     u4200:
  4318  00388A                     
  4319                           ; BSR set to: 0
  4320  00388A  C087  F089         	movff	abs@a,??_abs
  4321  00388E  C088  F08A         	movff	abs@a+1,??_abs+1
  4322  003892  1F89               	comf	??_abs& (0+255),f,b
  4323  003894  1F8A               	comf	(??_abs+1)& (0+255),f,b
  4324  003896  4B89               	infsnz	??_abs& (0+255),f,b
  4325  003898  2B8A               	incf	(??_abs+1)& (0+255),f,b
  4326  00389A  C089  F087         	movff	??_abs,?_abs
  4327  00389E  C08A  F088         	movff	??_abs+1,?_abs+1
  4328  0038A2  EF57  F01C         	goto	l1053
  4329  0038A6                     l1050:
  4330                           
  4331                           ; BSR set to: 0
  4332  0038A6  C087  F087         	movff	abs@a,?_abs
  4333  0038AA  C088  F088         	movff	abs@a+1,?_abs+1
  4334  0038AE                     l1053:
  4335                           
  4336                           ; BSR set to: 0
  4337  0038AE  0012               	return		;funcret
  4338  0038B0                     __end_of_abs:
  4339                           	callstack 0
  4340                           
  4341 ;; *************** function ___aomod *****************
  4342 ;; Defined at:
  4343 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;  dividend        8   21[BANK0 ] long long 
  4346 ;;  divisor         8   29[BANK0 ] long long 
  4347 ;; Auto vars:     Size  Location     Type
  4348 ;;  sign            1   38[BANK0 ] unsigned char 
  4349 ;;  counter         1   37[BANK0 ] unsigned char 
  4350 ;; Return value:  Size  Location     Type
  4351 ;;                  8   21[BANK0 ] long long 
  4352 ;; Registers used:
  4353 ;;		wreg, status,2, status,0
  4354 ;; Tracked objects:
  4355 ;;		On entry : 0/0
  4356 ;;		On exit  : 0/0
  4357 ;;		Unchanged: 0/0
  4358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4359 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4360 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4362 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4363 ;;Total ram usage:       18 bytes
  4364 ;; Hardware stack levels used:    1
  4365 ;; Hardware stack levels required when called:   10
  4366 ;; This function calls:
  4367 ;;		Nothing
  4368 ;; This function is called by:
  4369 ;;		_dtoa
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           	psect	text13
  4374  002C96                     __ptext13:
  4375                           	callstack 0
  4376  002C96                     ___aomod:
  4377                           	callstack 15
  4378  002C96  0E00               	movlw	0
  4379  002C98  0100               	movlb	0	; () banked
  4380  002C9A  6F86               	movwf	___aomod@sign& (0+255),b
  4381  002C9C                     
  4382                           ; BSR set to: 0
  4383  002C9C  BF7C               	btfsc	(___aomod@dividend+7)& (0+255),7,b
  4384  002C9E  EF55  F016         	goto	u4100
  4385  002CA2  EF53  F016         	goto	u4101
  4386  002CA6                     u4101:
  4387  002CA6  EF67  F016         	goto	l3922
  4388  002CAA                     u4100:
  4389  002CAA                     
  4390                           ; BSR set to: 0
  4391  002CAA  1F7C               	comf	(___aomod@dividend+7)& (0+255),f,b
  4392  002CAC  1F7B               	comf	(___aomod@dividend+6)& (0+255),f,b
  4393  002CAE  1F7A               	comf	(___aomod@dividend+5)& (0+255),f,b
  4394  002CB0  1F79               	comf	(___aomod@dividend+4)& (0+255),f,b
  4395  002CB2  1F78               	comf	(___aomod@dividend+3)& (0+255),f,b
  4396  002CB4  1F77               	comf	(___aomod@dividend+2)& (0+255),f,b
  4397  002CB6  1F76               	comf	(___aomod@dividend+1)& (0+255),f,b
  4398  002CB8  6D75               	negf	___aomod@dividend& (0+255),b
  4399  002CBA  0E00               	movlw	0
  4400  002CBC  2376               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  4401  002CBE  2377               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  4402  002CC0  2378               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  4403  002CC2  2379               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  4404  002CC4  237A               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  4405  002CC6  237B               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  4406  002CC8  237C               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  4407  002CCA                     
  4408                           ; BSR set to: 0
  4409  002CCA  0E01               	movlw	1
  4410  002CCC  6F86               	movwf	___aomod@sign& (0+255),b
  4411  002CCE                     l3922:
  4412                           
  4413                           ; BSR set to: 0
  4414  002CCE  BF84               	btfsc	(___aomod@divisor+7)& (0+255),7,b
  4415  002CD0  EF6E  F016         	goto	u4110
  4416  002CD4  EF6C  F016         	goto	u4111
  4417  002CD8                     u4111:
  4418  002CD8  EF7E  F016         	goto	l3926
  4419  002CDC                     u4110:
  4420  002CDC                     
  4421                           ; BSR set to: 0
  4422  002CDC  1F84               	comf	(___aomod@divisor+7)& (0+255),f,b
  4423  002CDE  1F83               	comf	(___aomod@divisor+6)& (0+255),f,b
  4424  002CE0  1F82               	comf	(___aomod@divisor+5)& (0+255),f,b
  4425  002CE2  1F81               	comf	(___aomod@divisor+4)& (0+255),f,b
  4426  002CE4  1F80               	comf	(___aomod@divisor+3)& (0+255),f,b
  4427  002CE6  1F7F               	comf	(___aomod@divisor+2)& (0+255),f,b
  4428  002CE8  1F7E               	comf	(___aomod@divisor+1)& (0+255),f,b
  4429  002CEA  6D7D               	negf	___aomod@divisor& (0+255),b
  4430  002CEC  0E00               	movlw	0
  4431  002CEE  237E               	addwfc	(___aomod@divisor+1)& (0+255),f,b
  4432  002CF0  237F               	addwfc	(___aomod@divisor+2)& (0+255),f,b
  4433  002CF2  2380               	addwfc	(___aomod@divisor+3)& (0+255),f,b
  4434  002CF4  2381               	addwfc	(___aomod@divisor+4)& (0+255),f,b
  4435  002CF6  2382               	addwfc	(___aomod@divisor+5)& (0+255),f,b
  4436  002CF8  2383               	addwfc	(___aomod@divisor+6)& (0+255),f,b
  4437  002CFA  2384               	addwfc	(___aomod@divisor+7)& (0+255),f,b
  4438  002CFC                     l3926:
  4439                           
  4440                           ; BSR set to: 0
  4441  002CFC  517D               	movf	___aomod@divisor& (0+255),w,b
  4442  002CFE  117E               	iorwf	(___aomod@divisor+1)& (0+255),w,b
  4443  002D00  117F               	iorwf	(___aomod@divisor+2)& (0+255),w,b
  4444  002D02  1180               	iorwf	(___aomod@divisor+3)& (0+255),w,b
  4445  002D04  1181               	iorwf	(___aomod@divisor+4)& (0+255),w,b
  4446  002D06  1182               	iorwf	(___aomod@divisor+5)& (0+255),w,b
  4447  002D08  1183               	iorwf	(___aomod@divisor+6)& (0+255),w,b
  4448  002D0A  1184               	iorwf	(___aomod@divisor+7)& (0+255),w,b
  4449  002D0C  B4D8               	btfsc	status,2,c
  4450  002D0E  EF8B  F016         	goto	u4121
  4451  002D12  EF8D  F016         	goto	u4120
  4452  002D16                     u4121:
  4453  002D16  EFD5  F016         	goto	l3942
  4454  002D1A                     u4120:
  4455  002D1A                     
  4456                           ; BSR set to: 0
  4457  002D1A  0E01               	movlw	1
  4458  002D1C  6F85               	movwf	___aomod@counter& (0+255),b
  4459  002D1E  EF9B  F016         	goto	l3932
  4460  002D22                     l3930:
  4461                           
  4462                           ; BSR set to: 0
  4463  002D22  90D8               	bcf	status,0,c
  4464  002D24  377D               	rlcf	___aomod@divisor& (0+255),f,b
  4465  002D26  377E               	rlcf	(___aomod@divisor+1)& (0+255),f,b
  4466  002D28  377F               	rlcf	(___aomod@divisor+2)& (0+255),f,b
  4467  002D2A  3780               	rlcf	(___aomod@divisor+3)& (0+255),f,b
  4468  002D2C  3781               	rlcf	(___aomod@divisor+4)& (0+255),f,b
  4469  002D2E  3782               	rlcf	(___aomod@divisor+5)& (0+255),f,b
  4470  002D30  3783               	rlcf	(___aomod@divisor+6)& (0+255),f,b
  4471  002D32  3784               	rlcf	(___aomod@divisor+7)& (0+255),f,b
  4472  002D34  2B85               	incf	___aomod@counter& (0+255),f,b
  4473  002D36                     l3932:
  4474                           
  4475                           ; BSR set to: 0
  4476  002D36  AF84               	btfss	(___aomod@divisor+7)& (0+255),7,b
  4477  002D38  EFA0  F016         	goto	u4131
  4478  002D3C  EFA2  F016         	goto	u4130
  4479  002D40                     u4131:
  4480  002D40  EF91  F016         	goto	l3930
  4481  002D44                     u4130:
  4482  002D44                     l3934:
  4483                           
  4484                           ; BSR set to: 0
  4485  002D44  517D               	movf	___aomod@divisor& (0+255),w,b
  4486  002D46  5D75               	subwf	___aomod@dividend& (0+255),w,b
  4487  002D48  517E               	movf	(___aomod@divisor+1)& (0+255),w,b
  4488  002D4A  5976               	subwfb	(___aomod@dividend+1)& (0+255),w,b
  4489  002D4C  517F               	movf	(___aomod@divisor+2)& (0+255),w,b
  4490  002D4E  5977               	subwfb	(___aomod@dividend+2)& (0+255),w,b
  4491  002D50  5180               	movf	(___aomod@divisor+3)& (0+255),w,b
  4492  002D52  5978               	subwfb	(___aomod@dividend+3)& (0+255),w,b
  4493  002D54  5181               	movf	(___aomod@divisor+4)& (0+255),w,b
  4494  002D56  5979               	subwfb	(___aomod@dividend+4)& (0+255),w,b
  4495  002D58  5182               	movf	(___aomod@divisor+5)& (0+255),w,b
  4496  002D5A  597A               	subwfb	(___aomod@dividend+5)& (0+255),w,b
  4497  002D5C  5183               	movf	(___aomod@divisor+6)& (0+255),w,b
  4498  002D5E  597B               	subwfb	(___aomod@dividend+6)& (0+255),w,b
  4499  002D60  5184               	movf	(___aomod@divisor+7)& (0+255),w,b
  4500  002D62  597C               	subwfb	(___aomod@dividend+7)& (0+255),w,b
  4501  002D64  A0D8               	btfss	status,0,c
  4502  002D66  EFB7  F016         	goto	u4141
  4503  002D6A  EFB9  F016         	goto	u4140
  4504  002D6E                     u4141:
  4505  002D6E  EFC9  F016         	goto	l3938
  4506  002D72                     u4140:
  4507  002D72                     
  4508                           ; BSR set to: 0
  4509  002D72  517D               	movf	___aomod@divisor& (0+255),w,b
  4510  002D74  5F75               	subwf	___aomod@dividend& (0+255),f,b
  4511  002D76  517E               	movf	(___aomod@divisor+1)& (0+255),w,b
  4512  002D78  5B76               	subwfb	(___aomod@dividend+1)& (0+255),f,b
  4513  002D7A  517F               	movf	(___aomod@divisor+2)& (0+255),w,b
  4514  002D7C  5B77               	subwfb	(___aomod@dividend+2)& (0+255),f,b
  4515  002D7E  5180               	movf	(___aomod@divisor+3)& (0+255),w,b
  4516  002D80  5B78               	subwfb	(___aomod@dividend+3)& (0+255),f,b
  4517  002D82  5181               	movf	(___aomod@divisor+4)& (0+255),w,b
  4518  002D84  5B79               	subwfb	(___aomod@dividend+4)& (0+255),f,b
  4519  002D86  5182               	movf	(___aomod@divisor+5)& (0+255),w,b
  4520  002D88  5B7A               	subwfb	(___aomod@dividend+5)& (0+255),f,b
  4521  002D8A  5183               	movf	(___aomod@divisor+6)& (0+255),w,b
  4522  002D8C  5B7B               	subwfb	(___aomod@dividend+6)& (0+255),f,b
  4523  002D8E  5184               	movf	(___aomod@divisor+7)& (0+255),w,b
  4524  002D90  5B7C               	subwfb	(___aomod@dividend+7)& (0+255),f,b
  4525  002D92                     l3938:
  4526                           
  4527                           ; BSR set to: 0
  4528  002D92  90D8               	bcf	status,0,c
  4529  002D94  3384               	rrcf	(___aomod@divisor+7)& (0+255),f,b
  4530  002D96  3383               	rrcf	(___aomod@divisor+6)& (0+255),f,b
  4531  002D98  3382               	rrcf	(___aomod@divisor+5)& (0+255),f,b
  4532  002D9A  3381               	rrcf	(___aomod@divisor+4)& (0+255),f,b
  4533  002D9C  3380               	rrcf	(___aomod@divisor+3)& (0+255),f,b
  4534  002D9E  337F               	rrcf	(___aomod@divisor+2)& (0+255),f,b
  4535  002DA0  337E               	rrcf	(___aomod@divisor+1)& (0+255),f,b
  4536  002DA2  337D               	rrcf	___aomod@divisor& (0+255),f,b
  4537  002DA4                     
  4538                           ; BSR set to: 0
  4539  002DA4  2F85               	decfsz	___aomod@counter& (0+255),f,b
  4540  002DA6  EFA2  F016         	goto	l3934
  4541  002DAA                     l3942:
  4542                           
  4543                           ; BSR set to: 0
  4544  002DAA  5186               	movf	___aomod@sign& (0+255),w,b
  4545  002DAC  B4D8               	btfsc	status,2,c
  4546  002DAE  EFDB  F016         	goto	u4151
  4547  002DB2  EFDD  F016         	goto	u4150
  4548  002DB6                     u4151:
  4549  002DB6  EFED  F016         	goto	l3946
  4550  002DBA                     u4150:
  4551  002DBA                     
  4552                           ; BSR set to: 0
  4553  002DBA  1F7C               	comf	(___aomod@dividend+7)& (0+255),f,b
  4554  002DBC  1F7B               	comf	(___aomod@dividend+6)& (0+255),f,b
  4555  002DBE  1F7A               	comf	(___aomod@dividend+5)& (0+255),f,b
  4556  002DC0  1F79               	comf	(___aomod@dividend+4)& (0+255),f,b
  4557  002DC2  1F78               	comf	(___aomod@dividend+3)& (0+255),f,b
  4558  002DC4  1F77               	comf	(___aomod@dividend+2)& (0+255),f,b
  4559  002DC6  1F76               	comf	(___aomod@dividend+1)& (0+255),f,b
  4560  002DC8  6D75               	negf	___aomod@dividend& (0+255),b
  4561  002DCA  0E00               	movlw	0
  4562  002DCC  2376               	addwfc	(___aomod@dividend+1)& (0+255),f,b
  4563  002DCE  2377               	addwfc	(___aomod@dividend+2)& (0+255),f,b
  4564  002DD0  2378               	addwfc	(___aomod@dividend+3)& (0+255),f,b
  4565  002DD2  2379               	addwfc	(___aomod@dividend+4)& (0+255),f,b
  4566  002DD4  237A               	addwfc	(___aomod@dividend+5)& (0+255),f,b
  4567  002DD6  237B               	addwfc	(___aomod@dividend+6)& (0+255),f,b
  4568  002DD8  237C               	addwfc	(___aomod@dividend+7)& (0+255),f,b
  4569  002DDA                     l3946:
  4570                           
  4571                           ; BSR set to: 0
  4572  002DDA  C075  F075         	movff	___aomod@dividend,?___aomod
  4573  002DDE  C076  F076         	movff	___aomod@dividend+1,?___aomod+1
  4574  002DE2  C077  F077         	movff	___aomod@dividend+2,?___aomod+2
  4575  002DE6  C078  F078         	movff	___aomod@dividend+3,?___aomod+3
  4576  002DEA  C079  F079         	movff	___aomod@dividend+4,?___aomod+4
  4577  002DEE  C07A  F07A         	movff	___aomod@dividend+5,?___aomod+5
  4578  002DF2  C07B  F07B         	movff	___aomod@dividend+6,?___aomod+6
  4579  002DF6  C07C  F07C         	movff	___aomod@dividend+7,?___aomod+7
  4580  002DFA                     
  4581                           ; BSR set to: 0
  4582  002DFA  0012               	return		;funcret
  4583  002DFC                     __end_of___aomod:
  4584                           	callstack 0
  4585                           
  4586 ;; *************** function ___aodiv *****************
  4587 ;; Defined at:
  4588 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  4589 ;; Parameters:    Size  Location     Type
  4590 ;;  dividend        8   21[BANK0 ] long long 
  4591 ;;  divisor         8   29[BANK0 ] long long 
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;  quotient        8   39[BANK0 ] long long 
  4594 ;;  sign            1   38[BANK0 ] unsigned char 
  4595 ;;  counter         1   37[BANK0 ] unsigned char 
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  8   21[BANK0 ] long long 
  4598 ;; Registers used:
  4599 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4605 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4606 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4608 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4609 ;;Total ram usage:       26 bytes
  4610 ;; Hardware stack levels used:    1
  4611 ;; Hardware stack levels required when called:   10
  4612 ;; This function calls:
  4613 ;;		Nothing
  4614 ;; This function is called by:
  4615 ;;		_dtoa
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619                           	psect	text14
  4620  0027FE                     __ptext14:
  4621                           	callstack 0
  4622  0027FE                     ___aodiv:
  4623                           	callstack 15
  4624  0027FE  0E00               	movlw	0
  4625  002800  0100               	movlb	0	; () banked
  4626  002802  6F86               	movwf	___aodiv@sign& (0+255),b
  4627  002804                     
  4628                           ; BSR set to: 0
  4629  002804  BF84               	btfsc	(___aodiv@divisor+7)& (0+255),7,b
  4630  002806  EF09  F014         	goto	u4030
  4631  00280A  EF07  F014         	goto	u4031
  4632  00280E                     u4031:
  4633  00280E  EF1B  F014         	goto	l3878
  4634  002812                     u4030:
  4635  002812                     
  4636                           ; BSR set to: 0
  4637  002812  1F84               	comf	(___aodiv@divisor+7)& (0+255),f,b
  4638  002814  1F83               	comf	(___aodiv@divisor+6)& (0+255),f,b
  4639  002816  1F82               	comf	(___aodiv@divisor+5)& (0+255),f,b
  4640  002818  1F81               	comf	(___aodiv@divisor+4)& (0+255),f,b
  4641  00281A  1F80               	comf	(___aodiv@divisor+3)& (0+255),f,b
  4642  00281C  1F7F               	comf	(___aodiv@divisor+2)& (0+255),f,b
  4643  00281E  1F7E               	comf	(___aodiv@divisor+1)& (0+255),f,b
  4644  002820  6D7D               	negf	___aodiv@divisor& (0+255),b
  4645  002822  0E00               	movlw	0
  4646  002824  237E               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
  4647  002826  237F               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
  4648  002828  2380               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
  4649  00282A  2381               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
  4650  00282C  2382               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
  4651  00282E  2383               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
  4652  002830  2384               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
  4653  002832                     
  4654                           ; BSR set to: 0
  4655  002832  0E01               	movlw	1
  4656  002834  6F86               	movwf	___aodiv@sign& (0+255),b
  4657  002836                     l3878:
  4658                           
  4659                           ; BSR set to: 0
  4660  002836  BF7C               	btfsc	(___aodiv@dividend+7)& (0+255),7,b
  4661  002838  EF22  F014         	goto	u4040
  4662  00283C  EF20  F014         	goto	u4041
  4663  002840                     u4041:
  4664  002840  EF34  F014         	goto	l3884
  4665  002844                     u4040:
  4666  002844                     
  4667                           ; BSR set to: 0
  4668  002844  1F7C               	comf	(___aodiv@dividend+7)& (0+255),f,b
  4669  002846  1F7B               	comf	(___aodiv@dividend+6)& (0+255),f,b
  4670  002848  1F7A               	comf	(___aodiv@dividend+5)& (0+255),f,b
  4671  00284A  1F79               	comf	(___aodiv@dividend+4)& (0+255),f,b
  4672  00284C  1F78               	comf	(___aodiv@dividend+3)& (0+255),f,b
  4673  00284E  1F77               	comf	(___aodiv@dividend+2)& (0+255),f,b
  4674  002850  1F76               	comf	(___aodiv@dividend+1)& (0+255),f,b
  4675  002852  6D75               	negf	___aodiv@dividend& (0+255),b
  4676  002854  0E00               	movlw	0
  4677  002856  2376               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
  4678  002858  2377               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
  4679  00285A  2378               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
  4680  00285C  2379               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
  4681  00285E  237A               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
  4682  002860  237B               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
  4683  002862  237C               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
  4684  002864                     
  4685                           ; BSR set to: 0
  4686  002864  0E01               	movlw	1
  4687  002866  1B86               	xorwf	___aodiv@sign& (0+255),f,b
  4688  002868                     l3884:
  4689                           
  4690                           ; BSR set to: 0
  4691  002868  EE20  F087         	lfsr	2,___aodiv@quotient
  4692  00286C  0E07               	movlw	7
  4693  00286E                     u4051:
  4694  00286E  6ADE               	clrf	postinc2,c
  4695  002870  06E8               	decf	wreg,f,c
  4696  002872  E2FD               	bc	u4051
  4697  002874                     
  4698                           ; BSR set to: 0
  4699  002874  517D               	movf	___aodiv@divisor& (0+255),w,b
  4700  002876  117E               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
  4701  002878  117F               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
  4702  00287A  1180               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
  4703  00287C  1181               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
  4704  00287E  1182               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
  4705  002880  1183               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
  4706  002882  1184               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
  4707  002884  B4D8               	btfsc	status,2,c
  4708  002886  EF47  F014         	goto	u4061
  4709  00288A  EF49  F014         	goto	u4060
  4710  00288E                     u4061:
  4711  00288E  EF9B  F014         	goto	l3906
  4712  002892                     u4060:
  4713  002892                     
  4714                           ; BSR set to: 0
  4715  002892  0E01               	movlw	1
  4716  002894  6F85               	movwf	___aodiv@counter& (0+255),b
  4717  002896  EF57  F014         	goto	l3892
  4718  00289A                     l3890:
  4719                           
  4720                           ; BSR set to: 0
  4721  00289A  90D8               	bcf	status,0,c
  4722  00289C  377D               	rlcf	___aodiv@divisor& (0+255),f,b
  4723  00289E  377E               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
  4724  0028A0  377F               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
  4725  0028A2  3780               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
  4726  0028A4  3781               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
  4727  0028A6  3782               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
  4728  0028A8  3783               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
  4729  0028AA  3784               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
  4730  0028AC  2B85               	incf	___aodiv@counter& (0+255),f,b
  4731  0028AE                     l3892:
  4732                           
  4733                           ; BSR set to: 0
  4734  0028AE  AF84               	btfss	(___aodiv@divisor+7)& (0+255),7,b
  4735  0028B0  EF5C  F014         	goto	u4071
  4736  0028B4  EF5E  F014         	goto	u4070
  4737  0028B8                     u4071:
  4738  0028B8  EF4D  F014         	goto	l3890
  4739  0028BC                     u4070:
  4740  0028BC                     l3894:
  4741                           
  4742                           ; BSR set to: 0
  4743  0028BC  90D8               	bcf	status,0,c
  4744  0028BE  3787               	rlcf	___aodiv@quotient& (0+255),f,b
  4745  0028C0  3788               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
  4746  0028C2  3789               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
  4747  0028C4  378A               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
  4748  0028C6  378B               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
  4749  0028C8  378C               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
  4750  0028CA  378D               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
  4751  0028CC  378E               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
  4752  0028CE                     
  4753                           ; BSR set to: 0
  4754  0028CE  517D               	movf	___aodiv@divisor& (0+255),w,b
  4755  0028D0  5D75               	subwf	___aodiv@dividend& (0+255),w,b
  4756  0028D2  517E               	movf	(___aodiv@divisor+1)& (0+255),w,b
  4757  0028D4  5976               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
  4758  0028D6  517F               	movf	(___aodiv@divisor+2)& (0+255),w,b
  4759  0028D8  5977               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
  4760  0028DA  5180               	movf	(___aodiv@divisor+3)& (0+255),w,b
  4761  0028DC  5978               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
  4762  0028DE  5181               	movf	(___aodiv@divisor+4)& (0+255),w,b
  4763  0028E0  5979               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
  4764  0028E2  5182               	movf	(___aodiv@divisor+5)& (0+255),w,b
  4765  0028E4  597A               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
  4766  0028E6  5183               	movf	(___aodiv@divisor+6)& (0+255),w,b
  4767  0028E8  597B               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
  4768  0028EA  5184               	movf	(___aodiv@divisor+7)& (0+255),w,b
  4769  0028EC  597C               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
  4770  0028EE  A0D8               	btfss	status,0,c
  4771  0028F0  EF7C  F014         	goto	u4081
  4772  0028F4  EF7E  F014         	goto	u4080
  4773  0028F8                     u4081:
  4774  0028F8  EF8F  F014         	goto	l3902
  4775  0028FC                     u4080:
  4776  0028FC                     
  4777                           ; BSR set to: 0
  4778  0028FC  517D               	movf	___aodiv@divisor& (0+255),w,b
  4779  0028FE  5F75               	subwf	___aodiv@dividend& (0+255),f,b
  4780  002900  517E               	movf	(___aodiv@divisor+1)& (0+255),w,b
  4781  002902  5B76               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
  4782  002904  517F               	movf	(___aodiv@divisor+2)& (0+255),w,b
  4783  002906  5B77               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
  4784  002908  5180               	movf	(___aodiv@divisor+3)& (0+255),w,b
  4785  00290A  5B78               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
  4786  00290C  5181               	movf	(___aodiv@divisor+4)& (0+255),w,b
  4787  00290E  5B79               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
  4788  002910  5182               	movf	(___aodiv@divisor+5)& (0+255),w,b
  4789  002912  5B7A               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
  4790  002914  5183               	movf	(___aodiv@divisor+6)& (0+255),w,b
  4791  002916  5B7B               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
  4792  002918  5184               	movf	(___aodiv@divisor+7)& (0+255),w,b
  4793  00291A  5B7C               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
  4794  00291C                     
  4795                           ; BSR set to: 0
  4796  00291C  8187               	bsf	___aodiv@quotient& (0+255),0,b
  4797  00291E                     l3902:
  4798                           
  4799                           ; BSR set to: 0
  4800  00291E  90D8               	bcf	status,0,c
  4801  002920  3384               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
  4802  002922  3383               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
  4803  002924  3382               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
  4804  002926  3381               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
  4805  002928  3380               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
  4806  00292A  337F               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
  4807  00292C  337E               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
  4808  00292E  337D               	rrcf	___aodiv@divisor& (0+255),f,b
  4809  002930                     
  4810                           ; BSR set to: 0
  4811  002930  2F85               	decfsz	___aodiv@counter& (0+255),f,b
  4812  002932  EF5E  F014         	goto	l3894
  4813  002936                     l3906:
  4814                           
  4815                           ; BSR set to: 0
  4816  002936  5186               	movf	___aodiv@sign& (0+255),w,b
  4817  002938  B4D8               	btfsc	status,2,c
  4818  00293A  EFA1  F014         	goto	u4091
  4819  00293E  EFA3  F014         	goto	u4090
  4820  002942                     u4091:
  4821  002942  EFB3  F014         	goto	l3910
  4822  002946                     u4090:
  4823  002946                     
  4824                           ; BSR set to: 0
  4825  002946  1F8E               	comf	(___aodiv@quotient+7)& (0+255),f,b
  4826  002948  1F8D               	comf	(___aodiv@quotient+6)& (0+255),f,b
  4827  00294A  1F8C               	comf	(___aodiv@quotient+5)& (0+255),f,b
  4828  00294C  1F8B               	comf	(___aodiv@quotient+4)& (0+255),f,b
  4829  00294E  1F8A               	comf	(___aodiv@quotient+3)& (0+255),f,b
  4830  002950  1F89               	comf	(___aodiv@quotient+2)& (0+255),f,b
  4831  002952  1F88               	comf	(___aodiv@quotient+1)& (0+255),f,b
  4832  002954  6D87               	negf	___aodiv@quotient& (0+255),b
  4833  002956  0E00               	movlw	0
  4834  002958  2388               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
  4835  00295A  2389               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
  4836  00295C  238A               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
  4837  00295E  238B               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
  4838  002960  238C               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
  4839  002962  238D               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
  4840  002964  238E               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
  4841  002966                     l3910:
  4842                           
  4843                           ; BSR set to: 0
  4844  002966  C087  F075         	movff	___aodiv@quotient,?___aodiv
  4845  00296A  C088  F076         	movff	___aodiv@quotient+1,?___aodiv+1
  4846  00296E  C089  F077         	movff	___aodiv@quotient+2,?___aodiv+2
  4847  002972  C08A  F078         	movff	___aodiv@quotient+3,?___aodiv+3
  4848  002976  C08B  F079         	movff	___aodiv@quotient+4,?___aodiv+4
  4849  00297A  C08C  F07A         	movff	___aodiv@quotient+5,?___aodiv+5
  4850  00297E  C08D  F07B         	movff	___aodiv@quotient+6,?___aodiv+6
  4851  002982  C08E  F07C         	movff	___aodiv@quotient+7,?___aodiv+7
  4852  002986                     
  4853                           ; BSR set to: 0
  4854  002986  0012               	return		;funcret
  4855  002988                     __end_of___aodiv:
  4856                           	callstack 0
  4857                           
  4858 ;; *************** function _atoi *****************
  4859 ;; Defined at:
  4860 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  4861 ;; Parameters:    Size  Location     Type
  4862 ;;  s               2   28[BANK0 ] PTR const unsigned char 
  4863 ;;		 -> STR_4(6), STR_3(19), STR_2(19), STR_1(5), 
  4864 ;; Auto vars:     Size  Location     Type
  4865 ;;  n               2   41[BANK0 ] int 
  4866 ;;  neg             2   34[BANK0 ] int 
  4867 ;; Return value:  Size  Location     Type
  4868 ;;                  2   28[BANK0 ] int 
  4869 ;; Registers used:
  4870 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4871 ;; Tracked objects:
  4872 ;;		On entry : 0/0
  4873 ;;		On exit  : 0/0
  4874 ;;		Unchanged: 0/0
  4875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4876 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4877 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4878 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4879 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4880 ;;Total ram usage:       15 bytes
  4881 ;; Hardware stack levels used:    1
  4882 ;; Hardware stack levels required when called:   11
  4883 ;; This function calls:
  4884 ;;		___wmul
  4885 ;;		_isdigit
  4886 ;;		_isspace
  4887 ;; This function is called by:
  4888 ;;		_vfpfcnvrt
  4889 ;; This function uses a non-reentrant model
  4890 ;;
  4891                           
  4892                           	psect	text15
  4893  002326                     __ptext15:
  4894                           	callstack 0
  4895  002326                     _atoi:
  4896                           	callstack 15
  4897  002326  0E00               	movlw	0
  4898  002328  0100               	movlb	0	; () banked
  4899  00232A  6F8A               	movwf	(atoi@n+1)& (0+255),b
  4900  00232C  0E00               	movlw	0
  4901  00232E  6F89               	movwf	atoi@n& (0+255),b
  4902  002330  0E00               	movlw	0
  4903  002332  6F83               	movwf	(atoi@neg+1)& (0+255),b
  4904  002334  0E00               	movlw	0
  4905  002336  6F82               	movwf	atoi@neg& (0+255),b
  4906  002338  EFA0  F011         	goto	l4118
  4907  00233C                     l4116:
  4908                           
  4909                           ; BSR set to: 0
  4910  00233C  4B7C               	infsnz	atoi@s& (0+255),f,b
  4911  00233E  2B7D               	incf	(atoi@s+1)& (0+255),f,b
  4912  002340                     l4118:
  4913                           
  4914                           ; BSR set to: 0
  4915  002340  0E01               	movlw	1
  4916  002342  6F88               	movwf	_atoi$1909& (0+255),b
  4917  002344                     
  4918                           ; BSR set to: 0
  4919  002344  C07C  FFF6         	movff	atoi@s,tblptrl
  4920  002348  C07D  FFF7         	movff	atoi@s+1,tblptrh
  4921  00234C                     	if	0	;tblptru may be non-zero
  4922  00234C                     	endif
  4923  00234C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4924  00234C  0E00               	movlw	low (__mediumconst shr (0+16))
  4925  00234E  6EF8               	movwf	tblptru,c
  4926  002350                     	endif
  4927  002350  0008               	tblrd		*
  4928  002352  50F5               	movf	tablat,w,c
  4929  002354  0A20               	xorlw	32
  4930  002356  B4D8               	btfsc	status,2,c
  4931  002358  EFB0  F011         	goto	u4511
  4932  00235C  EFB2  F011         	goto	u4510
  4933  002360                     u4511:
  4934  002360  EFD1  F011         	goto	l4126
  4935  002364                     u4510:
  4936  002364                     
  4937                           ; BSR set to: 0
  4938  002364  0EF7               	movlw	247
  4939  002366  6F7E               	movwf	??_atoi& (0+255),b
  4940  002368  0EFF               	movlw	255
  4941  00236A  6F7F               	movwf	(??_atoi+1)& (0+255),b
  4942  00236C  C07C  FFF6         	movff	atoi@s,tblptrl
  4943  002370  C07D  FFF7         	movff	atoi@s+1,tblptrh
  4944  002374                     	if	0	;tblptru may be non-zero
  4945  002374                     	endif
  4946  002374                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4947  002374  0E00               	movlw	low (__mediumconst shr (0+16))
  4948  002376  6EF8               	movwf	tblptru,c
  4949  002378                     	endif
  4950  002378  0008               	tblrd		*
  4951  00237A  50F5               	movf	tablat,w,c
  4952  00237C  6F80               	movwf	(??_atoi+2)& (0+255),b
  4953  00237E  6B81               	clrf	(??_atoi+3)& (0+255),b
  4954  002380  517E               	movf	??_atoi& (0+255),w,b
  4955  002382  2780               	addwf	(??_atoi+2)& (0+255),f,b
  4956  002384  517F               	movf	(??_atoi+1)& (0+255),w,b
  4957  002386  2381               	addwfc	(??_atoi+3)& (0+255),f,b
  4958  002388  5181               	movf	(??_atoi+3)& (0+255),w,b
  4959  00238A  E109               	bnz	u4520
  4960  00238C  0E05               	movlw	5
  4961  00238E  5D80               	subwf	(??_atoi+2)& (0+255),w,b
  4962  002390  A0D8               	btfss	status,0,c
  4963  002392  EFCD  F011         	goto	u4521
  4964  002396  EFCF  F011         	goto	u4520
  4965  00239A                     u4521:
  4966  00239A  EFD1  F011         	goto	l4126
  4967  00239E                     u4520:
  4968  00239E                     
  4969                           ; BSR set to: 0
  4970  00239E  0E00               	movlw	0
  4971  0023A0  6F88               	movwf	_atoi$1909& (0+255),b
  4972  0023A2                     l4126:
  4973                           
  4974                           ; BSR set to: 0
  4975  0023A2  C088  F084         	movff	_atoi$1909,_atoi$1908
  4976  0023A6  6B85               	clrf	(_atoi$1908+1)& (0+255),b
  4977  0023A8                     
  4978                           ; BSR set to: 0
  4979  0023A8  5184               	movf	_atoi$1908& (0+255),w,b
  4980  0023AA  1185               	iorwf	(_atoi$1908+1)& (0+255),w,b
  4981  0023AC  A4D8               	btfss	status,2,c
  4982  0023AE  EFDB  F011         	goto	u4531
  4983  0023B2  EFDD  F011         	goto	u4530
  4984  0023B6                     u4531:
  4985  0023B6  EF9E  F011         	goto	l4116
  4986  0023BA                     u4530:
  4987  0023BA  EFE7  F011         	goto	l4136
  4988  0023BE                     l4132:
  4989                           
  4990                           ; BSR set to: 0
  4991  0023BE  0E00               	movlw	0
  4992  0023C0  6F83               	movwf	(atoi@neg+1)& (0+255),b
  4993  0023C2  0E01               	movlw	1
  4994  0023C4  6F82               	movwf	atoi@neg& (0+255),b
  4995  0023C6                     l4134:
  4996                           
  4997                           ; BSR set to: 0
  4998  0023C6  4B7C               	infsnz	atoi@s& (0+255),f,b
  4999  0023C8  2B7D               	incf	(atoi@s+1)& (0+255),f,b
  5000  0023CA  EF21  F012         	goto	l4142
  5001  0023CE                     l4136:
  5002                           
  5003                           ; BSR set to: 0
  5004  0023CE  C07C  FFF6         	movff	atoi@s,tblptrl
  5005  0023D2  C07D  FFF7         	movff	atoi@s+1,tblptrh
  5006  0023D6                     	if	0	;tblptru may be non-zero
  5007  0023D6                     	endif
  5008  0023D6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5009  0023D6  0E00               	movlw	low (__mediumconst shr (0+16))
  5010  0023D8  6EF8               	movwf	tblptru,c
  5011  0023DA                     	endif
  5012  0023DA  0008               	tblrd		*
  5013  0023DC  50F5               	movf	tablat,w,c
  5014  0023DE  6F7E               	movwf	??_atoi& (0+255),b
  5015  0023E0  6B7F               	clrf	(??_atoi+1)& (0+255),b
  5016                           
  5017                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5018                           ; Switch size 1, requested type "simple"
  5019                           ; Number of cases is 1, Range of values is 0 to 0
  5020                           ; switch strategies available:
  5021                           ; Name         Instructions Cycles
  5022                           ; simple_byte            4     3 (average)
  5023                           ;	Chosen strategy is simple_byte
  5024  0023E2  517F               	movf	(??_atoi+1)& (0+255),w,b
  5025  0023E4  0A00               	xorlw	0	; case 0
  5026  0023E6  B4D8               	btfsc	status,2,c
  5027  0023E8  EFF8  F011         	goto	l5134
  5028  0023EC  EF21  F012         	goto	l4142
  5029  0023F0                     l5134:
  5030                           
  5031                           ; BSR set to: 0
  5032                           ; Switch size 1, requested type "simple"
  5033                           ; Number of cases is 2, Range of values is 43 to 45
  5034                           ; switch strategies available:
  5035                           ; Name         Instructions Cycles
  5036                           ; simple_byte            7     4 (average)
  5037                           ;	Chosen strategy is simple_byte
  5038  0023F0  517E               	movf	??_atoi& (0+255),w,b
  5039  0023F2  0A2B               	xorlw	43	; case 43
  5040  0023F4  B4D8               	btfsc	status,2,c
  5041  0023F6  EFE3  F011         	goto	l4134
  5042  0023FA  0A06               	xorlw	6	; case 45
  5043  0023FC  B4D8               	btfsc	status,2,c
  5044  0023FE  EFDF  F011         	goto	l4132
  5045  002402  EF21  F012         	goto	l4142
  5046  002406                     l4138:
  5047                           
  5048                           ; BSR set to: 0
  5049  002406  C089  F075         	movff	atoi@n,___wmul@multiplier
  5050  00240A  C08A  F076         	movff	atoi@n+1,___wmul@multiplier+1
  5051  00240E  0E00               	movlw	0
  5052  002410  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5053  002412  0E0A               	movlw	10
  5054  002414  6F77               	movwf	___wmul@multiplicand& (0+255),b
  5055  002416  EC5A  F01D         	call	___wmul	;wreg free
  5056  00241A  C07C  FFF6         	movff	atoi@s,tblptrl
  5057  00241E  C07D  FFF7         	movff	atoi@s+1,tblptrh
  5058  002422                     	if	0	;tblptru may be non-zero
  5059  002422                     	endif
  5060  002422                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5061  002422  0E00               	movlw	low (__mediumconst shr (0+16))
  5062  002424  6EF8               	movwf	tblptru,c
  5063  002426                     	endif
  5064  002426  0008               	tblrd		*
  5065  002428  50F5               	movf	tablat,w,c
  5066  00242A  0100               	movlb	0	; () banked
  5067  00242C  5F75               	subwf	?___wmul& (0+255),f,b
  5068  00242E  0E00               	movlw	0
  5069  002430  5B76               	subwfb	(?___wmul+1)& (0+255),f,b
  5070  002432  0E30               	movlw	48
  5071  002434  2575               	addwf	?___wmul& (0+255),w,b
  5072  002436  6F89               	movwf	atoi@n& (0+255),b
  5073  002438  0E00               	movlw	0
  5074  00243A  2176               	addwfc	(?___wmul+1)& (0+255),w,b
  5075  00243C  6F8A               	movwf	(atoi@n+1)& (0+255),b
  5076  00243E  EFE3  F011         	goto	l4134
  5077  002442                     l4142:
  5078                           
  5079                           ; BSR set to: 0
  5080  002442  0ED0               	movlw	208
  5081  002444  6F7E               	movwf	??_atoi& (0+255),b
  5082  002446  0EFF               	movlw	255
  5083  002448  6F7F               	movwf	(??_atoi+1)& (0+255),b
  5084  00244A  C07C  FFF6         	movff	atoi@s,tblptrl
  5085  00244E  C07D  FFF7         	movff	atoi@s+1,tblptrh
  5086  002452                     	if	0	;tblptru may be non-zero
  5087  002452                     	endif
  5088  002452                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5089  002452  0E00               	movlw	low (__mediumconst shr (0+16))
  5090  002454  6EF8               	movwf	tblptru,c
  5091  002456                     	endif
  5092  002456  0008               	tblrd		*
  5093  002458  50F5               	movf	tablat,w,c
  5094  00245A  6F80               	movwf	(??_atoi+2)& (0+255),b
  5095  00245C  6B81               	clrf	(??_atoi+3)& (0+255),b
  5096  00245E  517E               	movf	??_atoi& (0+255),w,b
  5097  002460  2780               	addwf	(??_atoi+2)& (0+255),f,b
  5098  002462  517F               	movf	(??_atoi+1)& (0+255),w,b
  5099  002464  2381               	addwfc	(??_atoi+3)& (0+255),f,b
  5100  002466  5181               	movf	(??_atoi+3)& (0+255),w,b
  5101  002468  E10A               	bnz	u4540
  5102  00246A  0E0A               	movlw	10
  5103  00246C  5D80               	subwf	(??_atoi+2)& (0+255),w,b
  5104  00246E  A0D8               	btfss	status,0,c
  5105  002470  EF3C  F012         	goto	u4541
  5106  002474  EF3F  F012         	goto	u4540
  5107  002478                     u4541:
  5108  002478  0E01               	movlw	1
  5109  00247A  EF40  F012         	goto	u4550
  5110  00247E                     u4540:
  5111  00247E  0E00               	movlw	0
  5112  002480                     u4550:
  5113  002480  6F86               	movwf	_atoi$1910& (0+255),b
  5114  002482  6B87               	clrf	(_atoi$1910+1)& (0+255),b
  5115  002484                     
  5116                           ; BSR set to: 0
  5117  002484  5186               	movf	_atoi$1910& (0+255),w,b
  5118  002486  1187               	iorwf	(_atoi$1910+1)& (0+255),w,b
  5119  002488  A4D8               	btfss	status,2,c
  5120  00248A  EF49  F012         	goto	u4561
  5121  00248E  EF4B  F012         	goto	u4560
  5122  002492                     u4561:
  5123  002492  EF03  F012         	goto	l4138
  5124  002496                     u4560:
  5125  002496                     
  5126                           ; BSR set to: 0
  5127  002496  5182               	movf	atoi@neg& (0+255),w,b
  5128  002498  1183               	iorwf	(atoi@neg+1)& (0+255),w,b
  5129  00249A  A4D8               	btfss	status,2,c
  5130  00249C  EF52  F012         	goto	u4571
  5131  0024A0  EF54  F012         	goto	u4570
  5132  0024A4                     u4571:
  5133  0024A4  EF62  F012         	goto	l1081
  5134  0024A8                     u4570:
  5135  0024A8                     
  5136                           ; BSR set to: 0
  5137  0024A8  C089  F07E         	movff	atoi@n,??_atoi
  5138  0024AC  C08A  F07F         	movff	atoi@n+1,??_atoi+1
  5139  0024B0  1F7E               	comf	??_atoi& (0+255),f,b
  5140  0024B2  1F7F               	comf	(??_atoi+1)& (0+255),f,b
  5141  0024B4  4B7E               	infsnz	??_atoi& (0+255),f,b
  5142  0024B6  2B7F               	incf	(??_atoi+1)& (0+255),f,b
  5143  0024B8  C07E  F07C         	movff	??_atoi,?_atoi
  5144  0024BC  C07F  F07D         	movff	??_atoi+1,?_atoi+1
  5145  0024C0  EF66  F012         	goto	l1084
  5146  0024C4                     l1081:
  5147                           
  5148                           ; BSR set to: 0
  5149  0024C4  C089  F07C         	movff	atoi@n,?_atoi
  5150  0024C8  C08A  F07D         	movff	atoi@n+1,?_atoi+1
  5151  0024CC                     l1084:
  5152                           
  5153                           ; BSR set to: 0
  5154  0024CC  0012               	return		;funcret
  5155  0024CE                     __end_of_atoi:
  5156                           	callstack 0
  5157                           
  5158 ;; *************** function _isspace *****************
  5159 ;; Defined at:
  5160 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  5161 ;; Parameters:    Size  Location     Type
  5162 ;;  c               2   21[BANK0 ] int 
  5163 ;; Auto vars:     Size  Location     Type
  5164 ;;		None
  5165 ;; Return value:  Size  Location     Type
  5166 ;;                  2   21[BANK0 ] int 
  5167 ;; Registers used:
  5168 ;;		wreg, status,2, status,0
  5169 ;; Tracked objects:
  5170 ;;		On entry : 0/0
  5171 ;;		On exit  : 0/0
  5172 ;;		Unchanged: 0/0
  5173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5174 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5175 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5176 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5177 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5178 ;;Total ram usage:        7 bytes
  5179 ;; Hardware stack levels used:    1
  5180 ;; Hardware stack levels required when called:   10
  5181 ;; This function calls:
  5182 ;;		Nothing
  5183 ;; This function is called by:
  5184 ;;		_atoi
  5185 ;; This function uses a non-reentrant model
  5186 ;;
  5187                           
  5188                           	psect	text16
  5189  0036F6                     __ptext16:
  5190                           	callstack 0
  5191  0036F6                     _isspace:
  5192                           	callstack 15
  5193  0036F6  0E01               	movlw	1
  5194  0036F8  0100               	movlb	0	; () banked
  5195  0036FA  6F7B               	movwf	_isspace$1926& (0+255),b
  5196  0036FC                     
  5197                           ; BSR set to: 0
  5198  0036FC  0E20               	movlw	32
  5199  0036FE  1975               	xorwf	isspace@c& (0+255),w,b
  5200  003700  1176               	iorwf	(isspace@c+1)& (0+255),w,b
  5201  003702  B4D8               	btfsc	status,2,c
  5202  003704  EF86  F01B         	goto	u4231
  5203  003708  EF88  F01B         	goto	u4230
  5204  00370C                     u4231:
  5205  00370C  EFA1  F01B         	goto	l3988
  5206  003710                     u4230:
  5207  003710                     
  5208                           ; BSR set to: 0
  5209  003710  0EF7               	movlw	247
  5210  003712  6F77               	movwf	??_isspace& (0+255),b
  5211  003714  0EFF               	movlw	255
  5212  003716  6F78               	movwf	(??_isspace+1)& (0+255),b
  5213  003718  C075  F079         	movff	isspace@c,??_isspace+2
  5214  00371C  C076  F07A         	movff	isspace@c+1,??_isspace+3
  5215  003720  5177               	movf	??_isspace& (0+255),w,b
  5216  003722  2779               	addwf	(??_isspace+2)& (0+255),f,b
  5217  003724  5178               	movf	(??_isspace+1)& (0+255),w,b
  5218  003726  237A               	addwfc	(??_isspace+3)& (0+255),f,b
  5219  003728  517A               	movf	(??_isspace+3)& (0+255),w,b
  5220  00372A  E109               	bnz	u4240
  5221  00372C  0E05               	movlw	5
  5222  00372E  5D79               	subwf	(??_isspace+2)& (0+255),w,b
  5223  003730  A0D8               	btfss	status,0,c
  5224  003732  EF9D  F01B         	goto	u4241
  5225  003736  EF9F  F01B         	goto	u4240
  5226  00373A                     u4241:
  5227  00373A  EFA1  F01B         	goto	l3988
  5228  00373E                     u4240:
  5229  00373E                     
  5230                           ; BSR set to: 0
  5231  00373E  0E00               	movlw	0
  5232  003740  6F7B               	movwf	_isspace$1926& (0+255),b
  5233  003742                     l3988:
  5234                           
  5235                           ; BSR set to: 0
  5236  003742  C07B  F075         	movff	_isspace$1926,?_isspace
  5237  003746  6B76               	clrf	(?_isspace+1)& (0+255),b
  5238  003748                     
  5239                           ; BSR set to: 0
  5240  003748  0012               	return		;funcret
  5241  00374A                     __end_of_isspace:
  5242                           	callstack 0
  5243                           
  5244 ;; *************** function _isdigit *****************
  5245 ;; Defined at:
  5246 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;  c               2   21[BANK0 ] int 
  5249 ;; Auto vars:     Size  Location     Type
  5250 ;;		None
  5251 ;; Return value:  Size  Location     Type
  5252 ;;                  2   21[BANK0 ] int 
  5253 ;; Registers used:
  5254 ;;		wreg, status,2, status,0
  5255 ;; Tracked objects:
  5256 ;;		On entry : 0/0
  5257 ;;		On exit  : 0/0
  5258 ;;		Unchanged: 0/0
  5259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5260 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5262 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5263 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5264 ;;Total ram usage:        6 bytes
  5265 ;; Hardware stack levels used:    1
  5266 ;; Hardware stack levels required when called:   10
  5267 ;; This function calls:
  5268 ;;		Nothing
  5269 ;; This function is called by:
  5270 ;;		_vfpfcnvrt
  5271 ;;		_atoi
  5272 ;; This function uses a non-reentrant model
  5273 ;;
  5274                           
  5275                           	psect	text17
  5276  0039A6                     __ptext17:
  5277                           	callstack 0
  5278  0039A6                     _isdigit:
  5279                           	callstack 16
  5280  0039A6  0ED0               	movlw	208
  5281  0039A8  0100               	movlb	0	; () banked
  5282  0039AA  6F77               	movwf	??_isdigit& (0+255),b
  5283  0039AC  0EFF               	movlw	255
  5284  0039AE  6F78               	movwf	(??_isdigit+1)& (0+255),b
  5285  0039B0  C075  F079         	movff	isdigit@c,??_isdigit+2
  5286  0039B4  C076  F07A         	movff	isdigit@c+1,??_isdigit+3
  5287  0039B8  5177               	movf	??_isdigit& (0+255),w,b
  5288  0039BA  2779               	addwf	(??_isdigit+2)& (0+255),f,b
  5289  0039BC  5178               	movf	(??_isdigit+1)& (0+255),w,b
  5290  0039BE  237A               	addwfc	(??_isdigit+3)& (0+255),f,b
  5291  0039C0  517A               	movf	(??_isdigit+3)& (0+255),w,b
  5292  0039C2  E10A               	bnz	u4210
  5293  0039C4  0E0A               	movlw	10
  5294  0039C6  5D79               	subwf	(??_isdigit+2)& (0+255),w,b
  5295  0039C8  A0D8               	btfss	status,0,c
  5296  0039CA  EFE9  F01C         	goto	u4211
  5297  0039CE  EFEC  F01C         	goto	u4210
  5298  0039D2                     u4211:
  5299  0039D2  0E01               	movlw	1
  5300  0039D4  EFED  F01C         	goto	u4220
  5301  0039D8                     u4210:
  5302  0039D8  0E00               	movlw	0
  5303  0039DA                     u4220:
  5304  0039DA  6F75               	movwf	?_isdigit& (0+255),b
  5305  0039DC  6B76               	clrf	(?_isdigit+1)& (0+255),b
  5306  0039DE                     
  5307                           ; BSR set to: 0
  5308  0039DE  0012               	return		;funcret
  5309  0039E0                     __end_of_isdigit:
  5310                           	callstack 0
  5311                           
  5312 ;; *************** function ___wmul *****************
  5313 ;; Defined at:
  5314 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  5315 ;; Parameters:    Size  Location     Type
  5316 ;;  multiplier      2   21[BANK0 ] unsigned int 
  5317 ;;  multiplicand    2   23[BANK0 ] unsigned int 
  5318 ;; Auto vars:     Size  Location     Type
  5319 ;;  product         2   25[BANK0 ] unsigned int 
  5320 ;; Return value:  Size  Location     Type
  5321 ;;                  2   21[BANK0 ] unsigned int 
  5322 ;; Registers used:
  5323 ;;		wreg, status,2, status,0, prodl, prodh
  5324 ;; Tracked objects:
  5325 ;;		On entry : 0/0
  5326 ;;		On exit  : 0/0
  5327 ;;		Unchanged: 0/0
  5328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5329 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5330 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5332 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5333 ;;Total ram usage:        6 bytes
  5334 ;; Hardware stack levels used:    1
  5335 ;; Hardware stack levels required when called:   10
  5336 ;; This function calls:
  5337 ;;		Nothing
  5338 ;; This function is called by:
  5339 ;;		_time_now
  5340 ;;		_atoi
  5341 ;; This function uses a non-reentrant model
  5342 ;;
  5343                           
  5344                           	psect	text18
  5345  003AB4                     __ptext18:
  5346                           	callstack 0
  5347  003AB4                     ___wmul:
  5348                           	callstack 15
  5349  003AB4  0100               	movlb	0	; () banked
  5350  003AB6  5175               	movf	___wmul@multiplier& (0+255),w,b
  5351  003AB8  0377               	mulwf	___wmul@multiplicand& (0+255),b
  5352  003ABA  CFF3 F079          	movff	prodl,___wmul@product
  5353  003ABE  CFF4 F07A          	movff	prodh,___wmul@product+1
  5354  003AC2  5175               	movf	___wmul@multiplier& (0+255),w,b
  5355  003AC4  0378               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  5356  003AC6  50F3               	movf	243,w,c
  5357  003AC8  277A               	addwf	(___wmul@product+1)& (0+255),f,b
  5358  003ACA  5176               	movf	(___wmul@multiplier+1)& (0+255),w,b
  5359  003ACC  0377               	mulwf	___wmul@multiplicand& (0+255),b
  5360  003ACE  50F3               	movf	243,w,c
  5361  003AD0  277A               	addwf	(___wmul@product+1)& (0+255),f,b
  5362  003AD2                     
  5363                           ; BSR set to: 0
  5364  003AD2  C079  F075         	movff	___wmul@product,?___wmul
  5365  003AD6  C07A  F076         	movff	___wmul@product+1,?___wmul+1
  5366  003ADA                     
  5367                           ; BSR set to: 0
  5368  003ADA  0012               	return		;funcret
  5369  003ADC                     __end_of___wmul:
  5370                           	callstack 0
  5371                           
  5372 ;; *************** function ___lwmod *****************
  5373 ;; Defined at:
  5374 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwmod.c"
  5375 ;; Parameters:    Size  Location     Type
  5376 ;;  dividend        2   21[BANK0 ] unsigned int 
  5377 ;;  divisor         2   23[BANK0 ] unsigned int 
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;  counter         1   25[BANK0 ] unsigned char 
  5380 ;; Return value:  Size  Location     Type
  5381 ;;                  2   21[BANK0 ] unsigned int 
  5382 ;; Registers used:
  5383 ;;		wreg, status,2, status,0
  5384 ;; Tracked objects:
  5385 ;;		On entry : 0/0
  5386 ;;		On exit  : 0/0
  5387 ;;		Unchanged: 0/0
  5388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5389 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5390 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5392 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5393 ;;Total ram usage:        5 bytes
  5394 ;; Hardware stack levels used:    1
  5395 ;; Hardware stack levels required when called:   10
  5396 ;; This function calls:
  5397 ;;		Nothing
  5398 ;; This function is called by:
  5399 ;;		_time_now
  5400 ;; This function uses a non-reentrant model
  5401 ;;
  5402                           
  5403                           	psect	text19
  5404  0035D6                     __ptext19:
  5405                           	callstack 0
  5406  0035D6                     ___lwmod:
  5407                           	callstack 19
  5408  0035D6  0100               	movlb	0	; () banked
  5409  0035D8  5177               	movf	___lwmod@divisor& (0+255),w,b
  5410  0035DA  1178               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  5411  0035DC  B4D8               	btfsc	status,2,c
  5412  0035DE  EFF3  F01A         	goto	u5441
  5413  0035E2  EFF5  F01A         	goto	u5440
  5414  0035E6                     u5441:
  5415  0035E6  EF19  F01B         	goto	l747
  5416  0035EA                     u5440:
  5417  0035EA                     
  5418                           ; BSR set to: 0
  5419  0035EA  0E01               	movlw	1
  5420  0035EC  6F79               	movwf	___lwmod@counter& (0+255),b
  5421  0035EE  EFFD  F01A         	goto	l4728
  5422  0035F2                     l4726:
  5423                           
  5424                           ; BSR set to: 0
  5425  0035F2  90D8               	bcf	status,0,c
  5426  0035F4  3777               	rlcf	___lwmod@divisor& (0+255),f,b
  5427  0035F6  3778               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  5428  0035F8  2B79               	incf	___lwmod@counter& (0+255),f,b
  5429  0035FA                     l4728:
  5430                           
  5431                           ; BSR set to: 0
  5432  0035FA  AF78               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  5433  0035FC  EF02  F01B         	goto	u5451
  5434  003600  EF04  F01B         	goto	u5450
  5435  003604                     u5451:
  5436  003604  EFF9  F01A         	goto	l4726
  5437  003608                     u5450:
  5438  003608                     l4730:
  5439                           
  5440                           ; BSR set to: 0
  5441  003608  5177               	movf	___lwmod@divisor& (0+255),w,b
  5442  00360A  5D75               	subwf	___lwmod@dividend& (0+255),w,b
  5443  00360C  5178               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5444  00360E  5976               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  5445  003610  A0D8               	btfss	status,0,c
  5446  003612  EF0D  F01B         	goto	u5461
  5447  003616  EF0F  F01B         	goto	u5460
  5448  00361A                     u5461:
  5449  00361A  EF13  F01B         	goto	l4734
  5450  00361E                     u5460:
  5451  00361E                     
  5452                           ; BSR set to: 0
  5453  00361E  5177               	movf	___lwmod@divisor& (0+255),w,b
  5454  003620  5F75               	subwf	___lwmod@dividend& (0+255),f,b
  5455  003622  5178               	movf	(___lwmod@divisor+1)& (0+255),w,b
  5456  003624  5B76               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  5457  003626                     l4734:
  5458                           
  5459                           ; BSR set to: 0
  5460  003626  90D8               	bcf	status,0,c
  5461  003628  3378               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  5462  00362A  3377               	rrcf	___lwmod@divisor& (0+255),f,b
  5463  00362C                     
  5464                           ; BSR set to: 0
  5465  00362C  2F79               	decfsz	___lwmod@counter& (0+255),f,b
  5466  00362E  EF04  F01B         	goto	l4730
  5467  003632                     l747:
  5468                           
  5469                           ; BSR set to: 0
  5470  003632  C075  F075         	movff	___lwmod@dividend,?___lwmod
  5471  003636  C076  F076         	movff	___lwmod@dividend+1,?___lwmod+1
  5472  00363A                     
  5473                           ; BSR set to: 0
  5474  00363A  0012               	return		;funcret
  5475  00363C                     __end_of___lwmod:
  5476                           	callstack 0
  5477                           
  5478 ;; *************** function ___lwdiv *****************
  5479 ;; Defined at:
  5480 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwdiv.c"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;  dividend        2   21[BANK0 ] unsigned int 
  5483 ;;  divisor         2   23[BANK0 ] unsigned int 
  5484 ;; Auto vars:     Size  Location     Type
  5485 ;;  quotient        2   26[BANK0 ] unsigned int 
  5486 ;;  counter         1   25[BANK0 ] unsigned char 
  5487 ;; Return value:  Size  Location     Type
  5488 ;;                  2   21[BANK0 ] unsigned int 
  5489 ;; Registers used:
  5490 ;;		wreg, status,2, status,0
  5491 ;; Tracked objects:
  5492 ;;		On entry : 0/0
  5493 ;;		On exit  : 0/0
  5494 ;;		Unchanged: 0/0
  5495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5496 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5497 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5499 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5500 ;;Total ram usage:        7 bytes
  5501 ;; Hardware stack levels used:    1
  5502 ;; Hardware stack levels required when called:   10
  5503 ;; This function calls:
  5504 ;;		Nothing
  5505 ;; This function is called by:
  5506 ;;		_time_now
  5507 ;; This function uses a non-reentrant model
  5508 ;;
  5509                           
  5510                           	psect	text20
  5511  00348E                     __ptext20:
  5512                           	callstack 0
  5513  00348E                     ___lwdiv:
  5514                           	callstack 19
  5515  00348E  0E00               	movlw	0
  5516  003490  0100               	movlb	0	; () banked
  5517  003492  6F7B               	movwf	(___lwdiv@quotient+1)& (0+255),b
  5518  003494  0E00               	movlw	0
  5519  003496  6F7A               	movwf	___lwdiv@quotient& (0+255),b
  5520  003498                     
  5521                           ; BSR set to: 0
  5522  003498  5177               	movf	___lwdiv@divisor& (0+255),w,b
  5523  00349A  1178               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  5524  00349C  B4D8               	btfsc	status,2,c
  5525  00349E  EF53  F01A         	goto	u5411
  5526  0034A2  EF55  F01A         	goto	u5410
  5527  0034A6                     u5411:
  5528  0034A6  EF7D  F01A         	goto	l737
  5529  0034AA                     u5410:
  5530  0034AA                     
  5531                           ; BSR set to: 0
  5532  0034AA  0E01               	movlw	1
  5533  0034AC  6F79               	movwf	___lwdiv@counter& (0+255),b
  5534  0034AE  EF5D  F01A         	goto	l4708
  5535  0034B2                     l4706:
  5536                           
  5537                           ; BSR set to: 0
  5538  0034B2  90D8               	bcf	status,0,c
  5539  0034B4  3777               	rlcf	___lwdiv@divisor& (0+255),f,b
  5540  0034B6  3778               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  5541  0034B8  2B79               	incf	___lwdiv@counter& (0+255),f,b
  5542  0034BA                     l4708:
  5543                           
  5544                           ; BSR set to: 0
  5545  0034BA  AF78               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  5546  0034BC  EF62  F01A         	goto	u5421
  5547  0034C0  EF64  F01A         	goto	u5420
  5548  0034C4                     u5421:
  5549  0034C4  EF59  F01A         	goto	l4706
  5550  0034C8                     u5420:
  5551  0034C8                     l4710:
  5552                           
  5553                           ; BSR set to: 0
  5554  0034C8  90D8               	bcf	status,0,c
  5555  0034CA  377A               	rlcf	___lwdiv@quotient& (0+255),f,b
  5556  0034CC  377B               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  5557  0034CE                     
  5558                           ; BSR set to: 0
  5559  0034CE  5177               	movf	___lwdiv@divisor& (0+255),w,b
  5560  0034D0  5D75               	subwf	___lwdiv@dividend& (0+255),w,b
  5561  0034D2  5178               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5562  0034D4  5976               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  5563  0034D6  A0D8               	btfss	status,0,c
  5564  0034D8  EF70  F01A         	goto	u5431
  5565  0034DC  EF72  F01A         	goto	u5430
  5566  0034E0                     u5431:
  5567  0034E0  EF77  F01A         	goto	l4718
  5568  0034E4                     u5430:
  5569  0034E4                     
  5570                           ; BSR set to: 0
  5571  0034E4  5177               	movf	___lwdiv@divisor& (0+255),w,b
  5572  0034E6  5F75               	subwf	___lwdiv@dividend& (0+255),f,b
  5573  0034E8  5178               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  5574  0034EA  5B76               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  5575  0034EC                     
  5576                           ; BSR set to: 0
  5577  0034EC  817A               	bsf	___lwdiv@quotient& (0+255),0,b
  5578  0034EE                     l4718:
  5579                           
  5580                           ; BSR set to: 0
  5581  0034EE  90D8               	bcf	status,0,c
  5582  0034F0  3378               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  5583  0034F2  3377               	rrcf	___lwdiv@divisor& (0+255),f,b
  5584  0034F4                     
  5585                           ; BSR set to: 0
  5586  0034F4  2F79               	decfsz	___lwdiv@counter& (0+255),f,b
  5587  0034F6  EF64  F01A         	goto	l4710
  5588  0034FA                     l737:
  5589                           
  5590                           ; BSR set to: 0
  5591  0034FA  C07A  F075         	movff	___lwdiv@quotient,?___lwdiv
  5592  0034FE  C07B  F076         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5593  003502                     
  5594                           ; BSR set to: 0
  5595  003502  0012               	return		;funcret
  5596  003504                     __end_of___lwdiv:
  5597                           	callstack 0
  5598                           
  5599 ;; *************** function _Timer0_init *****************
  5600 ;; Defined at:
  5601 ;;		line 8 in file "timers.c"
  5602 ;; Parameters:    Size  Location     Type
  5603 ;;		None
  5604 ;; Auto vars:     Size  Location     Type
  5605 ;;		None
  5606 ;; Return value:  Size  Location     Type
  5607 ;;                  1    wreg      void 
  5608 ;; Registers used:
  5609 ;;		wreg, status,2
  5610 ;; Tracked objects:
  5611 ;;		On entry : 0/0
  5612 ;;		On exit  : 0/0
  5613 ;;		Unchanged: 0/0
  5614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5619 ;;Total ram usage:        0 bytes
  5620 ;; Hardware stack levels used:    1
  5621 ;; Hardware stack levels required when called:   10
  5622 ;; This function calls:
  5623 ;;		Nothing
  5624 ;; This function is called by:
  5625 ;;		_main
  5626 ;; This function uses a non-reentrant model
  5627 ;;
  5628                           
  5629                           	psect	text21
  5630  003B78                     __ptext21:
  5631                           	callstack 0
  5632  003B78                     _Timer0_init:
  5633                           	callstack 20
  5634  003B78                     
  5635                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
  5636  003B78  50D6               	movf	214,w,c	;volatile
  5637  003B7A  0B1F               	andlw	-225
  5638  003B7C  0940               	iorlw	64
  5639  003B7E  6ED6               	movwf	214,c	;volatile
  5640  003B80                     
  5641                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
  5642  003B80  88D6               	bsf	214,4,c	;volatile
  5643                           
  5644                           ;timers.c: 13:     T0CON1bits.T0CKPS = (0b1000);
  5645  003B82  50D6               	movf	214,w,c	;volatile
  5646  003B84  0BF0               	andlw	-16
  5647  003B86  0908               	iorlw	8
  5648  003B88  6ED6               	movwf	214,c	;volatile
  5649  003B8A                     
  5650                           ;timers.c: 14:     T0CON0bits.T016BIT=1;
  5651  003B8A  88D5               	bsf	213,4,c	;volatile
  5652                           
  5653                           ;timers.c: 17:     TMR0H = (0b00001011);
  5654  003B8C  0E0B               	movlw	11
  5655  003B8E  6ED4               	movwf	212,c	;volatile
  5656                           
  5657                           ;timers.c: 18:     TMR0L = (0b11011100);
  5658  003B90  0EDC               	movlw	220
  5659  003B92  6ED3               	movwf	211,c	;volatile
  5660  003B94                     
  5661                           ;timers.c: 20:     T0CON0bits.T0EN=1;
  5662  003B94  8ED5               	bsf	213,7,c	;volatile
  5663  003B96  0012               	return		;funcret
  5664  003B98                     __end_of_Timer0_init:
  5665                           	callstack 0
  5666                           
  5667 ;; *************** function _LEDarray_init *****************
  5668 ;; Defined at:
  5669 ;;		line 7 in file "LEDarray.c"
  5670 ;; Parameters:    Size  Location     Type
  5671 ;;		None
  5672 ;; Auto vars:     Size  Location     Type
  5673 ;;		None
  5674 ;; Return value:  Size  Location     Type
  5675 ;;                  1    wreg      void 
  5676 ;; Registers used:
  5677 ;;		None
  5678 ;; Tracked objects:
  5679 ;;		On entry : 0/0
  5680 ;;		On exit  : 0/0
  5681 ;;		Unchanged: 0/0
  5682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5687 ;;Total ram usage:        0 bytes
  5688 ;; Hardware stack levels used:    1
  5689 ;; Hardware stack levels required when called:   10
  5690 ;; This function calls:
  5691 ;;		Nothing
  5692 ;; This function is called by:
  5693 ;;		_main
  5694 ;; This function uses a non-reentrant model
  5695 ;;
  5696                           
  5697                           	psect	text22
  5698  003B2C                     __ptext22:
  5699                           	callstack 0
  5700  003B2C                     _LEDarray_init:
  5701                           	callstack 20
  5702  003B2C                     
  5703                           ;LEDarray.c: 11:     TRISGbits.TRISG0 = 0;
  5704  003B2C  9087               	bcf	135,0,c	;volatile
  5705                           
  5706                           ;LEDarray.c: 12:     TRISGbits.TRISG1 = 0;
  5707  003B2E  9287               	bcf	135,1,c	;volatile
  5708                           
  5709                           ;LEDarray.c: 13:     TRISAbits.TRISA2 = 0;
  5710  003B30  9481               	bcf	129,2,c	;volatile
  5711                           
  5712                           ;LEDarray.c: 14:     TRISFbits.TRISF6 = 0;
  5713  003B32  9C86               	bcf	134,6,c	;volatile
  5714                           
  5715                           ;LEDarray.c: 15:     TRISAbits.TRISA4 = 0;
  5716  003B34  9881               	bcf	129,4,c	;volatile
  5717                           
  5718                           ;LEDarray.c: 16:     TRISAbits.TRISA5 = 0;
  5719  003B36  9A81               	bcf	129,5,c	;volatile
  5720                           
  5721                           ;LEDarray.c: 17:     TRISFbits.TRISF0 = 0;
  5722  003B38  9086               	bcf	134,0,c	;volatile
  5723                           
  5724                           ;LEDarray.c: 18:     TRISBbits.TRISB0 = 0;
  5725  003B3A  9082               	bcf	130,0,c	;volatile
  5726                           
  5727                           ;LEDarray.c: 19:     TRISBbits.TRISB1 = 0;
  5728  003B3C  9282               	bcf	130,1,c	;volatile
  5729                           
  5730                           ;LEDarray.c: 23:     LATGbits.LATG0 = 0;
  5731  003B3E  907F               	bcf	127,0,c	;volatile
  5732                           
  5733                           ;LEDarray.c: 24:     LATGbits.LATG1 = 0;
  5734  003B40  927F               	bcf	127,1,c	;volatile
  5735                           
  5736                           ;LEDarray.c: 25:     LATAbits.LATA2 = 0;
  5737  003B42  9479               	bcf	121,2,c	;volatile
  5738                           
  5739                           ;LEDarray.c: 26:     LATFbits.LATF6 = 0;
  5740  003B44  9C7E               	bcf	126,6,c	;volatile
  5741                           
  5742                           ;LEDarray.c: 27:     LATAbits.LATA4 = 0;
  5743  003B46  9879               	bcf	121,4,c	;volatile
  5744                           
  5745                           ;LEDarray.c: 28:     LATAbits.LATA5 = 0;
  5746  003B48  9A79               	bcf	121,5,c	;volatile
  5747                           
  5748                           ;LEDarray.c: 29:     LATFbits.LATF0 = 0;
  5749  003B4A  907E               	bcf	126,0,c	;volatile
  5750                           
  5751                           ;LEDarray.c: 30:     LATBbits.LATB0 = 0;
  5752  003B4C  907A               	bcf	122,0,c	;volatile
  5753                           
  5754                           ;LEDarray.c: 31:     LATBbits.LATB1 = 0;
  5755  003B4E  927A               	bcf	122,1,c	;volatile
  5756  003B50  0012               	return		;funcret
  5757  003B52                     __end_of_LEDarray_init:
  5758                           	callstack 0
  5759                           
  5760 ;; *************** function _LEDarray_disp_bin *****************
  5761 ;; Defined at:
  5762 ;;		line 37 in file "LEDarray.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;  number          2   21[BANK0 ] unsigned int 
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;		None
  5767 ;; Return value:  Size  Location     Type
  5768 ;;                  1    wreg      void 
  5769 ;; Registers used:
  5770 ;;		None
  5771 ;; Tracked objects:
  5772 ;;		On entry : 0/0
  5773 ;;		On exit  : 0/0
  5774 ;;		Unchanged: 0/0
  5775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5776 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5779 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5780 ;;Total ram usage:        2 bytes
  5781 ;; Hardware stack levels used:    1
  5782 ;; Hardware stack levels required when called:   10
  5783 ;; This function calls:
  5784 ;;		Nothing
  5785 ;; This function is called by:
  5786 ;;		_main
  5787 ;; This function uses a non-reentrant model
  5788 ;;
  5789                           
  5790                           	psect	text23
  5791  0030F6                     __ptext23:
  5792                           	callstack 0
  5793  0030F6                     _LEDarray_disp_bin:
  5794                           	callstack 20
  5795  0030F6                     
  5796                           ;LEDarray.c: 37: void LEDarray_disp_bin(unsigned int number);LEDarray.c: 38: {;LEDarray.
      +                          c: 39:     if (number & 0b000000001){LATGbits.LATG0 = 1;}
  5797  0030F6  0100               	movlb	0	; () banked
  5798  0030F8  A175               	btfss	LEDarray_disp_bin@number& (0+255),0,b
  5799  0030FA  EF81  F018         	goto	u5511
  5800  0030FE  EF83  F018         	goto	u5510
  5801  003102                     u5511:
  5802  003102  EF86  F018         	goto	l77
  5803  003106                     u5510:
  5804  003106                     
  5805                           ; BSR set to: 0
  5806  003106  807F               	bsf	127,0,c	;volatile
  5807  003108  EF87  F018         	goto	l78
  5808  00310C                     l77:
  5809                           
  5810                           ; BSR set to: 0
  5811  00310C  907F               	bcf	127,0,c	;volatile
  5812  00310E                     l78:
  5813                           
  5814                           ; BSR set to: 0
  5815                           ;LEDarray.c: 42:     if (number & 0b000000010){LATGbits.LATG1 = 1;}
  5816  00310E  A375               	btfss	LEDarray_disp_bin@number& (0+255),1,b
  5817  003110  EF8C  F018         	goto	u5521
  5818  003114  EF8E  F018         	goto	u5520
  5819  003118                     u5521:
  5820  003118  EF91  F018         	goto	l79
  5821  00311C                     u5520:
  5822  00311C                     
  5823                           ; BSR set to: 0
  5824  00311C  827F               	bsf	127,1,c	;volatile
  5825  00311E  EF92  F018         	goto	l80
  5826  003122                     l79:
  5827                           
  5828                           ; BSR set to: 0
  5829  003122  927F               	bcf	127,1,c	;volatile
  5830  003124                     l80:
  5831                           
  5832                           ; BSR set to: 0
  5833                           ;LEDarray.c: 45:     if (number & 0b000000100){LATAbits.LATA2 = 1;}
  5834  003124  A575               	btfss	LEDarray_disp_bin@number& (0+255),2,b
  5835  003126  EF97  F018         	goto	u5531
  5836  00312A  EF99  F018         	goto	u5530
  5837  00312E                     u5531:
  5838  00312E  EF9C  F018         	goto	l81
  5839  003132                     u5530:
  5840  003132                     
  5841                           ; BSR set to: 0
  5842  003132  8479               	bsf	121,2,c	;volatile
  5843  003134  EF9D  F018         	goto	l82
  5844  003138                     l81:
  5845                           
  5846                           ; BSR set to: 0
  5847  003138  9479               	bcf	121,2,c	;volatile
  5848  00313A                     l82:
  5849                           
  5850                           ; BSR set to: 0
  5851                           ;LEDarray.c: 48:     if (number & 0b000001000){LATFbits.LATF6 = 1;}
  5852  00313A  A775               	btfss	LEDarray_disp_bin@number& (0+255),3,b
  5853  00313C  EFA2  F018         	goto	u5541
  5854  003140  EFA4  F018         	goto	u5540
  5855  003144                     u5541:
  5856  003144  EFA7  F018         	goto	l83
  5857  003148                     u5540:
  5858  003148                     
  5859                           ; BSR set to: 0
  5860  003148  8C7E               	bsf	126,6,c	;volatile
  5861  00314A  EFA8  F018         	goto	l84
  5862  00314E                     l83:
  5863                           
  5864                           ; BSR set to: 0
  5865  00314E  9C7E               	bcf	126,6,c	;volatile
  5866  003150                     l84:
  5867                           
  5868                           ; BSR set to: 0
  5869                           ;LEDarray.c: 51:     if (number & 0b000010000){LATAbits.LATA4 = 1;}
  5870  003150  A975               	btfss	LEDarray_disp_bin@number& (0+255),4,b
  5871  003152  EFAD  F018         	goto	u5551
  5872  003156  EFAF  F018         	goto	u5550
  5873  00315A                     u5551:
  5874  00315A  EFB2  F018         	goto	l85
  5875  00315E                     u5550:
  5876  00315E                     
  5877                           ; BSR set to: 0
  5878  00315E  8879               	bsf	121,4,c	;volatile
  5879  003160  EFB3  F018         	goto	l86
  5880  003164                     l85:
  5881                           
  5882                           ; BSR set to: 0
  5883  003164  9879               	bcf	121,4,c	;volatile
  5884  003166                     l86:
  5885                           
  5886                           ; BSR set to: 0
  5887                           ;LEDarray.c: 54:     if (number & 0b000100000){LATAbits.LATA5 = 1;}
  5888  003166  AB75               	btfss	LEDarray_disp_bin@number& (0+255),5,b
  5889  003168  EFB8  F018         	goto	u5561
  5890  00316C  EFBA  F018         	goto	u5560
  5891  003170                     u5561:
  5892  003170  EFBD  F018         	goto	l87
  5893  003174                     u5560:
  5894  003174                     
  5895                           ; BSR set to: 0
  5896  003174  8A79               	bsf	121,5,c	;volatile
  5897  003176  EFBE  F018         	goto	l88
  5898  00317A                     l87:
  5899                           
  5900                           ; BSR set to: 0
  5901  00317A  9A79               	bcf	121,5,c	;volatile
  5902  00317C                     l88:
  5903                           
  5904                           ; BSR set to: 0
  5905                           ;LEDarray.c: 57:     if (number & 0b001000000){LATFbits.LATF0 = 1;}
  5906  00317C  AD75               	btfss	LEDarray_disp_bin@number& (0+255),6,b
  5907  00317E  EFC3  F018         	goto	u5571
  5908  003182  EFC5  F018         	goto	u5570
  5909  003186                     u5571:
  5910  003186  EFC8  F018         	goto	l89
  5911  00318A                     u5570:
  5912  00318A                     
  5913                           ; BSR set to: 0
  5914  00318A  807E               	bsf	126,0,c	;volatile
  5915  00318C  EFC9  F018         	goto	l90
  5916  003190                     l89:
  5917                           
  5918                           ; BSR set to: 0
  5919  003190  907E               	bcf	126,0,c	;volatile
  5920  003192                     l90:
  5921                           
  5922                           ; BSR set to: 0
  5923                           ;LEDarray.c: 60:     if (number & 0b010000000){LATBbits.LATB0 = 1;}
  5924  003192  AF75               	btfss	LEDarray_disp_bin@number& (0+255),7,b
  5925  003194  EFCE  F018         	goto	u5581
  5926  003198  EFD0  F018         	goto	u5580
  5927  00319C                     u5581:
  5928  00319C  EFD3  F018         	goto	l91
  5929  0031A0                     u5580:
  5930  0031A0                     
  5931                           ; BSR set to: 0
  5932  0031A0  807A               	bsf	122,0,c	;volatile
  5933  0031A2  EFD4  F018         	goto	l92
  5934  0031A6                     l91:
  5935                           
  5936                           ; BSR set to: 0
  5937  0031A6  907A               	bcf	122,0,c	;volatile
  5938  0031A8                     l92:
  5939                           
  5940                           ; BSR set to: 0
  5941                           ;LEDarray.c: 63:     if (number & 0b100000000){LATBbits.LATB1 = 1;}
  5942  0031A8  A176               	btfss	(LEDarray_disp_bin@number+1)& (0+255),0,b
  5943  0031AA  EFD9  F018         	goto	u5591
  5944  0031AE  EFDB  F018         	goto	u5590
  5945  0031B2                     u5591:
  5946  0031B2  EFDE  F018         	goto	l93
  5947  0031B6                     u5590:
  5948  0031B6                     
  5949                           ; BSR set to: 0
  5950  0031B6  827A               	bsf	122,1,c	;volatile
  5951  0031B8  EFDF  F018         	goto	l95
  5952  0031BC                     l93:
  5953                           
  5954                           ; BSR set to: 0
  5955  0031BC  927A               	bcf	122,1,c	;volatile
  5956  0031BE                     l95:
  5957                           
  5958                           ; BSR set to: 0
  5959  0031BE  0012               	return		;funcret
  5960  0031C0                     __end_of_LEDarray_disp_bin:
  5961                           	callstack 0
  5962                           
  5963 ;; *************** function _LCD_setline *****************
  5964 ;; Defined at:
  5965 ;;		line 129 in file "LCD.c"
  5966 ;; Parameters:    Size  Location     Type
  5967 ;;  line            1    wreg     unsigned char 
  5968 ;; Auto vars:     Size  Location     Type
  5969 ;;  line            1   24[BANK0 ] unsigned char 
  5970 ;; Return value:  Size  Location     Type
  5971 ;;                  1    wreg      void 
  5972 ;; Registers used:
  5973 ;;		wreg, status,2, status,0, cstack
  5974 ;; Tracked objects:
  5975 ;;		On entry : 0/0
  5976 ;;		On exit  : 0/0
  5977 ;;		Unchanged: 0/0
  5978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5980 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5982 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5983 ;;Total ram usage:        1 bytes
  5984 ;; Hardware stack levels used:    1
  5985 ;; Hardware stack levels required when called:   13
  5986 ;; This function calls:
  5987 ;;		_LCD_sendbyte
  5988 ;; This function is called by:
  5989 ;;		_main
  5990 ;; This function uses a non-reentrant model
  5991 ;;
  5992                           
  5993                           	psect	text24
  5994  0038B0                     __ptext24:
  5995                           	callstack 0
  5996  0038B0                     _LCD_setline:
  5997                           	callstack 17
  5998                           
  5999                           ; BSR set to: 0
  6000                           ;incstack = 0
  6001                           ;LCD_setline@line stored from wreg
  6002  0038B0  0100               	movlb	0	; () banked
  6003  0038B2  6F78               	movwf	LCD_setline@line& (0+255),b
  6004  0038B4                     
  6005                           ;LCD.c: 130:     if (line == 1) {
  6006  0038B4  0100               	movlb	0	; () banked
  6007  0038B6  0578               	decf	LCD_setline@line& (0+255),w,b
  6008  0038B8  A4D8               	btfss	status,2,c
  6009  0038BA  EF61  F01C         	goto	u5481
  6010  0038BE  EF63  F01C         	goto	u5480
  6011  0038C2                     u5481:
  6012  0038C2  EF68  F01C         	goto	l4778
  6013  0038C6                     u5480:
  6014  0038C6                     
  6015                           ; BSR set to: 0
  6016                           ;LCD.c: 131:         LCD_sendbyte(0x80, 0);
  6017  0038C6  0E00               	movlw	0
  6018  0038C8  6F76               	movwf	LCD_sendbyte@type& (0+255),b
  6019  0038CA  0E80               	movlw	128
  6020  0038CC  EC43  F01D         	call	_LCD_sendbyte
  6021  0038D0                     l4778:
  6022                           
  6023                           ;LCD.c: 133:     if (line == 2) {
  6024  0038D0  0E02               	movlw	2
  6025  0038D2  0100               	movlb	0	; () banked
  6026  0038D4  1978               	xorwf	LCD_setline@line& (0+255),w,b
  6027  0038D6  A4D8               	btfss	status,2,c
  6028  0038D8  EF70  F01C         	goto	u5491
  6029  0038DC  EF72  F01C         	goto	u5490
  6030  0038E0                     u5491:
  6031  0038E0  EF77  F01C         	goto	l41
  6032  0038E4                     u5490:
  6033  0038E4                     
  6034                           ; BSR set to: 0
  6035                           ;LCD.c: 134:         LCD_sendbyte(0xC0, 0);
  6036  0038E4  0E00               	movlw	0
  6037  0038E6  6F76               	movwf	LCD_sendbyte@type& (0+255),b
  6038  0038E8  0EC0               	movlw	192
  6039  0038EA  EC43  F01D         	call	_LCD_sendbyte
  6040  0038EE                     l41:
  6041  0038EE  0012               	return		;funcret
  6042  0038F0                     __end_of_LCD_setline:
  6043                           	callstack 0
  6044                           
  6045 ;; *************** function _LCD_sendstring *****************
  6046 ;; Defined at:
  6047 ;;		line 141 in file "LCD.c"
  6048 ;; Parameters:    Size  Location     Type
  6049 ;;  string          2   24[BANK0 ] PTR unsigned char 
  6050 ;;		 -> main@datebuf(40), main@timebuf(40), 
  6051 ;; Auto vars:     Size  Location     Type
  6052 ;;		None
  6053 ;; Return value:  Size  Location     Type
  6054 ;;                  1    wreg      void 
  6055 ;; Registers used:
  6056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6057 ;; Tracked objects:
  6058 ;;		On entry : 0/0
  6059 ;;		On exit  : 0/0
  6060 ;;		Unchanged: 0/0
  6061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6062 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6065 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6066 ;;Total ram usage:        2 bytes
  6067 ;; Hardware stack levels used:    1
  6068 ;; Hardware stack levels required when called:   13
  6069 ;; This function calls:
  6070 ;;		_LCD_sendbyte
  6071 ;; This function is called by:
  6072 ;;		_main
  6073 ;; This function uses a non-reentrant model
  6074 ;;
  6075                           
  6076                           	psect	text25
  6077  0039E0                     __ptext25:
  6078                           	callstack 0
  6079  0039E0                     _LCD_sendstring:
  6080                           	callstack 17
  6081  0039E0                     
  6082                           ;LCD.c: 142:     while (*string != 0)
  6083  0039E0  EFFF  F01C         	goto	l4788
  6084  0039E4                     l4784:
  6085                           
  6086                           ;LCD.c: 143: {;LCD.c: 144:         LCD_sendbyte(*string++, 1);
  6087  0039E4  0E01               	movlw	1
  6088  0039E6  0100               	movlb	0	; () banked
  6089  0039E8  6F76               	movwf	LCD_sendbyte@type& (0+255),b
  6090  0039EA  C078  FFD9         	movff	LCD_sendstring@string,fsr2l
  6091  0039EE  C079  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  6092  0039F2  50DF               	movf	indf2,w,c
  6093  0039F4  EC43  F01D         	call	_LCD_sendbyte
  6094  0039F8  0100               	movlb	0	; () banked
  6095  0039FA  4B78               	infsnz	LCD_sendstring@string& (0+255),f,b
  6096  0039FC  2B79               	incf	(LCD_sendstring@string+1)& (0+255),f,b
  6097  0039FE                     l4788:
  6098                           
  6099                           ;LCD.c: 142:     while (*string != 0)
  6100  0039FE  C078  FFD9         	movff	LCD_sendstring@string,fsr2l
  6101  003A02  C079  FFDA         	movff	LCD_sendstring@string+1,fsr2h
  6102  003A06  50DF               	movf	indf2,w,c
  6103  003A08  A4D8               	btfss	status,2,c
  6104  003A0A  EF09  F01D         	goto	u5501
  6105  003A0E  EF0B  F01D         	goto	u5500
  6106  003A12                     u5501:
  6107  003A12  EFF2  F01C         	goto	l4784
  6108  003A16                     u5500:
  6109  003A16  0012               	return		;funcret
  6110  003A18                     __end_of_LCD_sendstring:
  6111                           	callstack 0
  6112                           
  6113 ;; *************** function _LCD_Init *****************
  6114 ;; Defined at:
  6115 ;;		line 66 in file "LCD.c"
  6116 ;; Parameters:    Size  Location     Type
  6117 ;;		None
  6118 ;; Auto vars:     Size  Location     Type
  6119 ;;		None
  6120 ;; Return value:  Size  Location     Type
  6121 ;;                  1    wreg      void 
  6122 ;; Registers used:
  6123 ;;		wreg, status,2, status,0, cstack
  6124 ;; Tracked objects:
  6125 ;;		On entry : 0/0
  6126 ;;		On exit  : 0/0
  6127 ;;		Unchanged: 0/0
  6128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6131 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6132 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6133 ;;Total ram usage:        2 bytes
  6134 ;; Hardware stack levels used:    1
  6135 ;; Hardware stack levels required when called:   13
  6136 ;; This function calls:
  6137 ;;		_LCD_sendbyte
  6138 ;;		_LCD_sendnibble
  6139 ;; This function is called by:
  6140 ;;		_main
  6141 ;; This function uses a non-reentrant model
  6142 ;;
  6143                           
  6144                           	psect	text26
  6145  003350                     __ptext26:
  6146                           	callstack 0
  6147  003350                     _LCD_Init:
  6148                           	callstack 17
  6149  003350                     
  6150                           ;LCD.c: 68:     TRISCbits.TRISC6 = 0;
  6151  003350  9C83               	bcf	131,6,c	;volatile
  6152                           
  6153                           ;LCD.c: 69:     TRISCbits.TRISC2 = 0;
  6154  003352  9483               	bcf	131,2,c	;volatile
  6155                           
  6156                           ;LCD.c: 70:     TRISBbits.TRISB3 = 0;
  6157  003354  9682               	bcf	130,3,c	;volatile
  6158                           
  6159                           ;LCD.c: 71:     TRISBbits.TRISB2 = 0;
  6160  003356  9482               	bcf	130,2,c	;volatile
  6161                           
  6162                           ;LCD.c: 72:     TRISEbits.TRISE3 = 0;
  6163  003358  9685               	bcf	133,3,c	;volatile
  6164                           
  6165                           ;LCD.c: 73:     TRISEbits.TRISE1 = 0;
  6166  00335A  9285               	bcf	133,1,c	;volatile
  6167                           
  6168                           ;LCD.c: 78:     LATCbits.LATC6 = 0;
  6169  00335C  9C7B               	bcf	123,6,c	;volatile
  6170                           
  6171                           ;LCD.c: 79:     LATCbits.LATC2 = 0;
  6172  00335E  947B               	bcf	123,2,c	;volatile
  6173                           
  6174                           ;LCD.c: 80:     LATBbits.LATB3 = 0;
  6175  003360  967A               	bcf	122,3,c	;volatile
  6176                           
  6177                           ;LCD.c: 81:     LATBbits.LATB2 = 0;
  6178  003362  947A               	bcf	122,2,c	;volatile
  6179                           
  6180                           ;LCD.c: 82:     LATEbits.LATE3 = 0;
  6181  003364  967D               	bcf	125,3,c	;volatile
  6182                           
  6183                           ;LCD.c: 83:     LATEbits.LATE1 = 0;
  6184  003366  927D               	bcf	125,1,c	;volatile
  6185  003368                     
  6186                           ;LCD.c: 87:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6187  003368  0E05               	movlw	5
  6188  00336A  0100               	movlb	0	; () banked
  6189  00336C  6F79               	movwf	(??_LCD_Init+1)& (0+255),b
  6190  00336E  0E0F               	movlw	15
  6191  003370  6F78               	movwf	??_LCD_Init& (0+255),b
  6192  003372  0EF1               	movlw	241
  6193  003374                     u5877:
  6194  003374  2EE8               	decfsz	wreg,f,c
  6195  003376  D7FE               	bra	u5877
  6196  003378  2F78               	decfsz	??_LCD_Init& (0+255),f,b
  6197  00337A  D7FC               	bra	u5877
  6198  00337C  2F79               	decfsz	(??_LCD_Init+1)& (0+255),f,b
  6199  00337E  D7FA               	bra	u5877
  6200  003380                     
  6201                           ;LCD.c: 90:     LCD_sendnibble(0b0011);
  6202  003380  0E03               	movlw	3
  6203  003382  EC82  F01A         	call	_LCD_sendnibble
  6204  003386                     
  6205                           ;LCD.c: 93:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  6206  003386  0ED5               	movlw	213
  6207  003388                     u5887:
  6208  003388  2EE8               	decfsz	wreg,f,c
  6209  00338A  D7FE               	bra	u5887
  6210  00338C  F000               	nop	
  6211  00338E                     
  6212                           ;LCD.c: 96:     LCD_sendbyte(0b00101000, 0);
  6213  00338E  0E00               	movlw	0
  6214  003390  0100               	movlb	0	; () banked
  6215  003392  6F76               	movwf	LCD_sendbyte@type& (0+255),b
  6216  003394  0E28               	movlw	40
  6217  003396  EC43  F01D         	call	_LCD_sendbyte
  6218  00339A                     
  6219                           ;LCD.c: 99:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  6220  00339A  0ED5               	movlw	213
  6221  00339C                     u5897:
  6222  00339C  2EE8               	decfsz	wreg,f,c
  6223  00339E  D7FE               	bra	u5897
  6224  0033A0  F000               	nop	
  6225  0033A2                     
  6226                           ;LCD.c: 102:     LCD_sendbyte(0b00101000, 0);
  6227  0033A2  0E00               	movlw	0
  6228  0033A4  0100               	movlb	0	; () banked
  6229  0033A6  6F76               	movwf	LCD_sendbyte@type& (0+255),b
  6230  0033A8  0E28               	movlw	40
  6231  0033AA  EC43  F01D         	call	_LCD_sendbyte
  6232  0033AE                     
  6233                           ;LCD.c: 105:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  6234  0033AE  0ED5               	movlw	213
  6235  0033B0                     u5907:
  6236  0033B0  2EE8               	decfsz	wreg,f,c
  6237  0033B2  D7FE               	bra	u5907
  6238  0033B4  F000               	nop	
  6239  0033B6                     
  6240                           ;LCD.c: 108:     LCD_sendbyte(0b00001111, 0);
  6241  0033B6  0E00               	movlw	0
  6242  0033B8  0100               	movlb	0	; () banked
  6243  0033BA  6F76               	movwf	LCD_sendbyte@type& (0+255),b
  6244  0033BC  0E0F               	movlw	15
  6245  0033BE  EC43  F01D         	call	_LCD_sendbyte
  6246  0033C2                     
  6247                           ;LCD.c: 111:     _delay((unsigned long)((40)*(64000000/4000000.0)));
  6248  0033C2  0ED5               	movlw	213
  6249  0033C4                     u5917:
  6250  0033C4  2EE8               	decfsz	wreg,f,c
  6251  0033C6  D7FE               	bra	u5917
  6252  0033C8  F000               	nop	
  6253  0033CA                     
  6254                           ;LCD.c: 114:     LCD_sendbyte(0b00000001, 0);
  6255  0033CA  0E00               	movlw	0
  6256  0033CC  0100               	movlb	0	; () banked
  6257  0033CE  6F76               	movwf	LCD_sendbyte@type& (0+255),b
  6258  0033D0  0E01               	movlw	1
  6259  0033D2  EC43  F01D         	call	_LCD_sendbyte
  6260  0033D6                     
  6261                           ;LCD.c: 117:     _delay((unsigned long)((1530)*(64000000/4000000.0)));
  6262  0033D6  0E20               	movlw	32
  6263  0033D8  0100               	movlb	0	; () banked
  6264  0033DA  6F78               	movwf	??_LCD_Init& (0+255),b
  6265  0033DC  0EC9               	movlw	201
  6266  0033DE                     u5927:
  6267  0033DE  2EE8               	decfsz	wreg,f,c
  6268  0033E0  D7FE               	bra	u5927
  6269  0033E2  2F78               	decfsz	??_LCD_Init& (0+255),f,b
  6270  0033E4  D7FC               	bra	u5927
  6271  0033E6  D000               	nop2	
  6272  0033E8                     
  6273                           ;LCD.c: 120:     LCD_sendbyte(0b00000101, 0);
  6274  0033E8  0E00               	movlw	0
  6275  0033EA  0100               	movlb	0	; () banked
  6276  0033EC  6F76               	movwf	LCD_sendbyte@type& (0+255),b
  6277  0033EE  0E05               	movlw	5
  6278  0033F0  EC43  F01D         	call	_LCD_sendbyte
  6279  0033F4                     
  6280                           ;LCD.c: 123:     LCD_sendbyte(0b00001100, 0);
  6281  0033F4  0E00               	movlw	0
  6282  0033F6  0100               	movlb	0	; () banked
  6283  0033F8  6F76               	movwf	LCD_sendbyte@type& (0+255),b
  6284  0033FA  0E0C               	movlw	12
  6285  0033FC  EC43  F01D         	call	_LCD_sendbyte
  6286  003400  0012               	return		;funcret
  6287  003402                     __end_of_LCD_Init:
  6288                           	callstack 0
  6289                           
  6290 ;; *************** function _LCD_sendbyte *****************
  6291 ;; Defined at:
  6292 ;;		line 53 in file "LCD.c"
  6293 ;; Parameters:    Size  Location     Type
  6294 ;;  Byte            1    wreg     unsigned char 
  6295 ;;  type            1   22[BANK0 ] unsigned char 
  6296 ;; Auto vars:     Size  Location     Type
  6297 ;;  Byte            1   23[BANK0 ] unsigned char 
  6298 ;; Return value:  Size  Location     Type
  6299 ;;                  1    wreg      void 
  6300 ;; Registers used:
  6301 ;;		wreg, status,2, status,0, cstack
  6302 ;; Tracked objects:
  6303 ;;		On entry : 0/0
  6304 ;;		On exit  : 0/0
  6305 ;;		Unchanged: 0/0
  6306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6307 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6308 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6310 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6311 ;;Total ram usage:        2 bytes
  6312 ;; Hardware stack levels used:    1
  6313 ;; Hardware stack levels required when called:   12
  6314 ;; This function calls:
  6315 ;;		_LCD_sendnibble
  6316 ;; This function is called by:
  6317 ;;		_LCD_Init
  6318 ;;		_LCD_setline
  6319 ;;		_LCD_sendstring
  6320 ;;		_main
  6321 ;;		_LCD_scroll
  6322 ;; This function uses a non-reentrant model
  6323 ;;
  6324                           
  6325                           	psect	text27
  6326  003A86                     __ptext27:
  6327                           	callstack 0
  6328  003A86                     _LCD_sendbyte:
  6329                           	callstack 17
  6330                           
  6331                           ;incstack = 0
  6332                           ;LCD_sendbyte@Byte stored from wreg
  6333  003A86  0100               	movlb	0	; () banked
  6334  003A88  6F77               	movwf	LCD_sendbyte@Byte& (0+255),b
  6335  003A8A                     
  6336                           ;LCD.c: 54:     LATCbits.LATC6 = type;
  6337  003A8A  0100               	movlb	0	; () banked
  6338  003A8C  B176               	btfsc	LCD_sendbyte@type& (0+255),0,b
  6339  003A8E  D002               	bra	u5405
  6340  003A90  9C7B               	bcf	123,6,c	;volatile
  6341  003A92  D001               	bra	u5406
  6342  003A94                     u5405:
  6343  003A94  8C7B               	bsf	123,6,c	;volatile
  6344  003A96                     u5406:
  6345  003A96                     
  6346                           ;LCD.c: 56:     LCD_sendnibble(Byte >> 4);
  6347  003A96  0100               	movlb	0	; () banked
  6348  003A98  3977               	swapf	LCD_sendbyte@Byte& (0+255),w,b
  6349  003A9A  0B0F               	andlw	15
  6350  003A9C  EC82  F01A         	call	_LCD_sendnibble
  6351                           
  6352                           ;LCD.c: 58:     LCD_sendnibble(Byte & 0b00001111);
  6353  003AA0  0100               	movlb	0	; () banked
  6354  003AA2  5177               	movf	LCD_sendbyte@Byte& (0+255),w,b
  6355  003AA4  0B0F               	andlw	15
  6356  003AA6  EC82  F01A         	call	_LCD_sendnibble
  6357  003AAA                     
  6358                           ;LCD.c: 60:     _delay((unsigned long)((50)*(64000000/4000000.0)));
  6359  003AAA  0EA0               	movlw	160
  6360  003AAC                     u5937:
  6361  003AAC  D000               	nop2	
  6362  003AAE  2EE8               	decfsz	wreg,f,c
  6363  003AB0  D7FD               	bra	u5937
  6364  003AB2  0012               	return		;funcret
  6365  003AB4                     __end_of_LCD_sendbyte:
  6366                           	callstack 0
  6367                           
  6368 ;; *************** function _LCD_sendnibble *****************
  6369 ;; Defined at:
  6370 ;;		line 18 in file "LCD.c"
  6371 ;; Parameters:    Size  Location     Type
  6372 ;;  number          1    wreg     unsigned char 
  6373 ;; Auto vars:     Size  Location     Type
  6374 ;;  number          1   21[BANK0 ] unsigned char 
  6375 ;; Return value:  Size  Location     Type
  6376 ;;                  1    wreg      void 
  6377 ;; Registers used:
  6378 ;;		wreg, cstack
  6379 ;; Tracked objects:
  6380 ;;		On entry : 0/0
  6381 ;;		On exit  : 0/0
  6382 ;;		Unchanged: 0/0
  6383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6385 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6387 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6388 ;;Total ram usage:        1 bytes
  6389 ;; Hardware stack levels used:    1
  6390 ;; Hardware stack levels required when called:   11
  6391 ;; This function calls:
  6392 ;;		_LCD_E_TOG
  6393 ;; This function is called by:
  6394 ;;		_LCD_sendbyte
  6395 ;;		_LCD_Init
  6396 ;; This function uses a non-reentrant model
  6397 ;;
  6398                           
  6399                           	psect	text28
  6400  003504                     __ptext28:
  6401                           	callstack 0
  6402  003504                     _LCD_sendnibble:
  6403                           	callstack 17
  6404                           
  6405                           ;incstack = 0
  6406                           ;LCD_sendnibble@number stored from wreg
  6407  003504  0100               	movlb	0	; () banked
  6408  003506  6F75               	movwf	LCD_sendnibble@number& (0+255),b
  6409  003508                     
  6410                           ;LCD.c: 20:     if (number & 0b1000) {
  6411  003508  0100               	movlb	0	; () banked
  6412  00350A  A775               	btfss	LCD_sendnibble@number& (0+255),3,b
  6413  00350C  EF8A  F01A         	goto	u5231
  6414  003510  EF8C  F01A         	goto	u5230
  6415  003514                     u5231:
  6416  003514  EF8F  F01A         	goto	l22
  6417  003518                     u5230:
  6418  003518                     
  6419                           ; BSR set to: 0
  6420                           ;LCD.c: 21:         LATEbits.LATE1 = 1;
  6421  003518  827D               	bsf	125,1,c	;volatile
  6422                           
  6423                           ;LCD.c: 22:     } else {
  6424  00351A  EF90  F01A         	goto	l4546
  6425  00351E                     l22:
  6426                           
  6427                           ; BSR set to: 0
  6428                           ;LCD.c: 23:         LATEbits.LATE1 = 0;
  6429  00351E  927D               	bcf	125,1,c	;volatile
  6430  003520                     l4546:
  6431                           
  6432                           ; BSR set to: 0
  6433                           ;LCD.c: 26:     if (number & 0b0100) {
  6434  003520  A575               	btfss	LCD_sendnibble@number& (0+255),2,b
  6435  003522  EF95  F01A         	goto	u5241
  6436  003526  EF97  F01A         	goto	u5240
  6437  00352A                     u5241:
  6438  00352A  EF9A  F01A         	goto	l24
  6439  00352E                     u5240:
  6440  00352E                     
  6441                           ; BSR set to: 0
  6442                           ;LCD.c: 27:         LATEbits.LATE3 = 1;
  6443  00352E  867D               	bsf	125,3,c	;volatile
  6444                           
  6445                           ;LCD.c: 28:     } else {
  6446  003530  EF9B  F01A         	goto	l4550
  6447  003534                     l24:
  6448                           
  6449                           ; BSR set to: 0
  6450                           ;LCD.c: 29:         LATEbits.LATE3 = 0;
  6451  003534  967D               	bcf	125,3,c	;volatile
  6452  003536                     l4550:
  6453                           
  6454                           ; BSR set to: 0
  6455                           ;LCD.c: 32:     if (number & 0b0010) {
  6456  003536  A375               	btfss	LCD_sendnibble@number& (0+255),1,b
  6457  003538  EFA0  F01A         	goto	u5251
  6458  00353C  EFA2  F01A         	goto	u5250
  6459  003540                     u5251:
  6460  003540  EFA5  F01A         	goto	l26
  6461  003544                     u5250:
  6462  003544                     
  6463                           ; BSR set to: 0
  6464                           ;LCD.c: 33:         LATBbits.LATB2 = 1;
  6465  003544  847A               	bsf	122,2,c	;volatile
  6466                           
  6467                           ;LCD.c: 34:     } else {
  6468  003546  EFA6  F01A         	goto	l4554
  6469  00354A                     l26:
  6470                           
  6471                           ; BSR set to: 0
  6472                           ;LCD.c: 35:         LATBbits.LATB2 = 0;
  6473  00354A  947A               	bcf	122,2,c	;volatile
  6474  00354C                     l4554:
  6475                           
  6476                           ; BSR set to: 0
  6477                           ;LCD.c: 38:     if (number & 0b0001) {
  6478  00354C  A175               	btfss	LCD_sendnibble@number& (0+255),0,b
  6479  00354E  EFAB  F01A         	goto	u5261
  6480  003552  EFAD  F01A         	goto	u5260
  6481  003556                     u5261:
  6482  003556  EFB0  F01A         	goto	l28
  6483  00355A                     u5260:
  6484  00355A                     
  6485                           ; BSR set to: 0
  6486                           ;LCD.c: 39:         LATBbits.LATB3 = 1;
  6487  00355A  867A               	bsf	122,3,c	;volatile
  6488                           
  6489                           ;LCD.c: 40:     } else {
  6490  00355C  EFB1  F01A         	goto	l4558
  6491  003560                     l28:
  6492                           
  6493                           ; BSR set to: 0
  6494                           ;LCD.c: 41:         LATBbits.LATB3 = 0;
  6495  003560  967A               	bcf	122,3,c	;volatile
  6496  003562                     l4558:
  6497                           
  6498                           ; BSR set to: 0
  6499                           ;LCD.c: 44:     LCD_E_TOG();
  6500  003562  ECE7  F01D         	call	_LCD_E_TOG	;wreg free
  6501  003566                     
  6502                           ;LCD.c: 46:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  6503  003566  0E1A               	movlw	26
  6504  003568                     u5947:
  6505  003568  2EE8               	decfsz	wreg,f,c
  6506  00356A  D7FE               	bra	u5947
  6507  00356C  D000               	nop2	
  6508  00356E  0012               	return		;funcret
  6509  003570                     __end_of_LCD_sendnibble:
  6510                           	callstack 0
  6511                           
  6512 ;; *************** function _LCD_E_TOG *****************
  6513 ;; Defined at:
  6514 ;;		line 9 in file "LCD.c"
  6515 ;; Parameters:    Size  Location     Type
  6516 ;;		None
  6517 ;; Auto vars:     Size  Location     Type
  6518 ;;		None
  6519 ;; Return value:  Size  Location     Type
  6520 ;;                  1    wreg      void 
  6521 ;; Registers used:
  6522 ;;		wreg
  6523 ;; Tracked objects:
  6524 ;;		On entry : 0/0
  6525 ;;		On exit  : 0/0
  6526 ;;		Unchanged: 0/0
  6527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6532 ;;Total ram usage:        0 bytes
  6533 ;; Hardware stack levels used:    1
  6534 ;; Hardware stack levels required when called:   10
  6535 ;; This function calls:
  6536 ;;		Nothing
  6537 ;; This function is called by:
  6538 ;;		_LCD_sendnibble
  6539 ;; This function uses a non-reentrant model
  6540 ;;
  6541                           
  6542                           	psect	text29
  6543  003BCE                     __ptext29:
  6544                           	callstack 0
  6545  003BCE                     _LCD_E_TOG:
  6546                           	callstack 17
  6547  003BCE                     
  6548                           ;LCD.c: 10:     LATCbits.LATC2 = 1;
  6549  003BCE  847B               	bsf	123,2,c	;volatile
  6550  003BD0                     
  6551                           ;LCD.c: 11:     _delay((unsigned long)((5)*(64000000/4000000.0)));
  6552  003BD0  0E1A               	movlw	26
  6553  003BD2                     u5957:
  6554  003BD2  2EE8               	decfsz	wreg,f,c
  6555  003BD4  D7FE               	bra	u5957
  6556  003BD6  D000               	nop2	
  6557  003BD8                     
  6558                           ;LCD.c: 12:     LATCbits.LATC2 = 0;
  6559  003BD8  947B               	bcf	123,2,c	;volatile
  6560  003BDA  0012               	return		;funcret
  6561  003BDC                     __end_of_LCD_E_TOG:
  6562                           	callstack 0
  6563                           
  6564 ;; *************** function _Interrupts_init *****************
  6565 ;; Defined at:
  6566 ;;		line 13 in file "interrupts.c"
  6567 ;; Parameters:    Size  Location     Type
  6568 ;;		None
  6569 ;; Auto vars:     Size  Location     Type
  6570 ;;		None
  6571 ;; Return value:  Size  Location     Type
  6572 ;;                  1    wreg      void 
  6573 ;; Registers used:
  6574 ;;		None
  6575 ;; Tracked objects:
  6576 ;;		On entry : 0/0
  6577 ;;		On exit  : 0/0
  6578 ;;		Unchanged: 0/0
  6579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6584 ;;Total ram usage:        0 bytes
  6585 ;; Hardware stack levels used:    1
  6586 ;; Hardware stack levels required when called:   10
  6587 ;; This function calls:
  6588 ;;		Nothing
  6589 ;; This function is called by:
  6590 ;;		_main
  6591 ;; This function uses a non-reentrant model
  6592 ;;
  6593                           
  6594                           	psect	text30
  6595  003BAC                     __ptext30:
  6596                           	callstack 0
  6597  003BAC                     _Interrupts_init:
  6598                           	callstack 20
  6599  003BAC                     
  6600                           ;interrupts.c: 15:     INTCONbits.PEIE=1;
  6601  003BAC  8CF2               	bsf	242,6,c	;volatile
  6602                           
  6603                           ;interrupts.c: 16:     INTCONbits.IPEN=1;
  6604  003BAE  8AF2               	bsf	242,5,c	;volatile
  6605                           
  6606                           ;interrupts.c: 18:  PIE2bits.C1IE = 1;
  6607  003BB0  010E               	movlb	14	; () banked
  6608  003BB2  812B               	bsf	43,0,b	;volatile
  6609                           
  6610                           ;interrupts.c: 19:     PIE0bits.TMR0IE = 1;
  6611  003BB4  8B29               	bsf	41,5,b	;volatile
  6612                           
  6613                           ;interrupts.c: 21:     IPR2bits.C1IP = 0;
  6614  003BB6  9121               	bcf	33,0,b	;volatile
  6615                           
  6616                           ;interrupts.c: 22:     IPR0bits.TMR0IP = 1;
  6617  003BB8  8B1F               	bsf	31,5,b	;volatile
  6618                           
  6619                           ;interrupts.c: 24:     INTCONbits.GIE=1;
  6620  003BBA  8EF2               	bsf	242,7,c	;volatile
  6621  003BBC                     
  6622                           ; BSR set to: 14
  6623  003BBC  0012               	return		;funcret
  6624  003BBE                     __end_of_Interrupts_init:
  6625                           	callstack 0
  6626                           
  6627 ;; *************** function _Comp1_init *****************
  6628 ;; Defined at:
  6629 ;;		line 22 in file "comparator.c"
  6630 ;; Parameters:    Size  Location     Type
  6631 ;;		None
  6632 ;; Auto vars:     Size  Location     Type
  6633 ;;		None
  6634 ;; Return value:  Size  Location     Type
  6635 ;;                  1    wreg      void 
  6636 ;; Registers used:
  6637 ;;		wreg, status,2, cstack
  6638 ;; Tracked objects:
  6639 ;;		On entry : 0/0
  6640 ;;		On exit  : 0/0
  6641 ;;		Unchanged: 0/0
  6642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6647 ;;Total ram usage:        0 bytes
  6648 ;; Hardware stack levels used:    1
  6649 ;; Hardware stack levels required when called:   11
  6650 ;; This function calls:
  6651 ;;		_DAC_init
  6652 ;; This function is called by:
  6653 ;;		_main
  6654 ;; This function uses a non-reentrant model
  6655 ;;
  6656                           
  6657                           	psect	text31
  6658  003ADC                     __ptext31:
  6659                           	callstack 0
  6660  003ADC                     _Comp1_init:
  6661                           	callstack 19
  6662  003ADC                     
  6663                           ;comparator.c: 24:     TRISFbits.TRISF7=1;
  6664  003ADC  8E86               	bsf	134,7,c	;volatile
  6665                           
  6666                           ;comparator.c: 25:     ANSELFbits.ANSELF7=1;
  6667  003ADE  010E               	movlb	14	; () banked
  6668  003AE0  8FB4               	bsf	180,7,b	;volatile
  6669  003AE2                     
  6670                           ; BSR set to: 14
  6671                           ;comparator.c: 26:     CM1NCHbits.NCH=0b011;
  6672  003AE2  51D2               	movf	210,w,b	;volatile
  6673  003AE4  0BF8               	andlw	-8
  6674  003AE6  0903               	iorlw	3
  6675  003AE8  6FD2               	movwf	210,b	;volatile
  6676                           
  6677                           ;comparator.c: 27:     CM1PCHbits.PCH=0b101;
  6678  003AEA  51D3               	movf	211,w,b	;volatile
  6679  003AEC  0BF8               	andlw	-8
  6680  003AEE  0905               	iorlw	5
  6681  003AF0  6FD3               	movwf	211,b	;volatile
  6682  003AF2                     
  6683                           ; BSR set to: 14
  6684                           ;comparator.c: 28:     CM1CON0bits.HYS=1;
  6685  003AF2  83D0               	bsf	208,1,b	;volatile
  6686  003AF4                     
  6687                           ; BSR set to: 14
  6688                           ;comparator.c: 30:     CM1CON0bits.POL=1;
  6689  003AF4  89D0               	bsf	208,4,b	;volatile
  6690  003AF6                     
  6691                           ; BSR set to: 14
  6692                           ;comparator.c: 31:     CM1CON1bits.INTP=1;
  6693  003AF6  83D1               	bsf	209,1,b	;volatile
  6694  003AF8                     
  6695                           ; BSR set to: 14
  6696                           ;comparator.c: 32:     CM1CON1bits.INTN=1;
  6697  003AF8  81D1               	bsf	209,0,b	;volatile
  6698  003AFA                     
  6699                           ; BSR set to: 14
  6700                           ;comparator.c: 33:     DAC_init();
  6701  003AFA  ECCC  F01D         	call	_DAC_init	;wreg free
  6702  003AFE                     
  6703                           ;comparator.c: 34:     CM1CON0bits.EN=1;
  6704  003AFE  010E               	movlb	14	; () banked
  6705  003B00  8FD0               	bsf	208,7,b	;volatile
  6706  003B02                     
  6707                           ; BSR set to: 14
  6708  003B02  0012               	return		;funcret
  6709  003B04                     __end_of_Comp1_init:
  6710                           	callstack 0
  6711                           
  6712 ;; *************** function _DAC_init *****************
  6713 ;; Defined at:
  6714 ;;		line 7 in file "comparator.c"
  6715 ;; Parameters:    Size  Location     Type
  6716 ;;		None
  6717 ;; Auto vars:     Size  Location     Type
  6718 ;;		None
  6719 ;; Return value:  Size  Location     Type
  6720 ;;                  1    wreg      void 
  6721 ;; Registers used:
  6722 ;;		wreg, status,2
  6723 ;; Tracked objects:
  6724 ;;		On entry : 0/0
  6725 ;;		On exit  : 0/0
  6726 ;;		Unchanged: 0/0
  6727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6732 ;;Total ram usage:        0 bytes
  6733 ;; Hardware stack levels used:    1
  6734 ;; Hardware stack levels required when called:   10
  6735 ;; This function calls:
  6736 ;;		Nothing
  6737 ;; This function is called by:
  6738 ;;		_Comp1_init
  6739 ;; This function uses a non-reentrant model
  6740 ;;
  6741                           
  6742                           	psect	text32
  6743  003B98                     __ptext32:
  6744                           	callstack 0
  6745  003B98                     _DAC_init:
  6746                           	callstack 19
  6747  003B98                     
  6748                           ;comparator.c: 9:     DAC1CON0bits.PSS=0b00;
  6749  003B98  0EF3               	movlw	-13
  6750  003B9A  010E               	movlb	14	; () banked
  6751  003B9C  17C6               	andwf	198,f,b	;volatile
  6752  003B9E                     
  6753                           ; BSR set to: 14
  6754                           ;comparator.c: 10:     DAC1CON0bits.NSS=0b0;
  6755  003B9E  91C6               	bcf	198,0,b	;volatile
  6756                           
  6757                           ;comparator.c: 14:     DAC1CON1bits.DAC1R=0b11011;
  6758  003BA0  51C7               	movf	199,w,b	;volatile
  6759  003BA2  0BE0               	andlw	-32
  6760  003BA4  091B               	iorlw	27
  6761  003BA6  6FC7               	movwf	199,b	;volatile
  6762  003BA8                     
  6763                           ; BSR set to: 14
  6764                           ;comparator.c: 15:     DAC1CON0bits.DAC1EN=1;
  6765  003BA8  8FC6               	bsf	198,7,b	;volatile
  6766  003BAA                     
  6767                           ; BSR set to: 14
  6768  003BAA  0012               	return		;funcret
  6769  003BAC                     __end_of_DAC_init:
  6770                           	callstack 0
  6771                           
  6772 ;; *************** function _LdrISR *****************
  6773 ;; Defined at:
  6774 ;;		line 32 in file "interrupts.c"
  6775 ;; Parameters:    Size  Location     Type
  6776 ;;		None
  6777 ;; Auto vars:     Size  Location     Type
  6778 ;;		None
  6779 ;; Return value:  Size  Location     Type
  6780 ;;                  1    wreg      void 
  6781 ;; Registers used:
  6782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6783 ;; Tracked objects:
  6784 ;;		On entry : 0/0
  6785 ;;		On exit  : 0/0
  6786 ;;		Unchanged: 0/0
  6787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6790 ;;      Temps:          0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6791 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6792 ;;Total ram usage:       13 bytes
  6793 ;; Hardware stack levels used:    1
  6794 ;; Hardware stack levels required when called:    9
  6795 ;; This function calls:
  6796 ;;		_printf
  6797 ;; This function is called by:
  6798 ;;		Interrupt level 1
  6799 ;; This function uses a non-reentrant model
  6800 ;;
  6801                           
  6802                           	psect	intcodelo
  6803  000018                     __pintcodelo:
  6804                           	callstack 0
  6805  000018                     _LdrISR:
  6806                           	callstack 12
  6807                           
  6808                           ; BSR set to: 14
  6809                           ;incstack = 0
  6810  000018  805E               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  6811  00001A  CFD8 F068          	movff	status,??_LdrISR
  6812  00001E  CFE8 F069          	movff	wreg,??_LdrISR+1
  6813  000022  CFE0 F06A          	movff	bsr,??_LdrISR+2
  6814  000026  CFE1 F06B          	movff	fsr1l,??_LdrISR+3
  6815  00002A  CFE2 F06C          	movff	fsr1h,??_LdrISR+4
  6816  00002E  CFD9 F06D          	movff	fsr2l,??_LdrISR+5
  6817  000032  CFDA F06E          	movff	fsr2h,??_LdrISR+6
  6818  000036  CFF3 F06F          	movff	prodl,??_LdrISR+7
  6819  00003A  CFF4 F070          	movff	prodh,??_LdrISR+8
  6820  00003E  CFF6 F071          	movff	tblptrl,??_LdrISR+9
  6821  000042  CFF7 F072          	movff	tblptrh,??_LdrISR+10
  6822  000046  CFF8 F073          	movff	tblptru,??_LdrISR+11
  6823  00004A  CFF5 F074          	movff	tablat,??_LdrISR+12
  6824  00004E                     
  6825                           ;interrupts.c: 34:  if(PIR2bits.C1IF)
  6826  00004E  010E               	movlb	14	; () banked
  6827  000050  A135               	btfss	53,0,b	;volatile
  6828  000052  EF2D  F000         	goto	i1u574_21
  6829  000056  EF2F  F000         	goto	i1u574_20
  6830  00005A                     i1u574_21:
  6831  00005A  EF51  F000         	goto	i1l170
  6832  00005E                     i1u574_20:
  6833  00005E                     
  6834                           ; BSR set to: 14
  6835                           ;interrupts.c: 35:     {;interrupts.c: 36:         printf("hello");
  6836  00005E  0E27               	movlw	low STR_4
  6837  000060  0100               	movlb	0	; () banked
  6838  000062  6F62               	movwf	printf@fmt& (0+255),b
  6839  000064  0E0E               	movlw	high STR_4
  6840  000066  6F63               	movwf	(printf@fmt+1)& (0+255),b
  6841  000068  EC82  F01D         	call	_printf	;wreg free
  6842  00006C                     
  6843                           ;interrupts.c: 37:         PIR2bits.C1IF = 0;
  6844  00006C  010E               	movlb	14	; () banked
  6845  00006E  9135               	bcf	53,0,b	;volatile
  6846  000070                     
  6847                           ; BSR set to: 14
  6848                           ;interrupts.c: 38:         sun = !sun;
  6849  000070  0100               	movlb	0	; () banked
  6850  000072  51E2               	movf	_sun& (0+255),w,b
  6851  000074  B4D8               	btfsc	status,2,c
  6852  000076  EF3F  F000         	goto	i1u575_21
  6853  00007A  EF42  F000         	goto	i1u575_20
  6854  00007E                     i1u575_21:
  6855  00007E  0E01               	movlw	1
  6856  000080  EF43  F000         	goto	i1u576_20
  6857  000084                     i1u575_20:
  6858  000084  0E00               	movlw	0
  6859  000086                     i1u576_20:
  6860  000086  6FE2               	movwf	_sun& (0+255),b
  6861  000088                     
  6862                           ; BSR set to: 0
  6863                           ;interrupts.c: 39:         if (sun) {
  6864  000088  51E2               	movf	_sun& (0+255),w,b
  6865  00008A  B4D8               	btfsc	status,2,c
  6866  00008C  EF4A  F000         	goto	i1u577_21
  6867  000090  EF4C  F000         	goto	i1u577_20
  6868  000094                     i1u577_21:
  6869  000094  EF51  F000         	goto	i1l170
  6870  000098                     i1u577_20:
  6871  000098                     
  6872                           ; BSR set to: 0
  6873                           ;interrupts.c: 40:             seconds_check = 0;
  6874  000098  0E00               	movlw	0
  6875  00009A  0101               	movlb	1	; () banked
  6876  00009C  6F9E               	movwf	(_seconds_check+1)& (0+255),b
  6877  00009E  0E00               	movlw	0
  6878  0000A0  6F9D               	movwf	_seconds_check& (0+255),b
  6879  0000A2                     i1l170:
  6880  0000A2  C074  FFF5         	movff	??_LdrISR+12,tablat
  6881  0000A6  C073  FFF8         	movff	??_LdrISR+11,tblptru
  6882  0000AA  C072  FFF7         	movff	??_LdrISR+10,tblptrh
  6883  0000AE  C071  FFF6         	movff	??_LdrISR+9,tblptrl
  6884  0000B2  C070  FFF4         	movff	??_LdrISR+8,prodh
  6885  0000B6  C06F  FFF3         	movff	??_LdrISR+7,prodl
  6886  0000BA  C06E  FFDA         	movff	??_LdrISR+6,fsr2h
  6887  0000BE  C06D  FFD9         	movff	??_LdrISR+5,fsr2l
  6888  0000C2  C06C  FFE2         	movff	??_LdrISR+4,fsr1h
  6889  0000C6  C06B  FFE1         	movff	??_LdrISR+3,fsr1l
  6890  0000CA  C06A  FFE0         	movff	??_LdrISR+2,bsr
  6891  0000CE  C069  FFE8         	movff	??_LdrISR+1,wreg
  6892  0000D2  C068  FFD8         	movff	??_LdrISR,status
  6893  0000D6  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  6894  0000D8  0010               	retfie	
  6895  0000DA                     __end_of_LdrISR:
  6896                           	callstack 0
  6897                           
  6898 ;; *************** function _printf *****************
  6899 ;; Defined at:
  6900 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\printf.c"
  6901 ;; Parameters:    Size  Location     Type
  6902 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  6903 ;;		 -> STR_4(6), 
  6904 ;; Auto vars:     Size  Location     Type
  6905 ;;  ap              2    6[BANK0 ] PTR void [1]
  6906 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6907 ;;  ret             2    0        int 
  6908 ;; Return value:  Size  Location     Type
  6909 ;;                  2    2[BANK0 ] int 
  6910 ;; Registers used:
  6911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6912 ;; Tracked objects:
  6913 ;;		On entry : 0/0
  6914 ;;		On exit  : 0/0
  6915 ;;		Unchanged: 0/0
  6916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6917 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6918 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6920 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6921 ;;Total ram usage:        6 bytes
  6922 ;; Hardware stack levels used:    1
  6923 ;; Hardware stack levels required when called:    8
  6924 ;; This function calls:
  6925 ;;		i1_vfprintf
  6926 ;; This function is called by:
  6927 ;;		_LdrISR
  6928 ;; This function uses a non-reentrant model
  6929 ;;
  6930                           
  6931                           	psect	text34
  6932  003B04                     __ptext34:
  6933                           	callstack 0
  6934  003B04                     _printf:
  6935                           	callstack 12
  6936  003B04  0E64               	movlw	low (?_printf+2)
  6937  003B06  0100               	movlb	0	; () banked
  6938  003B08  6F66               	movwf	printf@ap& (0+255),b
  6939  003B0A  0E00               	movlw	high (?_printf+2)
  6940  003B0C  6F67               	movwf	(printf@ap+1)& (0+255),b
  6941  003B0E                     
  6942                           ; BSR set to: 0
  6943  003B0E  0E00               	movlw	0
  6944  003B10  6E58               	movwf	i1vfprintf@fp^0,c
  6945  003B12  0E00               	movlw	0
  6946  003B14  6E59               	movwf	(i1vfprintf@fp+1)^0,c
  6947  003B16  C062  F05A         	movff	printf@fmt,i1vfprintf@fmt
  6948  003B1A  C063  F05B         	movff	printf@fmt+1,i1vfprintf@fmt+1
  6949  003B1E  0E66               	movlw	low printf@ap
  6950  003B20  6E5C               	movwf	i1vfprintf@ap^0,c
  6951  003B22  0E00               	movlw	high printf@ap
  6952  003B24  6E5D               	movwf	(i1vfprintf@ap+1)^0,c
  6953  003B26  EC1E  F01B         	call	i1_vfprintf	;wreg free
  6954  003B2A  0012               	return		;funcret
  6955  003B2C                     __end_of_printf:
  6956                           	callstack 0
  6957                           
  6958 ;; *************** function i1_vfprintf *****************
  6959 ;; Defined at:
  6960 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  6961 ;; Parameters:    Size  Location     Type
  6962 ;;  fp              2   87[COMRAM] PTR struct _IO_FILE
  6963 ;;		 -> NULL(0), sprintf@f(6), 
  6964 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  6965 ;;		 -> STR_4(6), STR_3(19), STR_2(19), STR_1(5), 
  6966 ;;  ap              2   91[COMRAM] PTR PTR void 
  6967 ;;		 -> printf@ap(2), sprintf@ap(2), 
  6968 ;; Auto vars:     Size  Location     Type
  6969 ;;  cfmt            2    0[BANK0 ] PTR unsigned char 
  6970 ;;		 -> STR_4(6), STR_3(19), STR_2(19), STR_1(5), 
  6971 ;; Return value:  Size  Location     Type
  6972 ;;                  2   87[COMRAM] int 
  6973 ;; Registers used:
  6974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6975 ;; Tracked objects:
  6976 ;;		On entry : 0/0
  6977 ;;		On exit  : 0/0
  6978 ;;		Unchanged: 0/0
  6979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6980 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6981 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6983 ;;      Totals:         6       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6984 ;;Total ram usage:        8 bytes
  6985 ;; Hardware stack levels used:    1
  6986 ;; Hardware stack levels required when called:    7
  6987 ;; This function calls:
  6988 ;;		i1_vfpfcnvrt
  6989 ;; This function is called by:
  6990 ;;		_printf
  6991 ;; This function uses a non-reentrant model
  6992 ;;
  6993                           
  6994                           	psect	text35
  6995  00363C                     __ptext35:
  6996                           	callstack 0
  6997  00363C                     i1_vfprintf:
  6998                           	callstack 12
  6999  00363C                     
  7000                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  7001  00363C  C05A  F060         	movff	i1vfprintf@fmt,i1vfprintf@cfmt
  7002  003640  C05B  F061         	movff	i1vfprintf@fmt+1,i1vfprintf@cfmt+1
  7003  003644                     
  7004                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  7005  003644  0E00               	movlw	0
  7006  003646  0100               	movlb	0	; () banked
  7007  003648  6FDB               	movwf	(_nout+1)& (0+255),b
  7008  00364A  0E00               	movlw	0
  7009  00364C  6FDA               	movwf	_nout& (0+255),b
  7010                           
  7011                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  7012  00364E  EF3C  F01B         	goto	i1l4744
  7013  003652                     i1l4742:
  7014                           
  7015                           ; BSR set to: 0
  7016                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  7017  003652  C058  F040         	movff	i1vfprintf@fp,i1vfpfcnvrt@fp
  7018  003656  C059  F041         	movff	i1vfprintf@fp+1,i1vfpfcnvrt@fp+1
  7019  00365A  0E60               	movlw	low i1vfprintf@cfmt
  7020  00365C  6E42               	movwf	i1vfpfcnvrt@fmt^0,c
  7021  00365E  0E00               	movlw	high i1vfprintf@cfmt
  7022  003660  6E43               	movwf	(i1vfpfcnvrt@fmt+1)^0,c
  7023  003662  C05C  F044         	movff	i1vfprintf@ap,i1vfpfcnvrt@ap
  7024  003666  C05D  F045         	movff	i1vfprintf@ap+1,i1vfpfcnvrt@ap+1
  7025  00366A  ECB9  F009         	call	i1_vfpfcnvrt	;wreg free
  7026  00366E  5040               	movf	?i1_vfpfcnvrt^0,w,c
  7027  003670  0100               	movlb	0	; () banked
  7028  003672  27DA               	addwf	_nout& (0+255),f,b
  7029  003674  5041               	movf	(?i1_vfpfcnvrt+1)^0,w,c
  7030  003676  23DB               	addwfc	(_nout+1)& (0+255),f,b
  7031  003678                     i1l4744:
  7032                           
  7033                           ; BSR set to: 0
  7034                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  7035  003678  C060  FFF6         	movff	i1vfprintf@cfmt,tblptrl
  7036  00367C  C061  FFF7         	movff	i1vfprintf@cfmt+1,tblptrh
  7037  003680                     	if	0	;tblptru may be non-zero
  7038  003680                     	endif
  7039  003680                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7040  003680  0E00               	movlw	low (__mediumconst shr (0+16))
  7041  003682  6EF8               	movwf	tblptru,c
  7042  003684                     	endif
  7043  003684  0008               	tblrd		*
  7044  003686  50F5               	movf	tablat,w,c
  7045  003688  0900               	iorlw	0
  7046  00368A  A4D8               	btfss	status,2,c
  7047  00368C  EF4A  F01B         	goto	i1u547_21
  7048  003690  EF4C  F01B         	goto	i1u547_20
  7049  003694                     i1u547_21:
  7050  003694  EF29  F01B         	goto	i1l4742
  7051  003698                     i1u547_20:
  7052  003698                     
  7053                           ; BSR set to: 0
  7054                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  7055  003698  C0DA  F058         	movff	_nout,?i1_vfprintf
  7056  00369C  C0DB  F059         	movff	_nout+1,?i1_vfprintf+1
  7057  0036A0                     
  7058                           ; BSR set to: 0
  7059  0036A0  0012               	return		;funcret
  7060  0036A2                     __end_ofi1_vfprintf:
  7061                           	callstack 0
  7062                           
  7063 ;; *************** function i1_vfpfcnvrt *****************
  7064 ;; Defined at:
  7065 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  7066 ;; Parameters:    Size  Location     Type
  7067 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  7068 ;;		 -> NULL(0), sprintf@f(6), 
  7069 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  7070 ;;		 -> i1vfprintf@cfmt(2), vfprintf@cfmt(2), 
  7071 ;;  ap              2   67[COMRAM] PTR PTR void 
  7072 ;;		 -> printf@ap(2), sprintf@ap(2), 
  7073 ;; Auto vars:     Size  Location     Type
  7074 ;;  ll              8   73[COMRAM] long long 
  7075 ;;  llu             8    0        unsigned long long 
  7076 ;;  f               4    0        unsigned long long 
  7077 ;;  vp              3    0        PTR void 
  7078 ;;  ct              3    0        unsigned char [3]
  7079 ;;  done            2   83[COMRAM] int 
  7080 ;;  cp              2   81[COMRAM] PTR unsigned char 
  7081 ;;		 -> ?_printf(2), ?_sprintf(2), time_now@daylist(70), 
  7082 ;;  i               2    0        int 
  7083 ;;  c               1    0        unsigned char 
  7084 ;; Return value:  Size  Location     Type
  7085 ;;                  2   63[COMRAM] int 
  7086 ;; Registers used:
  7087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7088 ;; Tracked objects:
  7089 ;;		On entry : 0/0
  7090 ;;		On exit  : 0/0
  7091 ;;		Unchanged: 0/0
  7092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7093 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7094 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7095 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7096 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7097 ;;Total ram usage:       24 bytes
  7098 ;; Hardware stack levels used:    1
  7099 ;; Hardware stack levels required when called:    6
  7100 ;; This function calls:
  7101 ;;		i1_atoi
  7102 ;;		i1_dtoa
  7103 ;;		i1_fputc
  7104 ;;		i1_isdigit
  7105 ;;		i1_stoa
  7106 ;; This function is called by:
  7107 ;;		i1_vfprintf
  7108 ;; This function uses a non-reentrant model
  7109 ;;
  7110                           
  7111                           	psect	text36
  7112  001372                     __ptext36:
  7113                           	callstack 0
  7114  001372                     i1_vfpfcnvrt:
  7115                           	callstack 12
  7116  001372                     
  7117                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  7118  001372  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7119  001376  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7120  00137A  CFDE FFF6          	movff	postinc2,tblptrl
  7121  00137E  CFDD FFF7          	movff	postdec2,tblptrh
  7122  001382                     	if	0	;tblptru may be non-zero
  7123  001382                     	endif
  7124  001382                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7125  001382  0E00               	movlw	low (__mediumconst shr (0+16))
  7126  001384  6EF8               	movwf	tblptru,c
  7127  001386                     	endif
  7128  001386  0008               	tblrd		*
  7129  001388  50F5               	movf	tablat,w,c
  7130  00138A  0A25               	xorlw	37
  7131  00138C  A4D8               	btfss	status,2,c
  7132  00138E  EFCB  F009         	goto	i1u528_21
  7133  001392  EFCD  F009         	goto	i1u528_20
  7134  001396                     i1u528_21:
  7135  001396  EFA5  F00B         	goto	i1l4662
  7136  00139A                     i1u528_20:
  7137  00139A                     
  7138                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  7139  00139A  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7140  00139E  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7141  0013A2  2ADE               	incf	postinc2,f,c
  7142  0013A4  0E00               	movlw	0
  7143  0013A6  22DD               	addwfc	postdec2,f,c
  7144  0013A8                     
  7145                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  7146  0013A8  0E00               	movlw	0
  7147  0013AA  0100               	movlb	0	; () banked
  7148  0013AC  6FDD               	movwf	(_width+1)& (0+255),b
  7149  0013AE  0E00               	movlw	0
  7150  0013B0  6FDC               	movwf	_width& (0+255),b
  7151  0013B2  C0DC  F0E0         	movff	_width,_flags
  7152  0013B6  C0DD  F0E1         	movff	_width+1,_flags+1
  7153  0013BA                     
  7154                           ; BSR set to: 0
  7155                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  7156  0013BA  69DE               	setf	_prec& (0+255),b
  7157  0013BC  69DF               	setf	(_prec+1)& (0+255),b
  7158  0013BE                     
  7159                           ; BSR set to: 0
  7160                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  7161  0013BE  0E00               	movlw	0
  7162  0013C0  6E55               	movwf	(i1vfpfcnvrt@done+1)^0,c
  7163  0013C2  0E00               	movlw	0
  7164  0013C4  6E54               	movwf	i1vfpfcnvrt@done^0,c
  7165                           
  7166                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  7167  0013C6  EF32  F00A         	goto	i1l4606
  7168  0013CA                     i1l4580:
  7169                           
  7170                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  7171  0013CA  0100               	movlb	0	; () banked
  7172  0013CC  81E0               	bsf	_flags& (0+255),0,b
  7173  0013CE                     i1l4582:
  7174                           
  7175                           ; BSR set to: 0
  7176                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  7177  0013CE  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7178  0013D2  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7179  0013D6  2ADE               	incf	postinc2,f,c
  7180  0013D8  0E00               	movlw	0
  7181  0013DA  22DD               	addwfc	postdec2,f,c
  7182                           
  7183                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  7184  0013DC  EF32  F00A         	goto	i1l4606
  7185  0013E0                     i1l4584:
  7186                           
  7187                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  7188  0013E0  0100               	movlb	0	; () banked
  7189  0013E2  83E0               	bsf	_flags& (0+255),1,b
  7190  0013E4  EFE7  F009         	goto	i1l4582
  7191  0013E8                     i1l4588:
  7192                           
  7193                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  7194  0013E8  0100               	movlb	0	; () banked
  7195  0013EA  85E0               	bsf	_flags& (0+255),2,b
  7196  0013EC  EFE7  F009         	goto	i1l4582
  7197  0013F0                     i1l4592:
  7198                           
  7199                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  7200  0013F0  0100               	movlb	0	; () banked
  7201  0013F2  87E0               	bsf	_flags& (0+255),3,b
  7202  0013F4  EFE7  F009         	goto	i1l4582
  7203  0013F8                     i1l4596:
  7204                           
  7205                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  7206  0013F8  0100               	movlb	0	; () banked
  7207  0013FA  89E0               	bsf	_flags& (0+255),4,b
  7208  0013FC  EFE7  F009         	goto	i1l4582
  7209  001400                     i1l4600:
  7210                           
  7211                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  7212  001400  0E00               	movlw	0
  7213  001402  6E55               	movwf	(i1vfpfcnvrt@done+1)^0,c
  7214  001404  0E01               	movlw	1
  7215  001406  6E54               	movwf	i1vfpfcnvrt@done^0,c
  7216                           
  7217                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  7218  001408  EF32  F00A         	goto	i1l4606
  7219  00140C                     i1l4604:
  7220  00140C  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7221  001410  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7222  001414  CFDE FFF6          	movff	postinc2,tblptrl
  7223  001418  CFDD FFF7          	movff	postdec2,tblptrh
  7224  00141C                     	if	0	;tblptru may be non-zero
  7225  00141C                     	endif
  7226  00141C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7227  00141C  0E00               	movlw	low (__mediumconst shr (0+16))
  7228  00141E  6EF8               	movwf	tblptru,c
  7229  001420                     	endif
  7230  001420  0008               	tblrd		*
  7231  001422  50F5               	movf	tablat,w,c
  7232  001424  6E46               	movwf	??i1_vfpfcnvrt^0,c
  7233  001426  6A47               	clrf	(??i1_vfpfcnvrt+1)^0,c
  7234                           
  7235                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7236                           ; Switch size 1, requested type "simple"
  7237                           ; Number of cases is 1, Range of values is 0 to 0
  7238                           ; switch strategies available:
  7239                           ; Name         Instructions Cycles
  7240                           ; simple_byte            4     3 (average)
  7241                           ;	Chosen strategy is simple_byte
  7242  001428  5047               	movf	(??i1_vfpfcnvrt+1)^0,w,c
  7243  00142A  0A00               	xorlw	0	; case 0
  7244  00142C  B4D8               	btfsc	status,2,c
  7245  00142E  EF1B  F00A         	goto	i1l5136
  7246  001432  EF00  F00A         	goto	i1l4600
  7247  001436                     i1l5136:
  7248                           
  7249                           ; Switch size 1, requested type "simple"
  7250                           ; Number of cases is 5, Range of values is 32 to 48
  7251                           ; switch strategies available:
  7252                           ; Name         Instructions Cycles
  7253                           ; simple_byte           16     9 (average)
  7254                           ;	Chosen strategy is simple_byte
  7255  001436  5046               	movf	??i1_vfpfcnvrt^0,w,c
  7256  001438  0A20               	xorlw	32	; case 32
  7257  00143A  B4D8               	btfsc	status,2,c
  7258  00143C  EFF8  F009         	goto	i1l4592
  7259  001440  0A03               	xorlw	3	; case 35
  7260  001442  B4D8               	btfsc	status,2,c
  7261  001444  EFFC  F009         	goto	i1l4596
  7262  001448  0A08               	xorlw	8	; case 43
  7263  00144A  B4D8               	btfsc	status,2,c
  7264  00144C  EFF4  F009         	goto	i1l4588
  7265  001450  0A06               	xorlw	6	; case 45
  7266  001452  B4D8               	btfsc	status,2,c
  7267  001454  EFE5  F009         	goto	i1l4580
  7268  001458  0A1D               	xorlw	29	; case 48
  7269  00145A  B4D8               	btfsc	status,2,c
  7270  00145C  EFF0  F009         	goto	i1l4584
  7271  001460  EF00  F00A         	goto	i1l4600
  7272  001464                     i1l4606:
  7273                           
  7274                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  7275  001464  5054               	movf	i1vfpfcnvrt@done^0,w,c
  7276  001466  1055               	iorwf	(i1vfpfcnvrt@done+1)^0,w,c
  7277  001468  B4D8               	btfsc	status,2,c
  7278  00146A  EF39  F00A         	goto	i1u529_21
  7279  00146E  EF3B  F00A         	goto	i1u529_20
  7280  001472                     i1u529_21:
  7281  001472  EF06  F00A         	goto	i1l4604
  7282  001476                     i1u529_20:
  7283  001476                     
  7284                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  7285  001476  0100               	movlb	0	; () banked
  7286  001478  A1E0               	btfss	_flags& (0+255),0,b
  7287  00147A  EF41  F00A         	goto	i1u530_21
  7288  00147E  EF43  F00A         	goto	i1u530_20
  7289  001482                     i1u530_21:
  7290  001482  EF44  F00A         	goto	i1l4610
  7291  001486                     i1u530_20:
  7292  001486                     
  7293                           ; BSR set to: 0
  7294                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  7295  001486  93E0               	bcf	_flags& (0+255),1,b
  7296  001488                     i1l4610:
  7297                           
  7298                           ; BSR set to: 0
  7299                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  7300  001488  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7301  00148C  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7302  001490  CFDE FFF6          	movff	postinc2,tblptrl
  7303  001494  CFDD FFF7          	movff	postdec2,tblptrh
  7304  001498                     	if	0	;tblptru may be non-zero
  7305  001498                     	endif
  7306  001498                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7307  001498  0E00               	movlw	low (__mediumconst shr (0+16))
  7308  00149A  6EF8               	movwf	tblptru,c
  7309  00149C                     	endif
  7310  00149C  0008               	tblrd		*
  7311  00149E  50F5               	movf	tablat,w,c
  7312  0014A0  0A2A               	xorlw	42
  7313  0014A2  A4D8               	btfss	status,2,c
  7314  0014A4  EF56  F00A         	goto	i1u531_21
  7315  0014A8  EF58  F00A         	goto	i1u531_20
  7316  0014AC                     i1u531_21:
  7317  0014AC  EF81  F00A         	goto	i1l4618
  7318  0014B0                     i1u531_20:
  7319  0014B0                     
  7320                           ; BSR set to: 0
  7321                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  7322  0014B0  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7323  0014B4  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7324  0014B8  2ADE               	incf	postinc2,f,c
  7325  0014BA  0E00               	movlw	0
  7326  0014BC  22DD               	addwfc	postdec2,f,c
  7327                           
  7328                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  7329  0014BE  C044  FFD9         	movff	i1vfpfcnvrt@ap,fsr2l
  7330  0014C2  C045  FFDA         	movff	i1vfpfcnvrt@ap+1,fsr2h
  7331  0014C6  CFDF F046          	movff	indf2,??i1_vfpfcnvrt
  7332  0014CA  0E02               	movlw	2
  7333  0014CC  26DE               	addwf	postinc2,f,c
  7334  0014CE  CFDF F047          	movff	indf2,??i1_vfpfcnvrt+1
  7335  0014D2  0E00               	movlw	0
  7336  0014D4  22DD               	addwfc	postdec2,f,c
  7337  0014D6  C046  FFD9         	movff	??i1_vfpfcnvrt,fsr2l
  7338  0014DA  C047  FFDA         	movff	??i1_vfpfcnvrt+1,fsr2h
  7339  0014DE  CFDE F0DC          	movff	postinc2,_width
  7340  0014E2  CFDD F0DD          	movff	postdec2,_width+1
  7341  0014E6                     
  7342                           ; BSR set to: 0
  7343                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  7344  0014E6  BFDD               	btfsc	(_width+1)& (0+255),7,b
  7345  0014E8  EF7A  F00A         	goto	i1u532_20
  7346  0014EC  EF78  F00A         	goto	i1u532_21
  7347  0014F0                     i1u532_21:
  7348  0014F0  EFC6  F00A         	goto	i1l4628
  7349  0014F4                     i1u532_20:
  7350  0014F4                     
  7351                           ; BSR set to: 0
  7352                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  7353  0014F4  81E0               	bsf	_flags& (0+255),0,b
  7354                           
  7355                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  7356  0014F6  6DDC               	negf	_width& (0+255),b
  7357  0014F8  1FDD               	comf	(_width+1)& (0+255),f,b
  7358  0014FA  B0D8               	btfsc	status,0,c
  7359  0014FC  2BDD               	incf	(_width+1)& (0+255),f,b
  7360  0014FE  EFC6  F00A         	goto	i1l4628
  7361  001502                     i1l4618:
  7362                           
  7363                           ; BSR set to: 0
  7364                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  7365  001502  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7366  001506  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7367  00150A  CFDE F008          	movff	postinc2,i1atoi@s
  7368  00150E  CFDD F009          	movff	postdec2,i1atoi@s+1
  7369  001512  EC67  F012         	call	i1_atoi	;wreg free
  7370  001516  C008  F0DC         	movff	?i1_atoi,_width
  7371  00151A  C009  F0DD         	movff	?i1_atoi+1,_width+1
  7372                           
  7373                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7374  00151E  EF98  F00A         	goto	i1l4622
  7375  001522                     i1l4620:
  7376                           
  7377                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  7378  001522  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7379  001526  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7380  00152A  2ADE               	incf	postinc2,f,c
  7381  00152C  0E00               	movlw	0
  7382  00152E  22DD               	addwfc	postdec2,f,c
  7383  001530                     i1l4622:
  7384  001530  0ED0               	movlw	208
  7385  001532  6E46               	movwf	??i1_vfpfcnvrt^0,c
  7386  001534  0EFF               	movlw	255
  7387  001536  6E47               	movwf	(??i1_vfpfcnvrt+1)^0,c
  7388  001538  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7389  00153C  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7390  001540  CFDE FFF6          	movff	postinc2,tblptrl
  7391  001544  CFDD FFF7          	movff	postdec2,tblptrh
  7392  001548                     	if	0	;tblptru may be non-zero
  7393  001548                     	endif
  7394  001548                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7395  001548  0E00               	movlw	low (__mediumconst shr (0+16))
  7396  00154A  6EF8               	movwf	tblptru,c
  7397  00154C                     	endif
  7398  00154C  0008               	tblrd		*
  7399  00154E  50F5               	movf	tablat,w,c
  7400  001550  6E48               	movwf	(??i1_vfpfcnvrt+2)^0,c
  7401  001552  6A49               	clrf	(??i1_vfpfcnvrt+3)^0,c
  7402  001554  5046               	movf	??i1_vfpfcnvrt^0,w,c
  7403  001556  2648               	addwf	(??i1_vfpfcnvrt+2)^0,f,c
  7404  001558  5047               	movf	(??i1_vfpfcnvrt+1)^0,w,c
  7405  00155A  2249               	addwfc	(??i1_vfpfcnvrt+3)^0,f,c
  7406  00155C  5049               	movf	(??i1_vfpfcnvrt+3)^0,w,c
  7407  00155E  E10A               	bnz	i1u533_20
  7408  001560  0E0A               	movlw	10
  7409  001562  5C48               	subwf	(??i1_vfpfcnvrt+2)^0,w,c
  7410  001564  A0D8               	btfss	status,0,c
  7411  001566  EFB7  F00A         	goto	i1u533_21
  7412  00156A  EFBA  F00A         	goto	i1u533_20
  7413  00156E                     i1u533_21:
  7414  00156E  0E01               	movlw	1
  7415  001570  EFBB  F00A         	goto	i1u534_20
  7416  001574                     i1u533_20:
  7417  001574  0E00               	movlw	0
  7418  001576                     i1u534_20:
  7419  001576  6E56               	movwf	i1_vfpfcnvrt$1887^0,c
  7420  001578  6A57               	clrf	(i1_vfpfcnvrt$1887+1)^0,c
  7421  00157A  5056               	movf	i1_vfpfcnvrt$1887^0,w,c
  7422  00157C  1057               	iorwf	(i1_vfpfcnvrt$1887+1)^0,w,c
  7423  00157E  A4D8               	btfss	status,2,c
  7424  001580  EFC4  F00A         	goto	i1u535_21
  7425  001584  EFC6  F00A         	goto	i1u535_20
  7426  001588                     i1u535_21:
  7427  001588  EF91  F00A         	goto	i1l4620
  7428  00158C                     i1u535_20:
  7429  00158C                     i1l4628:
  7430                           
  7431                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7432  00158C  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7433  001590  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7434  001594  CFDE FFF6          	movff	postinc2,tblptrl
  7435  001598  CFDD FFF7          	movff	postdec2,tblptrh
  7436  00159C                     	if	0	;tblptru may be non-zero
  7437  00159C                     	endif
  7438  00159C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7439  00159C  0E00               	movlw	low (__mediumconst shr (0+16))
  7440  00159E  6EF8               	movwf	tblptru,c
  7441  0015A0                     	endif
  7442  0015A0  0008               	tblrd		*
  7443  0015A2  50F5               	movf	tablat,w,c
  7444  0015A4  0A64               	xorlw	100
  7445  0015A6  B4D8               	btfsc	status,2,c
  7446  0015A8  EFD8  F00A         	goto	i1u536_21
  7447  0015AC  EFDA  F00A         	goto	i1u536_20
  7448  0015B0                     i1u536_21:
  7449  0015B0  EFEE  F00A         	goto	i1l4632
  7450  0015B4                     i1u536_20:
  7451  0015B4  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7452  0015B8  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7453  0015BC  CFDE FFF6          	movff	postinc2,tblptrl
  7454  0015C0  CFDD FFF7          	movff	postdec2,tblptrh
  7455  0015C4                     	if	0	;tblptru may be non-zero
  7456  0015C4                     	endif
  7457  0015C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7458  0015C4  0E00               	movlw	low (__mediumconst shr (0+16))
  7459  0015C6  6EF8               	movwf	tblptru,c
  7460  0015C8                     	endif
  7461  0015C8  0008               	tblrd		*
  7462  0015CA  50F5               	movf	tablat,w,c
  7463  0015CC  0A69               	xorlw	105
  7464  0015CE  A4D8               	btfss	status,2,c
  7465  0015D0  EFEC  F00A         	goto	i1u537_21
  7466  0015D4  EFEE  F00A         	goto	i1u537_20
  7467  0015D8                     i1u537_21:
  7468  0015D8  EF2E  F00B         	goto	i1l4638
  7469  0015DC                     i1u537_20:
  7470  0015DC                     i1l4632:
  7471                           
  7472                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  7473  0015DC  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7474  0015E0  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7475  0015E4  2ADE               	incf	postinc2,f,c
  7476  0015E6  0E00               	movlw	0
  7477  0015E8  22DD               	addwfc	postdec2,f,c
  7478                           
  7479                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7480  0015EA  C044  FFD9         	movff	i1vfpfcnvrt@ap,fsr2l
  7481  0015EE  C045  FFDA         	movff	i1vfpfcnvrt@ap+1,fsr2h
  7482  0015F2  CFDF F046          	movff	indf2,??i1_vfpfcnvrt
  7483  0015F6  0E02               	movlw	2
  7484  0015F8  26DE               	addwf	postinc2,f,c
  7485  0015FA  CFDF F047          	movff	indf2,??i1_vfpfcnvrt+1
  7486  0015FE  0E00               	movlw	0
  7487  001600  22DD               	addwfc	postdec2,f,c
  7488  001602  C046  FFD9         	movff	??i1_vfpfcnvrt,fsr2l
  7489  001606  C047  FFDA         	movff	??i1_vfpfcnvrt+1,fsr2h
  7490  00160A  CFDE F04A          	movff	postinc2,i1vfpfcnvrt@ll
  7491  00160E  CFDD F04B          	movff	postdec2,i1vfpfcnvrt@ll+1
  7492  001612  0E00               	movlw	0
  7493  001614  BE4B               	btfsc	(i1vfpfcnvrt@ll+1)^0,7,c
  7494  001616  0EFF               	movlw	-1
  7495  001618  6E4C               	movwf	(i1vfpfcnvrt@ll+2)^0,c
  7496  00161A  6E4D               	movwf	(i1vfpfcnvrt@ll+3)^0,c
  7497  00161C  6E4E               	movwf	(i1vfpfcnvrt@ll+4)^0,c
  7498  00161E  6E4F               	movwf	(i1vfpfcnvrt@ll+5)^0,c
  7499  001620  6E50               	movwf	(i1vfpfcnvrt@ll+6)^0,c
  7500  001622  6E51               	movwf	(i1vfpfcnvrt@ll+7)^0,c
  7501  001624                     
  7502                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  7503  001624  C040  F01C         	movff	i1vfpfcnvrt@fp,i1dtoa@fp
  7504  001628  C041  F01D         	movff	i1vfpfcnvrt@fp+1,i1dtoa@fp+1
  7505  00162C  C04A  F01E         	movff	i1vfpfcnvrt@ll,i1dtoa@d
  7506  001630  C04B  F01F         	movff	i1vfpfcnvrt@ll+1,i1dtoa@d+1
  7507  001634  C04C  F020         	movff	i1vfpfcnvrt@ll+2,i1dtoa@d+2
  7508  001638  C04D  F021         	movff	i1vfpfcnvrt@ll+3,i1dtoa@d+3
  7509  00163C  C04E  F022         	movff	i1vfpfcnvrt@ll+4,i1dtoa@d+4
  7510  001640  C04F  F023         	movff	i1vfpfcnvrt@ll+5,i1dtoa@d+5
  7511  001644  C050  F024         	movff	i1vfpfcnvrt@ll+6,i1dtoa@d+6
  7512  001648  C051  F025         	movff	i1vfpfcnvrt@ll+7,i1dtoa@d+7
  7513  00164C  EC3C  F00F         	call	i1_dtoa	;wreg free
  7514  001650  C01C  F040         	movff	?i1_dtoa,?i1_vfpfcnvrt
  7515  001654  C01D  F041         	movff	?i1_dtoa+1,?i1_vfpfcnvrt+1
  7516  001658  EFC2  F00B         	goto	i1l1038
  7517  00165C                     i1l4638:
  7518                           
  7519                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1171:         if 
      +                          (*fmt[0] == 's') {
  7520  00165C  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7521  001660  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7522  001664  CFDE FFF6          	movff	postinc2,tblptrl
  7523  001668  CFDD FFF7          	movff	postdec2,tblptrh
  7524  00166C                     	if	0	;tblptru may be non-zero
  7525  00166C                     	endif
  7526  00166C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7527  00166C  0E00               	movlw	low (__mediumconst shr (0+16))
  7528  00166E  6EF8               	movwf	tblptru,c
  7529  001670                     	endif
  7530  001670  0008               	tblrd		*
  7531  001672  50F5               	movf	tablat,w,c
  7532  001674  0A73               	xorlw	115
  7533  001676  A4D8               	btfss	status,2,c
  7534  001678  EF40  F00B         	goto	i1u538_21
  7535  00167C  EF42  F00B         	goto	i1u538_20
  7536  001680                     i1u538_21:
  7537  001680  EF6D  F00B         	goto	i1l4646
  7538  001684                     i1u538_20:
  7539  001684                     
  7540                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1173:            
      +                           ++*fmt;
  7541  001684  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7542  001688  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7543  00168C  2ADE               	incf	postinc2,f,c
  7544  00168E  0E00               	movlw	0
  7545  001690  22DD               	addwfc	postdec2,f,c
  7546                           
  7547                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1174:            
      +                           cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  7548  001692  C044  FFD9         	movff	i1vfpfcnvrt@ap,fsr2l
  7549  001696  C045  FFDA         	movff	i1vfpfcnvrt@ap+1,fsr2h
  7550  00169A  CFDF F046          	movff	indf2,??i1_vfpfcnvrt
  7551  00169E  0E02               	movlw	2
  7552  0016A0  26DE               	addwf	postinc2,f,c
  7553  0016A2  CFDF F047          	movff	indf2,??i1_vfpfcnvrt+1
  7554  0016A6  0E00               	movlw	0
  7555  0016A8  22DD               	addwfc	postdec2,f,c
  7556  0016AA  C046  FFD9         	movff	??i1_vfpfcnvrt,fsr2l
  7557  0016AE  C047  FFDA         	movff	??i1_vfpfcnvrt+1,fsr2h
  7558  0016B2  CFDE F052          	movff	postinc2,i1vfpfcnvrt@cp
  7559  0016B6  CFDD F053          	movff	postdec2,i1vfpfcnvrt@cp+1
  7560  0016BA                     
  7561                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1176:            
      +                           return stoa(fp, cp);
  7562  0016BA  C040  F00A         	movff	i1vfpfcnvrt@fp,i1stoa@fp
  7563  0016BE  C041  F00B         	movff	i1vfpfcnvrt@fp+1,i1stoa@fp+1
  7564  0016C2  C052  F00C         	movff	i1vfpfcnvrt@cp,i1stoa@s
  7565  0016C6  C053  F00D         	movff	i1vfpfcnvrt@cp+1,i1stoa@s+1
  7566  0016CA  EC88  F015         	call	i1_stoa	;wreg free
  7567  0016CE  C00A  F040         	movff	?i1_stoa,?i1_vfpfcnvrt
  7568  0016D2  C00B  F041         	movff	?i1_stoa+1,?i1_vfpfcnvrt+1
  7569  0016D6  EFC2  F00B         	goto	i1l1038
  7570  0016DA                     i1l4646:
  7571                           
  7572                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  7573  0016DA  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7574  0016DE  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7575  0016E2  CFDE FFF6          	movff	postinc2,tblptrl
  7576  0016E6  CFDD FFF7          	movff	postdec2,tblptrh
  7577  0016EA                     	if	0	;tblptru may be non-zero
  7578  0016EA                     	endif
  7579  0016EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7580  0016EA  0E00               	movlw	low (__mediumconst shr (0+16))
  7581  0016EC  6EF8               	movwf	tblptru,c
  7582  0016EE                     	endif
  7583  0016EE  0008               	tblrd		*
  7584  0016F0  50F5               	movf	tablat,w,c
  7585  0016F2  0A25               	xorlw	37
  7586  0016F4  A4D8               	btfss	status,2,c
  7587  0016F6  EF7F  F00B         	goto	i1u539_21
  7588  0016FA  EF81  F00B         	goto	i1u539_20
  7589  0016FE                     i1u539_21:
  7590  0016FE  EF98  F00B         	goto	i1l4656
  7591  001702                     i1u539_20:
  7592  001702                     
  7593                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  7594  001702  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7595  001706  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7596  00170A  2ADE               	incf	postinc2,f,c
  7597  00170C  0E00               	movlw	0
  7598  00170E  22DD               	addwfc	postdec2,f,c
  7599  001710                     
  7600                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  7601  001710  0E00               	movlw	0
  7602  001712  6E02               	movwf	(i1fputc@c+1)^0,c
  7603  001714  0E25               	movlw	37
  7604  001716  6E01               	movwf	i1fputc@c^0,c
  7605  001718  C040  F003         	movff	i1vfpfcnvrt@fp,i1fputc@fp
  7606  00171C  C041  F004         	movff	i1vfpfcnvrt@fp+1,i1fputc@fp+1
  7607  001720  ECE0  F018         	call	i1_fputc	;wreg free
  7608  001724                     i1l4652:
  7609                           
  7610                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  7611  001724  0E00               	movlw	0
  7612  001726  6E41               	movwf	(?i1_vfpfcnvrt+1)^0,c
  7613  001728  0E01               	movlw	1
  7614  00172A  6E40               	movwf	?i1_vfpfcnvrt^0,c
  7615  00172C  EFC2  F00B         	goto	i1l1038
  7616  001730                     i1l4656:
  7617                           
  7618                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  7619  001730  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7620  001734  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7621  001738  2ADE               	incf	postinc2,f,c
  7622  00173A  0E00               	movlw	0
  7623  00173C  22DD               	addwfc	postdec2,f,c
  7624  00173E                     
  7625                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  7626  00173E  0E00               	movlw	0
  7627  001740  6E41               	movwf	(?i1_vfpfcnvrt+1)^0,c
  7628  001742  0E00               	movlw	0
  7629  001744  6E40               	movwf	?i1_vfpfcnvrt^0,c
  7630  001746  EFC2  F00B         	goto	i1l1038
  7631  00174A                     i1l4662:
  7632                           
  7633                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  7634  00174A  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7635  00174E  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7636  001752  CFDE FFF6          	movff	postinc2,tblptrl
  7637  001756  CFDD FFF7          	movff	postdec2,tblptrh
  7638  00175A                     	if	0	;tblptru may be non-zero
  7639  00175A                     	endif
  7640  00175A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7641  00175A  0E00               	movlw	low (__mediumconst shr (0+16))
  7642  00175C  6EF8               	movwf	tblptru,c
  7643  00175E                     	endif
  7644  00175E  0008               	tblrd		*
  7645  001760  50F5               	movf	tablat,w,c
  7646  001762  6E01               	movwf	i1fputc@c^0,c
  7647  001764  6A02               	clrf	(i1fputc@c+1)^0,c
  7648  001766  C040  F003         	movff	i1vfpfcnvrt@fp,i1fputc@fp
  7649  00176A  C041  F004         	movff	i1vfpfcnvrt@fp+1,i1fputc@fp+1
  7650  00176E  ECE0  F018         	call	i1_fputc	;wreg free
  7651  001772                     
  7652                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  7653  001772  C042  FFD9         	movff	i1vfpfcnvrt@fmt,fsr2l
  7654  001776  C043  FFDA         	movff	i1vfpfcnvrt@fmt+1,fsr2h
  7655  00177A  2ADE               	incf	postinc2,f,c
  7656  00177C  0E00               	movlw	0
  7657  00177E  22DD               	addwfc	postdec2,f,c
  7658  001780  EF92  F00B         	goto	i1l4652
  7659  001784                     i1l1038:
  7660  001784  0012               	return		;funcret
  7661  001786                     __end_ofi1_vfpfcnvrt:
  7662                           	callstack 0
  7663                           
  7664 ;; *************** function i1_stoa *****************
  7665 ;; Defined at:
  7666 ;;		line 568 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  7667 ;; Parameters:    Size  Location     Type
  7668 ;;  fp              2    9[COMRAM] PTR struct _IO_FILE
  7669 ;;		 -> NULL(0), sprintf@f(6), 
  7670 ;;  s               2   11[COMRAM] PTR unsigned char 
  7671 ;;		 -> ?_printf(2), ?_sprintf(2), time_now@daylist(70), 
  7672 ;; Auto vars:     Size  Location     Type
  7673 ;;  nuls            7   14[COMRAM] unsigned char [7]
  7674 ;;  l               2   29[COMRAM] int 
  7675 ;;  p               2   27[COMRAM] int 
  7676 ;;  cp              2   25[COMRAM] PTR unsigned char 
  7677 ;;		 -> i1stoa@nuls(7), ?_printf(2), stoa@nuls(7), ?_sprintf(2), 
  7678 ;;		 -> time_now@daylist(70), 
  7679 ;;  w               2   23[COMRAM] int 
  7680 ;;  i               2   21[COMRAM] int 
  7681 ;; Return value:  Size  Location     Type
  7682 ;;                  2    9[COMRAM] int 
  7683 ;; Registers used:
  7684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7685 ;; Tracked objects:
  7686 ;;		On entry : 0/0
  7687 ;;		On exit  : 0/0
  7688 ;;		Unchanged: 0/0
  7689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7690 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7691 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7692 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7693 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7694 ;;Total ram usage:       22 bytes
  7695 ;; Hardware stack levels used:    1
  7696 ;; Hardware stack levels required when called:    3
  7697 ;; This function calls:
  7698 ;;		i1_fputc
  7699 ;;		i1_strlen
  7700 ;; This function is called by:
  7701 ;;		i1_vfpfcnvrt
  7702 ;; This function uses a non-reentrant model
  7703 ;;
  7704                           
  7705                           	psect	text37
  7706  002B10                     __ptext37:
  7707                           	callstack 0
  7708  002B10                     i1_stoa:
  7709                           	callstack 14
  7710  002B10                     
  7711                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 568: static int s
      +                          toa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 569: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 570:  
      +                             char *cp, nuls[] = "(null)";
  7712  002B10  EE20  F0E3         	lfsr	2,stoa@F1141
  7713  002B14  EE10  F00F         	lfsr	1,i1stoa@nuls
  7714  002B18  0E06               	movlw	6
  7715  002B1A                     i1u507_21:
  7716  002B1A  CFDB FFE3          	movff	plusw2,plusw1
  7717  002B1E  06E8               	decf	wreg,f,c
  7718  002B20  E2FC               	bc	i1u507_21
  7719  002B22                     
  7720                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 571:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 574:     c
      +                          p = s;
  7721  002B22  C00C  F01A         	movff	i1stoa@s,i1stoa@cp
  7722  002B26  C00D  F01B         	movff	i1stoa@s+1,i1stoa@cp+1
  7723  002B2A                     
  7724                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 575:     if (!cp)
      +                           {
  7725  002B2A  501A               	movf	i1stoa@cp^0,w,c
  7726  002B2C  101B               	iorwf	(i1stoa@cp+1)^0,w,c
  7727  002B2E  A4D8               	btfss	status,2,c
  7728  002B30  EF9C  F015         	goto	i1u508_21
  7729  002B34  EF9E  F015         	goto	i1u508_20
  7730  002B38                     i1u508_21:
  7731  002B38  EFA2  F015         	goto	i1l4466
  7732  002B3C                     i1u508_20:
  7733  002B3C                     
  7734                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 576:         cp =
      +                           nuls;
  7735  002B3C  0E0F               	movlw	low i1stoa@nuls
  7736  002B3E  6E1A               	movwf	i1stoa@cp^0,c
  7737  002B40  0E00               	movlw	high i1stoa@nuls
  7738  002B42  6E1B               	movwf	(i1stoa@cp+1)^0,c
  7739  002B44                     i1l4466:
  7740                           
  7741                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 580:     l = (int
      +                          )strlen(cp);
  7742  002B44  C01A  F001         	movff	i1stoa@cp,i1strlen@s
  7743  002B48  C01B  F002         	movff	i1stoa@cp+1,i1strlen@s+1
  7744  002B4C  EC28  F01D         	call	i1_strlen	;wreg free
  7745  002B50  C001  F01E         	movff	?i1_strlen,i1stoa@l
  7746  002B54  C002  F01F         	movff	?i1_strlen+1,i1stoa@l+1
  7747  002B58                     
  7748                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 581:     p = prec
      +                          ;
  7749  002B58  C0DE  F01C         	movff	_prec,i1stoa@p
  7750  002B5C  C0DF  F01D         	movff	_prec+1,i1stoa@p+1
  7751  002B60                     
  7752                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 582:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  7753  002B60  BE1D               	btfsc	(i1stoa@p+1)^0,7,c
  7754  002B62  EFB5  F015         	goto	i1u509_21
  7755  002B66  EFB7  F015         	goto	i1u509_20
  7756  002B6A                     i1u509_21:
  7757  002B6A  EFCC  F015         	goto	i1l995
  7758  002B6E                     i1u509_20:
  7759  002B6E  501E               	movf	i1stoa@l^0,w,c
  7760  002B70  5C1C               	subwf	i1stoa@p^0,w,c
  7761  002B72  501D               	movf	(i1stoa@p+1)^0,w,c
  7762  002B74  0A80               	xorlw	128
  7763  002B76  6E0E               	movwf	??i1_stoa^0,c
  7764  002B78  501F               	movf	(i1stoa@l+1)^0,w,c
  7765  002B7A  0A80               	xorlw	128
  7766  002B7C  580E               	subwfb	??i1_stoa^0,w,c
  7767  002B7E  A0D8               	btfss	status,0,c
  7768  002B80  EFC4  F015         	goto	i1u510_21
  7769  002B84  EFC6  F015         	goto	i1u510_20
  7770  002B88                     i1u510_21:
  7771  002B88  EFC8  F015         	goto	i1l993
  7772  002B8C                     i1u510_20:
  7773  002B8C  EFCC  F015         	goto	i1l995
  7774  002B90                     i1l993:
  7775  002B90  C01C  F01E         	movff	i1stoa@p,i1stoa@l
  7776  002B94  C01D  F01F         	movff	i1stoa@p+1,i1stoa@l+1
  7777  002B98                     i1l995:
  7778                           
  7779                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 583:     p = l;
  7780  002B98  C01E  F01C         	movff	i1stoa@l,i1stoa@p
  7781  002B9C  C01F  F01D         	movff	i1stoa@l+1,i1stoa@p+1
  7782                           
  7783                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 584:     w = widt
      +                          h;
  7784  002BA0  C0DC  F018         	movff	_width,i1stoa@w
  7785  002BA4  C0DD  F019         	movff	_width+1,i1stoa@w+1
  7786                           
  7787                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 587:     if (!(fl
      +                          ags & (1 << 0))) {
  7788  002BA8  0100               	movlb	0	; () banked
  7789  002BAA  B1E0               	btfsc	_flags& (0+255),0,b
  7790  002BAC  EFDA  F015         	goto	i1u511_21
  7791  002BB0  EFDC  F015         	goto	i1u511_20
  7792  002BB4                     i1u511_21:
  7793  002BB4  EFF9  F015         	goto	i1l4482
  7794  002BB8                     i1u511_20:
  7795  002BB8  EFEA  F015         	goto	i1l4480
  7796  002BBC                     i1l4476:
  7797                           
  7798                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 589:             
      +                          fputc(' ', fp);
  7799  002BBC  0E00               	movlw	0
  7800  002BBE  6E02               	movwf	(i1fputc@c+1)^0,c
  7801  002BC0  0E20               	movlw	32
  7802  002BC2  6E01               	movwf	i1fputc@c^0,c
  7803  002BC4  C00A  F003         	movff	i1stoa@fp,i1fputc@fp
  7804  002BC8  C00B  F004         	movff	i1stoa@fp+1,i1fputc@fp+1
  7805  002BCC  ECE0  F018         	call	i1_fputc	;wreg free
  7806  002BD0                     
  7807                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 590:             
      +                          ++l;
  7808  002BD0  4A1E               	infsnz	i1stoa@l^0,f,c
  7809  002BD2  2A1F               	incf	(i1stoa@l+1)^0,f,c
  7810  002BD4                     i1l4480:
  7811                           
  7812                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 588:         whil
      +                          e (l < w) {
  7813  002BD4  5018               	movf	i1stoa@w^0,w,c
  7814  002BD6  5C1E               	subwf	i1stoa@l^0,w,c
  7815  002BD8  501F               	movf	(i1stoa@l+1)^0,w,c
  7816  002BDA  0A80               	xorlw	128
  7817  002BDC  6E0E               	movwf	??i1_stoa^0,c
  7818  002BDE  5019               	movf	(i1stoa@w+1)^0,w,c
  7819  002BE0  0A80               	xorlw	128
  7820  002BE2  580E               	subwfb	??i1_stoa^0,w,c
  7821  002BE4  A0D8               	btfss	status,0,c
  7822  002BE6  EFF7  F015         	goto	i1u512_21
  7823  002BEA  EFF9  F015         	goto	i1u512_20
  7824  002BEE                     i1u512_21:
  7825  002BEE  EFDE  F015         	goto	i1l4476
  7826  002BF2                     i1u512_20:
  7827  002BF2                     i1l4482:
  7828                           
  7829                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 595:     i = 0;
  7830  002BF2  0E00               	movlw	0
  7831  002BF4  6E17               	movwf	(i1stoa@i+1)^0,c
  7832  002BF6  0E00               	movlw	0
  7833  002BF8  6E16               	movwf	i1stoa@i^0,c
  7834                           
  7835                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  7836  002BFA  EF12  F016         	goto	i1l4490
  7837  002BFE                     i1l4484:
  7838                           
  7839                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 597:         fput
      +                          c(*cp, fp);
  7840  002BFE  C01A  FFD9         	movff	i1stoa@cp,fsr2l
  7841  002C02  C01B  FFDA         	movff	i1stoa@cp+1,fsr2h
  7842  002C06  50DF               	movf	indf2,w,c
  7843  002C08  6E0E               	movwf	??i1_stoa^0,c
  7844  002C0A  500E               	movf	??i1_stoa^0,w,c
  7845  002C0C  6E01               	movwf	i1fputc@c^0,c
  7846  002C0E  6A02               	clrf	(i1fputc@c+1)^0,c
  7847  002C10  C00A  F003         	movff	i1stoa@fp,i1fputc@fp
  7848  002C14  C00B  F004         	movff	i1stoa@fp+1,i1fputc@fp+1
  7849  002C18  ECE0  F018         	call	i1_fputc	;wreg free
  7850  002C1C                     
  7851                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 598:         ++cp
      +                          ;
  7852  002C1C  4A1A               	infsnz	i1stoa@cp^0,f,c
  7853  002C1E  2A1B               	incf	(i1stoa@cp+1)^0,f,c
  7854  002C20                     
  7855                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 599:         ++i;
  7856  002C20  4A16               	infsnz	i1stoa@i^0,f,c
  7857  002C22  2A17               	incf	(i1stoa@i+1)^0,f,c
  7858  002C24                     i1l4490:
  7859                           
  7860                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 596:     while (i
      +                           < p) {
  7861  002C24  501C               	movf	i1stoa@p^0,w,c
  7862  002C26  5C16               	subwf	i1stoa@i^0,w,c
  7863  002C28  5017               	movf	(i1stoa@i+1)^0,w,c
  7864  002C2A  0A80               	xorlw	128
  7865  002C2C  6E0E               	movwf	??i1_stoa^0,c
  7866  002C2E  501D               	movf	(i1stoa@p+1)^0,w,c
  7867  002C30  0A80               	xorlw	128
  7868  002C32  580E               	subwfb	??i1_stoa^0,w,c
  7869  002C34  A0D8               	btfss	status,0,c
  7870  002C36  EF1F  F016         	goto	i1u513_21
  7871  002C3A  EF21  F016         	goto	i1u513_20
  7872  002C3E                     i1u513_21:
  7873  002C3E  EFFF  F015         	goto	i1l4484
  7874  002C42                     i1u513_20:
  7875  002C42                     
  7876                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 603:     if (flag
      +                          s & (1 << 0)) {
  7877  002C42  0100               	movlb	0	; () banked
  7878  002C44  A1E0               	btfss	_flags& (0+255),0,b
  7879  002C46  EF27  F016         	goto	i1u514_21
  7880  002C4A  EF29  F016         	goto	i1u514_20
  7881  002C4E                     i1u514_21:
  7882  002C4E  EF46  F016         	goto	i1l1005
  7883  002C52                     i1u514_20:
  7884  002C52  EF37  F016         	goto	i1l4498
  7885  002C56                     i1l4494:
  7886                           
  7887                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 605:             
      +                          fputc(' ', fp);
  7888  002C56  0E00               	movlw	0
  7889  002C58  6E02               	movwf	(i1fputc@c+1)^0,c
  7890  002C5A  0E20               	movlw	32
  7891  002C5C  6E01               	movwf	i1fputc@c^0,c
  7892  002C5E  C00A  F003         	movff	i1stoa@fp,i1fputc@fp
  7893  002C62  C00B  F004         	movff	i1stoa@fp+1,i1fputc@fp+1
  7894  002C66  ECE0  F018         	call	i1_fputc	;wreg free
  7895  002C6A                     
  7896                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 606:             
      +                          ++l;
  7897  002C6A  4A1E               	infsnz	i1stoa@l^0,f,c
  7898  002C6C  2A1F               	incf	(i1stoa@l+1)^0,f,c
  7899  002C6E                     i1l4498:
  7900                           
  7901                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 604:         whil
      +                          e (l < w) {
  7902  002C6E  5018               	movf	i1stoa@w^0,w,c
  7903  002C70  5C1E               	subwf	i1stoa@l^0,w,c
  7904  002C72  501F               	movf	(i1stoa@l+1)^0,w,c
  7905  002C74  0A80               	xorlw	128
  7906  002C76  6E0E               	movwf	??i1_stoa^0,c
  7907  002C78  5019               	movf	(i1stoa@w+1)^0,w,c
  7908  002C7A  0A80               	xorlw	128
  7909  002C7C  580E               	subwfb	??i1_stoa^0,w,c
  7910  002C7E  A0D8               	btfss	status,0,c
  7911  002C80  EF44  F016         	goto	i1u515_21
  7912  002C84  EF46  F016         	goto	i1u515_20
  7913  002C88                     i1u515_21:
  7914  002C88  EF2B  F016         	goto	i1l4494
  7915  002C8C                     i1u515_20:
  7916  002C8C                     i1l1005:
  7917                           
  7918                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 610:     return l
      +                          ;
  7919  002C8C  C01E  F00A         	movff	i1stoa@l,?i1_stoa
  7920  002C90  C01F  F00B         	movff	i1stoa@l+1,?i1_stoa+1
  7921  002C94  0012               	return		;funcret
  7922  002C96                     __end_ofi1_stoa:
  7923                           	callstack 0
  7924                           
  7925 ;; *************** function i1_dtoa *****************
  7926 ;; Defined at:
  7927 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  7928 ;; Parameters:    Size  Location     Type
  7929 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7930 ;;		 -> NULL(0), sprintf@f(6), 
  7931 ;;  d               8   29[COMRAM] long long 
  7932 ;; Auto vars:     Size  Location     Type
  7933 ;;  n               8   53[COMRAM] long long 
  7934 ;;  i               2   61[COMRAM] int 
  7935 ;;  s               2   51[COMRAM] int 
  7936 ;;  w               2   49[COMRAM] int 
  7937 ;;  p               2   47[COMRAM] int 
  7938 ;; Return value:  Size  Location     Type
  7939 ;;                  2   27[COMRAM] int 
  7940 ;; Registers used:
  7941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7942 ;; Tracked objects:
  7943 ;;		On entry : 0/0
  7944 ;;		On exit  : 0/0
  7945 ;;		Unchanged: 0/0
  7946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7947 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7948 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7949 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7950 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7951 ;;Total ram usage:       36 bytes
  7952 ;; Hardware stack levels used:    1
  7953 ;; Hardware stack levels required when called:    5
  7954 ;; This function calls:
  7955 ;;		i1___aodiv
  7956 ;;		i1___aomod
  7957 ;;		i1_abs
  7958 ;;		i1_pad
  7959 ;; This function is called by:
  7960 ;;		i1_vfpfcnvrt
  7961 ;; This function uses a non-reentrant model
  7962 ;;
  7963                           
  7964                           	psect	text38
  7965  001E78                     __ptext38:
  7966                           	callstack 0
  7967  001E78                     i1_dtoa:
  7968                           	callstack 12
  7969  001E78                     
  7970                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7971  001E78  C01E  F036         	movff	i1dtoa@d,i1dtoa@n
  7972  001E7C  C01F  F037         	movff	i1dtoa@d+1,i1dtoa@n+1
  7973  001E80  C020  F038         	movff	i1dtoa@d+2,i1dtoa@n+2
  7974  001E84  C021  F039         	movff	i1dtoa@d+3,i1dtoa@n+3
  7975  001E88  C022  F03A         	movff	i1dtoa@d+4,i1dtoa@n+4
  7976  001E8C  C023  F03B         	movff	i1dtoa@d+5,i1dtoa@n+5
  7977  001E90  C024  F03C         	movff	i1dtoa@d+6,i1dtoa@n+6
  7978  001E94  C025  F03D         	movff	i1dtoa@d+7,i1dtoa@n+7
  7979  001E98                     
  7980                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7981  001E98  BE3D               	btfsc	(i1dtoa@n+7)^0,7,c
  7982  001E9A  EF51  F00F         	goto	i1u492_21
  7983  001E9E  EF54  F00F         	goto	i1u492_20
  7984  001EA2                     i1u492_21:
  7985  001EA2  0E01               	movlw	1
  7986  001EA4  EF55  F00F         	goto	i1u493_20
  7987  001EA8                     i1u492_20:
  7988  001EA8  0E00               	movlw	0
  7989  001EAA                     i1u493_20:
  7990  001EAA  6E34               	movwf	i1dtoa@s^0,c
  7991  001EAC  6A35               	clrf	(i1dtoa@s+1)^0,c
  7992                           
  7993                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7994  001EAE  5034               	movf	i1dtoa@s^0,w,c
  7995  001EB0  1035               	iorwf	(i1dtoa@s+1)^0,w,c
  7996  001EB2  B4D8               	btfsc	status,2,c
  7997  001EB4  EF5E  F00F         	goto	i1u494_21
  7998  001EB8  EF60  F00F         	goto	i1u494_20
  7999  001EBC                     i1u494_21:
  8000  001EBC  EF70  F00F         	goto	i1l4402
  8001  001EC0                     i1u494_20:
  8002  001EC0                     
  8003                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  8004  001EC0  1E3D               	comf	(i1dtoa@n+7)^0,f,c
  8005  001EC2  1E3C               	comf	(i1dtoa@n+6)^0,f,c
  8006  001EC4  1E3B               	comf	(i1dtoa@n+5)^0,f,c
  8007  001EC6  1E3A               	comf	(i1dtoa@n+4)^0,f,c
  8008  001EC8  1E39               	comf	(i1dtoa@n+3)^0,f,c
  8009  001ECA  1E38               	comf	(i1dtoa@n+2)^0,f,c
  8010  001ECC  1E37               	comf	(i1dtoa@n+1)^0,f,c
  8011  001ECE  6C36               	negf	i1dtoa@n^0,c
  8012  001ED0  0E00               	movlw	0
  8013  001ED2  2237               	addwfc	(i1dtoa@n+1)^0,f,c
  8014  001ED4  2238               	addwfc	(i1dtoa@n+2)^0,f,c
  8015  001ED6  2239               	addwfc	(i1dtoa@n+3)^0,f,c
  8016  001ED8  223A               	addwfc	(i1dtoa@n+4)^0,f,c
  8017  001EDA  223B               	addwfc	(i1dtoa@n+5)^0,f,c
  8018  001EDC  223C               	addwfc	(i1dtoa@n+6)^0,f,c
  8019  001EDE  223D               	addwfc	(i1dtoa@n+7)^0,f,c
  8020  001EE0                     i1l4402:
  8021                           
  8022                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  8023  001EE0  0100               	movlb	0	; () banked
  8024  001EE2  BFDF               	btfsc	(_prec+1)& (0+255),7,b
  8025  001EE4  EF76  F00F         	goto	i1u495_21
  8026  001EE8  EF78  F00F         	goto	i1u495_20
  8027  001EEC                     i1u495_21:
  8028  001EEC  EF79  F00F         	goto	i1l4406
  8029  001EF0                     i1u495_20:
  8030  001EF0                     
  8031                           ; BSR set to: 0
  8032                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  8033  001EF0  93E0               	bcf	_flags& (0+255),1,b
  8034  001EF2                     i1l4406:
  8035                           
  8036                           ; BSR set to: 0
  8037                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  8038  001EF2  BFDF               	btfsc	(_prec+1)& (0+255),7,b
  8039  001EF4  EF86  F00F         	goto	i1u496_20
  8040  001EF8  51DF               	movf	(_prec+1)& (0+255),w,b
  8041  001EFA  E106               	bnz	i1u496_21
  8042  001EFC  05DE               	decf	_prec& (0+255),w,b
  8043  001EFE  B0D8               	btfsc	status,0,c
  8044  001F00  EF84  F00F         	goto	i1u496_21
  8045  001F04  EF86  F00F         	goto	i1u496_20
  8046  001F08                     i1u496_21:
  8047  001F08  EF8C  F00F         	goto	i1l966
  8048  001F0C                     i1u496_20:
  8049  001F0C                     
  8050                           ; BSR set to: 0
  8051  001F0C  0E00               	movlw	0
  8052  001F0E  6E31               	movwf	(i1dtoa@p+1)^0,c
  8053  001F10  0E01               	movlw	1
  8054  001F12  6E30               	movwf	i1dtoa@p^0,c
  8055  001F14  EF90  F00F         	goto	i1l968
  8056  001F18                     i1l966:
  8057                           
  8058                           ; BSR set to: 0
  8059  001F18  C0DE  F030         	movff	_prec,i1dtoa@p
  8060  001F1C  C0DF  F031         	movff	_prec+1,i1dtoa@p+1
  8061  001F20                     i1l968:
  8062                           
  8063                           ; BSR set to: 0
  8064                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  8065  001F20  C0DC  F032         	movff	_width,i1dtoa@w
  8066  001F24  C0DD  F033         	movff	_width+1,i1dtoa@w+1
  8067  001F28                     
  8068                           ; BSR set to: 0
  8069                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  8070  001F28  5034               	movf	i1dtoa@s^0,w,c
  8071  001F2A  1035               	iorwf	(i1dtoa@s+1)^0,w,c
  8072  001F2C  A4D8               	btfss	status,2,c
  8073  001F2E  EF9B  F00F         	goto	i1u497_21
  8074  001F32  EF9D  F00F         	goto	i1u497_20
  8075  001F36                     i1u497_21:
  8076  001F36  EFA4  F00F         	goto	i1l4414
  8077  001F3A                     i1u497_20:
  8078  001F3A                     
  8079                           ; BSR set to: 0
  8080  001F3A  A5E0               	btfss	_flags& (0+255),2,b
  8081  001F3C  EFA2  F00F         	goto	i1u498_21
  8082  001F40  EFA4  F00F         	goto	i1u498_20
  8083  001F44                     i1u498_21:
  8084  001F44  EFA7  F00F         	goto	i1l4416
  8085  001F48                     i1u498_20:
  8086  001F48                     i1l4414:
  8087                           
  8088                           ; BSR set to: 0
  8089                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  8090  001F48  0632               	decf	i1dtoa@w^0,f,c
  8091  001F4A  A0D8               	btfss	status,0,c
  8092  001F4C  0633               	decf	(i1dtoa@w+1)^0,f,c
  8093  001F4E                     i1l4416:
  8094                           
  8095                           ; BSR set to: 0
  8096                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  8097  001F4E  0E00               	movlw	0
  8098  001F50  6E3F               	movwf	(i1dtoa@i+1)^0,c
  8099  001F52  0E1F               	movlw	31
  8100  001F54  6E3E               	movwf	i1dtoa@i^0,c
  8101  001F56                     
  8102                           ; BSR set to: 0
  8103                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  8104  001F56  0E00               	movlw	0
  8105  001F58  0102               	movlb	2	; () banked
  8106  001F5A  6FE3               	movwf	(_dbuf+31)& (0+255),b
  8107                           
  8108                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8109  001F5C  EF2C  F010         	goto	i1l4430
  8110  001F60                     i1l4420:
  8111                           
  8112                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  8113  001F60  063E               	decf	i1dtoa@i^0,f,c
  8114  001F62  A0D8               	btfss	status,0,c
  8115  001F64  063F               	decf	(i1dtoa@i+1)^0,f,c
  8116  001F66                     
  8117                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  8118  001F66  0EC4               	movlw	low _dbuf
  8119  001F68  243E               	addwf	i1dtoa@i^0,w,c
  8120  001F6A  6ED9               	movwf	fsr2l,c
  8121  001F6C  0E02               	movlw	high _dbuf
  8122  001F6E  203F               	addwfc	(i1dtoa@i+1)^0,w,c
  8123  001F70  6EDA               	movwf	fsr2h,c
  8124  001F72  C036  F001         	movff	i1dtoa@n,i1___aomod@dividend
  8125  001F76  C037  F002         	movff	i1dtoa@n+1,i1___aomod@dividend+1
  8126  001F7A  C038  F003         	movff	i1dtoa@n+2,i1___aomod@dividend+2
  8127  001F7E  C039  F004         	movff	i1dtoa@n+3,i1___aomod@dividend+3
  8128  001F82  C03A  F005         	movff	i1dtoa@n+4,i1___aomod@dividend+4
  8129  001F86  C03B  F006         	movff	i1dtoa@n+5,i1___aomod@dividend+5
  8130  001F8A  C03C  F007         	movff	i1dtoa@n+6,i1___aomod@dividend+6
  8131  001F8E  C03D  F008         	movff	i1dtoa@n+7,i1___aomod@dividend+7
  8132  001F92  0E0A               	movlw	10
  8133  001F94  6E09               	movwf	i1___aomod@divisor^0,c
  8134  001F96  0E00               	movlw	0
  8135  001F98  6E0A               	movwf	(i1___aomod@divisor+1)^0,c
  8136  001F9A  0E00               	movlw	0
  8137  001F9C  6E0B               	movwf	(i1___aomod@divisor+2)^0,c
  8138  001F9E  0E00               	movlw	0
  8139  001FA0  6E0C               	movwf	(i1___aomod@divisor+3)^0,c
  8140  001FA2  0E00               	movlw	0
  8141  001FA4  6E0D               	movwf	(i1___aomod@divisor+4)^0,c
  8142  001FA6  0E00               	movlw	0
  8143  001FA8  6E0E               	movwf	(i1___aomod@divisor+5)^0,c
  8144  001FAA  0E00               	movlw	0
  8145  001FAC  6E0F               	movwf	(i1___aomod@divisor+6)^0,c
  8146  001FAE  0E00               	movlw	0
  8147  001FB0  6E10               	movwf	(i1___aomod@divisor+7)^0,c
  8148  001FB2  ECFE  F016         	call	i1___aomod	;wreg free
  8149  001FB6  C001  F026         	movff	?i1___aomod,??i1_dtoa
  8150  001FBA  C002  F027         	movff	?i1___aomod+1,??i1_dtoa+1
  8151  001FBE  C003  F028         	movff	?i1___aomod+2,??i1_dtoa+2
  8152  001FC2  C004  F029         	movff	?i1___aomod+3,??i1_dtoa+3
  8153  001FC6  C005  F02A         	movff	?i1___aomod+4,??i1_dtoa+4
  8154  001FCA  C006  F02B         	movff	?i1___aomod+5,??i1_dtoa+5
  8155  001FCE  C007  F02C         	movff	?i1___aomod+6,??i1_dtoa+6
  8156  001FD2  C008  F02D         	movff	?i1___aomod+7,??i1_dtoa+7
  8157  001FD6  C026  F013         	movff	??i1_dtoa,i1abs@a
  8158  001FDA  C028  F014         	movff	??i1_dtoa+2,i1abs@a+1
  8159  001FDE  EC78  F01C         	call	i1_abs	;wreg free
  8160  001FE2  5013               	movf	?i1_abs^0,w,c
  8161  001FE4  0F30               	addlw	48
  8162  001FE6  6EDF               	movwf	indf2,c
  8163  001FE8                     
  8164                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  8165  001FE8  0630               	decf	i1dtoa@p^0,f,c
  8166  001FEA  A0D8               	btfss	status,0,c
  8167  001FEC  0631               	decf	(i1dtoa@p+1)^0,f,c
  8168  001FEE                     
  8169                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  8170  001FEE  0632               	decf	i1dtoa@w^0,f,c
  8171  001FF0  A0D8               	btfss	status,0,c
  8172  001FF2  0633               	decf	(i1dtoa@w+1)^0,f,c
  8173  001FF4                     
  8174                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  8175  001FF4  C036  F001         	movff	i1dtoa@n,i1___aodiv@dividend
  8176  001FF8  C037  F002         	movff	i1dtoa@n+1,i1___aodiv@dividend+1
  8177  001FFC  C038  F003         	movff	i1dtoa@n+2,i1___aodiv@dividend+2
  8178  002000  C039  F004         	movff	i1dtoa@n+3,i1___aodiv@dividend+3
  8179  002004  C03A  F005         	movff	i1dtoa@n+4,i1___aodiv@dividend+4
  8180  002008  C03B  F006         	movff	i1dtoa@n+5,i1___aodiv@dividend+5
  8181  00200C  C03C  F007         	movff	i1dtoa@n+6,i1___aodiv@dividend+6
  8182  002010  C03D  F008         	movff	i1dtoa@n+7,i1___aodiv@dividend+7
  8183  002014  0E0A               	movlw	10
  8184  002016  6E09               	movwf	i1___aodiv@divisor^0,c
  8185  002018  0E00               	movlw	0
  8186  00201A  6E0A               	movwf	(i1___aodiv@divisor+1)^0,c
  8187  00201C  0E00               	movlw	0
  8188  00201E  6E0B               	movwf	(i1___aodiv@divisor+2)^0,c
  8189  002020  0E00               	movlw	0
  8190  002022  6E0C               	movwf	(i1___aodiv@divisor+3)^0,c
  8191  002024  0E00               	movlw	0
  8192  002026  6E0D               	movwf	(i1___aodiv@divisor+4)^0,c
  8193  002028  0E00               	movlw	0
  8194  00202A  6E0E               	movwf	(i1___aodiv@divisor+5)^0,c
  8195  00202C  0E00               	movlw	0
  8196  00202E  6E0F               	movwf	(i1___aodiv@divisor+6)^0,c
  8197  002030  0E00               	movlw	0
  8198  002032  6E10               	movwf	(i1___aodiv@divisor+7)^0,c
  8199  002034  ECC4  F014         	call	i1___aodiv	;wreg free
  8200  002038  C001  F036         	movff	?i1___aodiv,i1dtoa@n
  8201  00203C  C002  F037         	movff	?i1___aodiv+1,i1dtoa@n+1
  8202  002040  C003  F038         	movff	?i1___aodiv+2,i1dtoa@n+2
  8203  002044  C004  F039         	movff	?i1___aodiv+3,i1dtoa@n+3
  8204  002048  C005  F03A         	movff	?i1___aodiv+4,i1dtoa@n+4
  8205  00204C  C006  F03B         	movff	?i1___aodiv+5,i1dtoa@n+5
  8206  002050  C007  F03C         	movff	?i1___aodiv+6,i1dtoa@n+6
  8207  002054  C008  F03D         	movff	?i1___aodiv+7,i1dtoa@n+7
  8208  002058                     i1l4430:
  8209                           
  8210                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8211  002058  BE3F               	btfsc	(i1dtoa@i+1)^0,7,c
  8212  00205A  EF37  F010         	goto	i1u499_21
  8213  00205E  503F               	movf	(i1dtoa@i+1)^0,w,c
  8214  002060  E108               	bnz	i1u499_20
  8215  002062  043E               	decf	i1dtoa@i^0,w,c
  8216  002064  A0D8               	btfss	status,0,c
  8217  002066  EF37  F010         	goto	i1u499_21
  8218  00206A  EF39  F010         	goto	i1u499_20
  8219  00206E                     i1u499_21:
  8220  00206E  EF6A  F010         	goto	i1l4440
  8221  002072                     i1u499_20:
  8222  002072  5036               	movf	i1dtoa@n^0,w,c
  8223  002074  1037               	iorwf	(i1dtoa@n+1)^0,w,c
  8224  002076  1038               	iorwf	(i1dtoa@n+2)^0,w,c
  8225  002078  1039               	iorwf	(i1dtoa@n+3)^0,w,c
  8226  00207A  103A               	iorwf	(i1dtoa@n+4)^0,w,c
  8227  00207C  103B               	iorwf	(i1dtoa@n+5)^0,w,c
  8228  00207E  103C               	iorwf	(i1dtoa@n+6)^0,w,c
  8229  002080  103D               	iorwf	(i1dtoa@n+7)^0,w,c
  8230  002082  A4D8               	btfss	status,2,c
  8231  002084  EF46  F010         	goto	i1u500_21
  8232  002088  EF48  F010         	goto	i1u500_20
  8233  00208C                     i1u500_21:
  8234  00208C  EFB0  F00F         	goto	i1l4420
  8235  002090                     i1u500_20:
  8236  002090  BE31               	btfsc	(i1dtoa@p+1)^0,7,c
  8237  002092  EF55  F010         	goto	i1u501_20
  8238  002096  5031               	movf	(i1dtoa@p+1)^0,w,c
  8239  002098  E106               	bnz	i1u501_21
  8240  00209A  0430               	decf	i1dtoa@p^0,w,c
  8241  00209C  B0D8               	btfsc	status,0,c
  8242  00209E  EF53  F010         	goto	i1u501_21
  8243  0020A2  EF55  F010         	goto	i1u501_20
  8244  0020A6                     i1u501_21:
  8245  0020A6  EFB0  F00F         	goto	i1l4420
  8246  0020AA                     i1u501_20:
  8247  0020AA  BE33               	btfsc	(i1dtoa@w+1)^0,7,c
  8248  0020AC  EF60  F010         	goto	i1u502_21
  8249  0020B0  5033               	movf	(i1dtoa@w+1)^0,w,c
  8250  0020B2  E108               	bnz	i1u502_20
  8251  0020B4  0432               	decf	i1dtoa@w^0,w,c
  8252  0020B6  A0D8               	btfss	status,0,c
  8253  0020B8  EF60  F010         	goto	i1u502_21
  8254  0020BC  EF62  F010         	goto	i1u502_20
  8255  0020C0                     i1u502_21:
  8256  0020C0  EF6A  F010         	goto	i1l4440
  8257  0020C4                     i1u502_20:
  8258  0020C4  0100               	movlb	0	; () banked
  8259  0020C6  B3E0               	btfsc	_flags& (0+255),1,b
  8260  0020C8  EF68  F010         	goto	i1u503_21
  8261  0020CC  EF6A  F010         	goto	i1u503_20
  8262  0020D0                     i1u503_21:
  8263  0020D0  EFB0  F00F         	goto	i1l4420
  8264  0020D4                     i1u503_20:
  8265  0020D4                     i1l4440:
  8266                           
  8267                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  8268  0020D4  5034               	movf	i1dtoa@s^0,w,c
  8269  0020D6  1035               	iorwf	(i1dtoa@s+1)^0,w,c
  8270  0020D8  A4D8               	btfss	status,2,c
  8271  0020DA  EF71  F010         	goto	i1u504_21
  8272  0020DE  EF73  F010         	goto	i1u504_20
  8273  0020E2                     i1u504_21:
  8274  0020E2  EF7B  F010         	goto	i1l4444
  8275  0020E6                     i1u504_20:
  8276  0020E6  0100               	movlb	0	; () banked
  8277  0020E8  A5E0               	btfss	_flags& (0+255),2,b
  8278  0020EA  EF79  F010         	goto	i1u505_21
  8279  0020EE  EF7B  F010         	goto	i1u505_20
  8280  0020F2                     i1u505_21:
  8281  0020F2  EF99  F010         	goto	i1l4454
  8282  0020F6                     i1u505_20:
  8283  0020F6                     i1l4444:
  8284                           
  8285                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  8286  0020F6  063E               	decf	i1dtoa@i^0,f,c
  8287  0020F8  A0D8               	btfss	status,0,c
  8288  0020FA  063F               	decf	(i1dtoa@i+1)^0,f,c
  8289  0020FC                     
  8290                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  8291  0020FC  5034               	movf	i1dtoa@s^0,w,c
  8292  0020FE  1035               	iorwf	(i1dtoa@s+1)^0,w,c
  8293  002100  A4D8               	btfss	status,2,c
  8294  002102  EF85  F010         	goto	i1u506_21
  8295  002106  EF87  F010         	goto	i1u506_20
  8296  00210A                     i1u506_21:
  8297  00210A  EF8D  F010         	goto	i1l4450
  8298  00210E                     i1u506_20:
  8299  00210E  0E00               	movlw	0
  8300  002110  6E2F               	movwf	(i1_dtoa$1861+1)^0,c
  8301  002112  0E2B               	movlw	43
  8302  002114  6E2E               	movwf	i1_dtoa$1861^0,c
  8303  002116  EF91  F010         	goto	i1l4452
  8304  00211A                     i1l4450:
  8305  00211A  0E00               	movlw	0
  8306  00211C  6E2F               	movwf	(i1_dtoa$1861+1)^0,c
  8307  00211E  0E2D               	movlw	45
  8308  002120  6E2E               	movwf	i1_dtoa$1861^0,c
  8309  002122                     i1l4452:
  8310  002122  0EC4               	movlw	low _dbuf
  8311  002124  243E               	addwf	i1dtoa@i^0,w,c
  8312  002126  6ED9               	movwf	fsr2l,c
  8313  002128  0E02               	movlw	high _dbuf
  8314  00212A  203F               	addwfc	(i1dtoa@i+1)^0,w,c
  8315  00212C  6EDA               	movwf	fsr2h,c
  8316  00212E  C02E  FFDF         	movff	i1_dtoa$1861,indf2
  8317  002132                     i1l4454:
  8318                           
  8319                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  8320  002132  C01C  F011         	movff	i1dtoa@fp,i1pad@fp
  8321  002136  C01D  F012         	movff	i1dtoa@fp+1,i1pad@fp+1
  8322  00213A  0EC4               	movlw	low _dbuf
  8323  00213C  243E               	addwf	i1dtoa@i^0,w,c
  8324  00213E  6E13               	movwf	i1pad@buf^0,c
  8325  002140  0E02               	movlw	high _dbuf
  8326  002142  203F               	addwfc	(i1dtoa@i+1)^0,w,c
  8327  002144  6E14               	movwf	(i1pad@buf+1)^0,c
  8328  002146  C032  F015         	movff	i1dtoa@w,i1pad@p
  8329  00214A  C033  F016         	movff	i1dtoa@w+1,i1pad@p+1
  8330  00214E  EC45  F019         	call	i1_pad	;wreg free
  8331  002152  C011  F01C         	movff	?i1_pad,?i1_dtoa
  8332  002156  C012  F01D         	movff	?i1_pad+1,?i1_dtoa+1
  8333  00215A  0012               	return		;funcret
  8334  00215C                     __end_ofi1_dtoa:
  8335                           	callstack 0
  8336                           
  8337 ;; *************** function i1_pad *****************
  8338 ;; Defined at:
  8339 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  8340 ;; Parameters:    Size  Location     Type
  8341 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  8342 ;;		 -> NULL(0), sprintf@f(6), 
  8343 ;;  buf             2   18[COMRAM] PTR unsigned char 
  8344 ;;		 -> dbuf(32), 
  8345 ;;  p               2   20[COMRAM] int 
  8346 ;; Auto vars:     Size  Location     Type
  8347 ;;  w               2   25[COMRAM] int 
  8348 ;;  i               2   23[COMRAM] int 
  8349 ;; Return value:  Size  Location     Type
  8350 ;;                  2   16[COMRAM] int 
  8351 ;; Registers used:
  8352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8353 ;; Tracked objects:
  8354 ;;		On entry : 0/0
  8355 ;;		On exit  : 0/0
  8356 ;;		Unchanged: 0/0
  8357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8358 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8359 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8360 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8361 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8362 ;;Total ram usage:       11 bytes
  8363 ;; Hardware stack levels used:    1
  8364 ;; Hardware stack levels required when called:    4
  8365 ;; This function calls:
  8366 ;;		i1_fputc
  8367 ;;		i1_fputs
  8368 ;;		i1_strlen
  8369 ;; This function is called by:
  8370 ;;		i1_dtoa
  8371 ;; This function uses a non-reentrant model
  8372 ;;
  8373                           
  8374                           	psect	text39
  8375  00328A                     __ptext39:
  8376                           	callstack 0
  8377  00328A                     i1_pad:
  8378                           	callstack 12
  8379  00328A                     
  8380                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  8381  00328A  0100               	movlb	0	; () banked
  8382  00328C  A1E0               	btfss	_flags& (0+255),0,b
  8383  00328E  EF4B  F019         	goto	i1u471_21
  8384  003292  EF4D  F019         	goto	i1u471_20
  8385  003296                     i1u471_21:
  8386  003296  EF57  F019         	goto	i1l4246
  8387  00329A                     i1u471_20:
  8388  00329A                     
  8389                           ; BSR set to: 0
  8390                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  8391  00329A  C013  F00A         	movff	i1pad@buf,i1fputs@s
  8392  00329E  C014  F00B         	movff	i1pad@buf+1,i1fputs@s+1
  8393  0032A2  C011  F00C         	movff	i1pad@fp,i1fputs@fp
  8394  0032A6  C012  F00D         	movff	i1pad@fp+1,i1fputs@fp+1
  8395  0032AA  EC15  F01C         	call	i1_fputs	;wreg free
  8396  0032AE                     i1l4246:
  8397                           
  8398                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  8399  0032AE  BE16               	btfsc	(i1pad@p+1)^0,7,c
  8400  0032B0  EF5C  F019         	goto	i1u472_21
  8401  0032B4  EF5E  F019         	goto	i1u472_20
  8402  0032B8                     i1u472_21:
  8403  0032B8  EF64  F019         	goto	i1l4250
  8404  0032BC                     i1u472_20:
  8405  0032BC  C015  F01A         	movff	i1pad@p,i1pad@w
  8406  0032C0  C016  F01B         	movff	i1pad@p+1,i1pad@w+1
  8407  0032C4  EF68  F019         	goto	i1l955
  8408  0032C8                     i1l4250:
  8409  0032C8  0E00               	movlw	0
  8410  0032CA  6E1B               	movwf	(i1pad@w+1)^0,c
  8411  0032CC  0E00               	movlw	0
  8412  0032CE  6E1A               	movwf	i1pad@w^0,c
  8413  0032D0                     i1l955:
  8414                           
  8415                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8416  0032D0  0E00               	movlw	0
  8417  0032D2  6E19               	movwf	(i1pad@i+1)^0,c
  8418  0032D4  0E00               	movlw	0
  8419  0032D6  6E18               	movwf	i1pad@i^0,c
  8420                           
  8421                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8422  0032D8  EF7A  F019         	goto	i1l4256
  8423  0032DC                     i1l4252:
  8424                           
  8425                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8426  0032DC  0E00               	movlw	0
  8427  0032DE  6E02               	movwf	(i1fputc@c+1)^0,c
  8428  0032E0  0E20               	movlw	32
  8429  0032E2  6E01               	movwf	i1fputc@c^0,c
  8430  0032E4  C011  F003         	movff	i1pad@fp,i1fputc@fp
  8431  0032E8  C012  F004         	movff	i1pad@fp+1,i1fputc@fp+1
  8432  0032EC  ECE0  F018         	call	i1_fputc	;wreg free
  8433  0032F0                     
  8434                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8435  0032F0  4A18               	infsnz	i1pad@i^0,f,c
  8436  0032F2  2A19               	incf	(i1pad@i+1)^0,f,c
  8437  0032F4                     i1l4256:
  8438                           
  8439                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8440  0032F4  501A               	movf	i1pad@w^0,w,c
  8441  0032F6  5C18               	subwf	i1pad@i^0,w,c
  8442  0032F8  5019               	movf	(i1pad@i+1)^0,w,c
  8443  0032FA  0A80               	xorlw	128
  8444  0032FC  6E17               	movwf	??i1_pad^0,c
  8445  0032FE  501B               	movf	(i1pad@w+1)^0,w,c
  8446  003300  0A80               	xorlw	128
  8447  003302  5817               	subwfb	??i1_pad^0,w,c
  8448  003304  A0D8               	btfss	status,0,c
  8449  003306  EF87  F019         	goto	i1u473_21
  8450  00330A  EF89  F019         	goto	i1u473_20
  8451  00330E                     i1u473_21:
  8452  00330E  EF6E  F019         	goto	i1l4252
  8453  003312                     i1u473_20:
  8454  003312                     
  8455                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8456  003312  0100               	movlb	0	; () banked
  8457  003314  B1E0               	btfsc	_flags& (0+255),0,b
  8458  003316  EF8F  F019         	goto	i1u474_21
  8459  00331A  EF91  F019         	goto	i1u474_20
  8460  00331E                     i1u474_21:
  8461  00331E  EF9B  F019         	goto	i1l4260
  8462  003322                     i1u474_20:
  8463  003322                     
  8464                           ; BSR set to: 0
  8465                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8466  003322  C013  F00A         	movff	i1pad@buf,i1fputs@s
  8467  003326  C014  F00B         	movff	i1pad@buf+1,i1fputs@s+1
  8468  00332A  C011  F00C         	movff	i1pad@fp,i1fputs@fp
  8469  00332E  C012  F00D         	movff	i1pad@fp+1,i1fputs@fp+1
  8470  003332  EC15  F01C         	call	i1_fputs	;wreg free
  8471  003336                     i1l4260:
  8472                           
  8473                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  8474  003336  C013  F001         	movff	i1pad@buf,i1strlen@s
  8475  00333A  C014  F002         	movff	i1pad@buf+1,i1strlen@s+1
  8476  00333E  EC28  F01D         	call	i1_strlen	;wreg free
  8477  003342  501A               	movf	i1pad@w^0,w,c
  8478  003344  2401               	addwf	?i1_strlen^0,w,c
  8479  003346  6E11               	movwf	?i1_pad^0,c
  8480  003348  501B               	movf	(i1pad@w+1)^0,w,c
  8481  00334A  2002               	addwfc	(?i1_strlen+1)^0,w,c
  8482  00334C  6E12               	movwf	(?i1_pad+1)^0,c
  8483  00334E  0012               	return		;funcret
  8484  003350                     __end_ofi1_pad:
  8485                           	callstack 0
  8486                           
  8487 ;; *************** function i1_strlen *****************
  8488 ;; Defined at:
  8489 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  8490 ;; Parameters:    Size  Location     Type
  8491 ;;  s               2    0[COMRAM] PTR const unsigned char 
  8492 ;;		 -> i1stoa@nuls(7), ?_printf(2), stoa@nuls(7), dbuf(32), 
  8493 ;;		 -> ?_sprintf(2), time_now@daylist(70), 
  8494 ;; Auto vars:     Size  Location     Type
  8495 ;;  a               2    2[COMRAM] PTR const unsigned char 
  8496 ;;		 -> i1stoa@nuls(7), ?_printf(2), stoa@nuls(7), dbuf(32), 
  8497 ;;		 -> ?_sprintf(2), time_now@daylist(70), 
  8498 ;; Return value:  Size  Location     Type
  8499 ;;                  2    0[COMRAM] unsigned int 
  8500 ;; Registers used:
  8501 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8502 ;; Tracked objects:
  8503 ;;		On entry : 0/0
  8504 ;;		On exit  : 0/0
  8505 ;;		Unchanged: 0/0
  8506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8507 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8508 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8510 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8511 ;;Total ram usage:        4 bytes
  8512 ;; Hardware stack levels used:    1
  8513 ;; Hardware stack levels required when called:    1
  8514 ;; This function calls:
  8515 ;;		Nothing
  8516 ;; This function is called by:
  8517 ;;		i1_pad
  8518 ;;		i1_stoa
  8519 ;; This function uses a non-reentrant model
  8520 ;;
  8521                           
  8522                           	psect	text40
  8523  003A50                     __ptext40:
  8524                           	callstack 0
  8525  003A50                     i1_strlen:
  8526                           	callstack 15
  8527  003A50  C001  F003         	movff	i1strlen@s,i1strlen@a
  8528  003A54  C002  F004         	movff	i1strlen@s+1,i1strlen@a+1
  8529  003A58  EF30  F01D         	goto	i1l4004
  8530  003A5C                     i1l4002:
  8531  003A5C  4A01               	infsnz	i1strlen@s^0,f,c
  8532  003A5E  2A02               	incf	(i1strlen@s+1)^0,f,c
  8533  003A60                     i1l4004:
  8534  003A60  C001  FFD9         	movff	i1strlen@s,fsr2l
  8535  003A64  C002  FFDA         	movff	i1strlen@s+1,fsr2h
  8536  003A68  50DF               	movf	indf2,w,c
  8537  003A6A  A4D8               	btfss	status,2,c
  8538  003A6C  EF3A  F01D         	goto	i1u426_21
  8539  003A70  EF3C  F01D         	goto	i1u426_20
  8540  003A74                     i1u426_21:
  8541  003A74  EF2E  F01D         	goto	i1l4002
  8542  003A78                     i1u426_20:
  8543  003A78  5003               	movf	i1strlen@a^0,w,c
  8544  003A7A  5C01               	subwf	i1strlen@s^0,w,c
  8545  003A7C  6E01               	movwf	?i1_strlen^0,c
  8546  003A7E  5004               	movf	(i1strlen@a+1)^0,w,c
  8547  003A80  5802               	subwfb	(i1strlen@s+1)^0,w,c
  8548  003A82  6E02               	movwf	(?i1_strlen+1)^0,c
  8549  003A84  0012               	return		;funcret
  8550  003A86                     __end_ofi1_strlen:
  8551                           	callstack 0
  8552                           
  8553 ;; *************** function i1_fputs *****************
  8554 ;; Defined at:
  8555 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  8556 ;; Parameters:    Size  Location     Type
  8557 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8558 ;;		 -> dbuf(32), 
  8559 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8560 ;;		 -> NULL(0), sprintf@f(6), 
  8561 ;; Auto vars:     Size  Location     Type
  8562 ;;  i               2   14[COMRAM] int 
  8563 ;;  c               1   13[COMRAM] unsigned char 
  8564 ;; Return value:  Size  Location     Type
  8565 ;;                  2    9[COMRAM] int 
  8566 ;; Registers used:
  8567 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8568 ;; Tracked objects:
  8569 ;;		On entry : 0/0
  8570 ;;		On exit  : 0/0
  8571 ;;		Unchanged: 0/0
  8572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8573 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8574 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8576 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8577 ;;Total ram usage:        7 bytes
  8578 ;; Hardware stack levels used:    1
  8579 ;; Hardware stack levels required when called:    3
  8580 ;; This function calls:
  8581 ;;		i1_fputc
  8582 ;; This function is called by:
  8583 ;;		i1_pad
  8584 ;; This function uses a non-reentrant model
  8585 ;;
  8586                           
  8587                           	psect	text41
  8588  00382A                     __ptext41:
  8589                           	callstack 0
  8590  00382A                     i1_fputs:
  8591                           	callstack 12
  8592  00382A  0E00               	movlw	0
  8593  00382C  6E10               	movwf	(i1fputs@i+1)^0,c
  8594  00382E  0E00               	movlw	0
  8595  003830  6E0F               	movwf	i1fputs@i^0,c
  8596  003832  EF26  F01C         	goto	i1l3998
  8597  003836                     i1l3994:
  8598  003836  C00E  F001         	movff	i1fputs@c,i1fputc@c
  8599  00383A  6A02               	clrf	(i1fputc@c+1)^0,c
  8600  00383C  C00C  F003         	movff	i1fputs@fp,i1fputc@fp
  8601  003840  C00D  F004         	movff	i1fputs@fp+1,i1fputc@fp+1
  8602  003844  ECE0  F018         	call	i1_fputc	;wreg free
  8603  003848  4A0F               	infsnz	i1fputs@i^0,f,c
  8604  00384A  2A10               	incf	(i1fputs@i+1)^0,f,c
  8605  00384C                     i1l3998:
  8606  00384C  500F               	movf	i1fputs@i^0,w,c
  8607  00384E  240A               	addwf	i1fputs@s^0,w,c
  8608  003850  6ED9               	movwf	fsr2l,c
  8609  003852  5010               	movf	(i1fputs@i+1)^0,w,c
  8610  003854  200B               	addwfc	(i1fputs@s+1)^0,w,c
  8611  003856  6EDA               	movwf	fsr2h,c
  8612  003858  50DF               	movf	indf2,w,c
  8613  00385A  6E0E               	movwf	i1fputs@c^0,c
  8614  00385C  500E               	movf	i1fputs@c^0,w,c
  8615  00385E  A4D8               	btfss	status,2,c
  8616  003860  EF34  F01C         	goto	i1u425_21
  8617  003864  EF36  F01C         	goto	i1u425_20
  8618  003868                     i1u425_21:
  8619  003868  EF1B  F01C         	goto	i1l3994
  8620  00386C                     i1u425_20:
  8621  00386C  0012               	return		;funcret
  8622  00386E                     __end_ofi1_fputs:
  8623                           	callstack 0
  8624                           
  8625 ;; *************** function i1_fputc *****************
  8626 ;; Defined at:
  8627 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  8628 ;; Parameters:    Size  Location     Type
  8629 ;;  c               2    0[COMRAM] int 
  8630 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8631 ;;		 -> NULL(0), sprintf@f(6), 
  8632 ;; Auto vars:     Size  Location     Type
  8633 ;;		None
  8634 ;; Return value:  Size  Location     Type
  8635 ;;                  2    0[COMRAM] int 
  8636 ;; Registers used:
  8637 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8638 ;; Tracked objects:
  8639 ;;		On entry : 0/0
  8640 ;;		On exit  : 0/0
  8641 ;;		Unchanged: 0/0
  8642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8643 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8645 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8646 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8647 ;;Total ram usage:        9 bytes
  8648 ;; Hardware stack levels used:    1
  8649 ;; Hardware stack levels required when called:    2
  8650 ;; This function calls:
  8651 ;;		i1_putch
  8652 ;; This function is called by:
  8653 ;;		i1_pad
  8654 ;;		i1_stoa
  8655 ;;		i1_vfpfcnvrt
  8656 ;;		i1_fputs
  8657 ;; This function uses a non-reentrant model
  8658 ;;
  8659                           
  8660                           	psect	text42
  8661  0031C0                     __ptext42:
  8662                           	callstack 0
  8663  0031C0                     i1_fputc:
  8664                           	callstack 14
  8665  0031C0  5003               	movf	i1fputc@fp^0,w,c
  8666  0031C2  1004               	iorwf	(i1fputc@fp+1)^0,w,c
  8667  0031C4  B4D8               	btfsc	status,2,c
  8668  0031C6  EFE7  F018         	goto	i1u399_21
  8669  0031CA  EFE9  F018         	goto	i1u399_20
  8670  0031CE                     i1u399_21:
  8671  0031CE  EFF2  F018         	goto	i1l3854
  8672  0031D2                     i1u399_20:
  8673  0031D2  5003               	movf	i1fputc@fp^0,w,c
  8674  0031D4  1004               	iorwf	(i1fputc@fp+1)^0,w,c
  8675  0031D6  A4D8               	btfss	status,2,c
  8676  0031D8  EFF0  F018         	goto	i1u400_21
  8677  0031DC  EFF2  F018         	goto	i1u400_20
  8678  0031E0                     i1u400_21:
  8679  0031E0  EFF7  F018         	goto	i1l3856
  8680  0031E4                     i1u400_20:
  8681  0031E4                     i1l3854:
  8682  0031E4  5001               	movf	i1fputc@c^0,w,c
  8683  0031E6  ECF3  F01D         	call	i1_putch
  8684  0031EA  EF44  F019         	goto	i1l1110
  8685  0031EE                     i1l3856:
  8686  0031EE  EE20 F004          	lfsr	2,4
  8687  0031F2  5003               	movf	i1fputc@fp^0,w,c
  8688  0031F4  26D9               	addwf	fsr2l,f,c
  8689  0031F6  5004               	movf	(i1fputc@fp+1)^0,w,c
  8690  0031F8  22DA               	addwfc	fsr2h,f,c
  8691  0031FA  50DE               	movf	postinc2,w,c
  8692  0031FC  10DE               	iorwf	postinc2,w,c
  8693  0031FE  B4D8               	btfsc	status,2,c
  8694  003200  EF04  F019         	goto	i1u401_21
  8695  003204  EF06  F019         	goto	i1u401_20
  8696  003208                     i1u401_21:
  8697  003208  EF21  F019         	goto	i1l3860
  8698  00320C                     i1u401_20:
  8699  00320C  EE20 F004          	lfsr	2,4
  8700  003210  5003               	movf	i1fputc@fp^0,w,c
  8701  003212  26D9               	addwf	fsr2l,f,c
  8702  003214  5004               	movf	(i1fputc@fp+1)^0,w,c
  8703  003216  22DA               	addwfc	fsr2h,f,c
  8704  003218  EE10 F002          	lfsr	1,2
  8705  00321C  5003               	movf	i1fputc@fp^0,w,c
  8706  00321E  26E1               	addwf	fsr1l,f,c
  8707  003220  5004               	movf	(i1fputc@fp+1)^0,w,c
  8708  003222  22E2               	addwfc	fsr1h,f,c
  8709  003224  50DE               	movf	postinc2,w,c
  8710  003226  5CE6               	subwf	postinc1,w,c
  8711  003228  50E6               	movf	postinc1,w,c
  8712  00322A  0A80               	xorlw	128
  8713  00322C  6E09               	movwf	(??i1_fputc+4)^0,c
  8714  00322E  50DE               	movf	postinc2,w,c
  8715  003230  0A80               	xorlw	128
  8716  003232  5809               	subwfb	(??i1_fputc+4)^0,w,c
  8717  003234  B0D8               	btfsc	status,0,c
  8718  003236  EF1F  F019         	goto	i1u402_21
  8719  00323A  EF21  F019         	goto	i1u402_20
  8720  00323E                     i1u402_21:
  8721  00323E  EF44  F019         	goto	i1l1110
  8722  003242                     i1u402_20:
  8723  003242                     i1l3860:
  8724  003242  EE20 F002          	lfsr	2,2
  8725  003246  5003               	movf	i1fputc@fp^0,w,c
  8726  003248  26D9               	addwf	fsr2l,f,c
  8727  00324A  5004               	movf	(i1fputc@fp+1)^0,w,c
  8728  00324C  22DA               	addwfc	fsr2h,f,c
  8729  00324E  CFDE F005          	movff	postinc2,??i1_fputc
  8730  003252  CFDD F006          	movff	postdec2,??i1_fputc+1
  8731  003256  C003  FFD9         	movff	i1fputc@fp,fsr2l
  8732  00325A  C004  FFDA         	movff	i1fputc@fp+1,fsr2h
  8733  00325E  CFDE F007          	movff	postinc2,??i1_fputc+2
  8734  003262  CFDD F008          	movff	postdec2,??i1_fputc+3
  8735  003266  5005               	movf	??i1_fputc^0,w,c
  8736  003268  2407               	addwf	(??i1_fputc+2)^0,w,c
  8737  00326A  6ED9               	movwf	fsr2l,c
  8738  00326C  5006               	movf	(??i1_fputc+1)^0,w,c
  8739  00326E  2008               	addwfc	(??i1_fputc+3)^0,w,c
  8740  003270  6EDA               	movwf	fsr2h,c
  8741  003272  C001  FFDF         	movff	i1fputc@c,indf2
  8742  003276  EE20 F002          	lfsr	2,2
  8743  00327A  5003               	movf	i1fputc@fp^0,w,c
  8744  00327C  26D9               	addwf	fsr2l,f,c
  8745  00327E  5004               	movf	(i1fputc@fp+1)^0,w,c
  8746  003280  22DA               	addwfc	fsr2h,f,c
  8747  003282  2ADE               	incf	postinc2,f,c
  8748  003284  0E00               	movlw	0
  8749  003286  22DD               	addwfc	postdec2,f,c
  8750  003288                     i1l1110:
  8751  003288  0012               	return		;funcret
  8752  00328A                     __end_ofi1_fputc:
  8753                           	callstack 0
  8754                           
  8755 ;; *************** function i1_putch *****************
  8756 ;; Defined at:
  8757 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  8758 ;; Parameters:    Size  Location     Type
  8759 ;;  c               1    wreg     unsigned char 
  8760 ;; Auto vars:     Size  Location     Type
  8761 ;;  c               1  (no storage) unsigned char 
  8762 ;; Return value:  Size  Location     Type
  8763 ;;                  1    wreg      void 
  8764 ;; Registers used:
  8765 ;;		wreg
  8766 ;; Tracked objects:
  8767 ;;		On entry : 0/0
  8768 ;;		On exit  : 0/0
  8769 ;;		Unchanged: 0/0
  8770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8775 ;;Total ram usage:        0 bytes
  8776 ;; Hardware stack levels used:    1
  8777 ;; Hardware stack levels required when called:    1
  8778 ;; This function calls:
  8779 ;;		Nothing
  8780 ;; This function is called by:
  8781 ;;		i1_fputc
  8782 ;; This function uses a non-reentrant model
  8783 ;;
  8784                           
  8785                           	psect	text43
  8786  003BE6                     __ptext43:
  8787                           	callstack 0
  8788  003BE6                     i1_putch:
  8789                           	callstack 14
  8790  003BE6  0012               	return		;funcret
  8791  003BE8                     __end_ofi1_putch:
  8792                           	callstack 0
  8793                           
  8794 ;; *************** function i1_abs *****************
  8795 ;; Defined at:
  8796 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  8797 ;; Parameters:    Size  Location     Type
  8798 ;;  a               2   18[COMRAM] int 
  8799 ;; Auto vars:     Size  Location     Type
  8800 ;;		None
  8801 ;; Return value:  Size  Location     Type
  8802 ;;                  2   18[COMRAM] int 
  8803 ;; Registers used:
  8804 ;;		wreg, status,2, status,0
  8805 ;; Tracked objects:
  8806 ;;		On entry : 0/0
  8807 ;;		On exit  : 0/0
  8808 ;;		Unchanged: 0/0
  8809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8810 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8812 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8813 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8814 ;;Total ram usage:        4 bytes
  8815 ;; Hardware stack levels used:    1
  8816 ;; Hardware stack levels required when called:    1
  8817 ;; This function calls:
  8818 ;;		Nothing
  8819 ;; This function is called by:
  8820 ;;		i1_dtoa
  8821 ;; This function uses a non-reentrant model
  8822 ;;
  8823                           
  8824                           	psect	text44
  8825  0038F0                     __ptext44:
  8826                           	callstack 0
  8827  0038F0                     i1_abs:
  8828                           	callstack 15
  8829  0038F0  BE14               	btfsc	(i1abs@a+1)^0,7,c
  8830  0038F2  EF85  F01C         	goto	i1u475_20
  8831  0038F6  5014               	movf	(i1abs@a+1)^0,w,c
  8832  0038F8  E106               	bnz	i1u475_21
  8833  0038FA  0413               	decf	i1abs@a^0,w,c
  8834  0038FC  B0D8               	btfsc	status,0,c
  8835  0038FE  EF83  F01C         	goto	i1u475_21
  8836  003902  EF85  F01C         	goto	i1u475_20
  8837  003906                     i1u475_21:
  8838  003906  EF93  F01C         	goto	i1l1050
  8839  00390A                     i1u475_20:
  8840  00390A  C013  F015         	movff	i1abs@a,??i1_abs
  8841  00390E  C014  F016         	movff	i1abs@a+1,??i1_abs+1
  8842  003912  1E15               	comf	??i1_abs^0,f,c
  8843  003914  1E16               	comf	(??i1_abs+1)^0,f,c
  8844  003916  4A15               	infsnz	??i1_abs^0,f,c
  8845  003918  2A16               	incf	(??i1_abs+1)^0,f,c
  8846  00391A  C015  F013         	movff	??i1_abs,?i1_abs
  8847  00391E  C016  F014         	movff	??i1_abs+1,?i1_abs+1
  8848  003922  EF97  F01C         	goto	i1l1053
  8849  003926                     i1l1050:
  8850  003926  C013  F013         	movff	i1abs@a,?i1_abs
  8851  00392A  C014  F014         	movff	i1abs@a+1,?i1_abs+1
  8852  00392E                     i1l1053:
  8853  00392E  0012               	return		;funcret
  8854  003930                     __end_ofi1_abs:
  8855                           	callstack 0
  8856                           
  8857 ;; *************** function i1___aomod *****************
  8858 ;; Defined at:
  8859 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  8860 ;; Parameters:    Size  Location     Type
  8861 ;;  dividend        8    0[COMRAM] long long 
  8862 ;;  divisor         8    8[COMRAM] long long 
  8863 ;; Auto vars:     Size  Location     Type
  8864 ;;  sign            1   17[COMRAM] unsigned char 
  8865 ;;  counter         1   16[COMRAM] unsigned char 
  8866 ;; Return value:  Size  Location     Type
  8867 ;;                  8    0[COMRAM] long long 
  8868 ;; Registers used:
  8869 ;;		wreg, status,2, status,0
  8870 ;; Tracked objects:
  8871 ;;		On entry : 0/0
  8872 ;;		On exit  : 0/0
  8873 ;;		Unchanged: 0/0
  8874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8875 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8876 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8878 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8879 ;;Total ram usage:       18 bytes
  8880 ;; Hardware stack levels used:    1
  8881 ;; Hardware stack levels required when called:    1
  8882 ;; This function calls:
  8883 ;;		Nothing
  8884 ;; This function is called by:
  8885 ;;		i1_dtoa
  8886 ;; This function uses a non-reentrant model
  8887 ;;
  8888                           
  8889                           	psect	text45
  8890  002DFC                     __ptext45:
  8891                           	callstack 0
  8892  002DFC                     i1___aomod:
  8893                           	callstack 15
  8894  002DFC  0E00               	movlw	0
  8895  002DFE  6E12               	movwf	i1___aomod@sign^0,c
  8896  002E00  BE08               	btfsc	(i1___aomod@dividend+7)^0,7,c
  8897  002E02  EF07  F017         	goto	i1u465_20
  8898  002E06  EF05  F017         	goto	i1u465_21
  8899  002E0A                     i1u465_21:
  8900  002E0A  EF19  F017         	goto	i1l4214
  8901  002E0E                     i1u465_20:
  8902  002E0E  1E08               	comf	(i1___aomod@dividend+7)^0,f,c
  8903  002E10  1E07               	comf	(i1___aomod@dividend+6)^0,f,c
  8904  002E12  1E06               	comf	(i1___aomod@dividend+5)^0,f,c
  8905  002E14  1E05               	comf	(i1___aomod@dividend+4)^0,f,c
  8906  002E16  1E04               	comf	(i1___aomod@dividend+3)^0,f,c
  8907  002E18  1E03               	comf	(i1___aomod@dividend+2)^0,f,c
  8908  002E1A  1E02               	comf	(i1___aomod@dividend+1)^0,f,c
  8909  002E1C  6C01               	negf	i1___aomod@dividend^0,c
  8910  002E1E  0E00               	movlw	0
  8911  002E20  2202               	addwfc	(i1___aomod@dividend+1)^0,f,c
  8912  002E22  2203               	addwfc	(i1___aomod@dividend+2)^0,f,c
  8913  002E24  2204               	addwfc	(i1___aomod@dividend+3)^0,f,c
  8914  002E26  2205               	addwfc	(i1___aomod@dividend+4)^0,f,c
  8915  002E28  2206               	addwfc	(i1___aomod@dividend+5)^0,f,c
  8916  002E2A  2207               	addwfc	(i1___aomod@dividend+6)^0,f,c
  8917  002E2C  2208               	addwfc	(i1___aomod@dividend+7)^0,f,c
  8918  002E2E  0E01               	movlw	1
  8919  002E30  6E12               	movwf	i1___aomod@sign^0,c
  8920  002E32                     i1l4214:
  8921  002E32  BE10               	btfsc	(i1___aomod@divisor+7)^0,7,c
  8922  002E34  EF20  F017         	goto	i1u466_20
  8923  002E38  EF1E  F017         	goto	i1u466_21
  8924  002E3C                     i1u466_21:
  8925  002E3C  EF30  F017         	goto	i1l4218
  8926  002E40                     i1u466_20:
  8927  002E40  1E10               	comf	(i1___aomod@divisor+7)^0,f,c
  8928  002E42  1E0F               	comf	(i1___aomod@divisor+6)^0,f,c
  8929  002E44  1E0E               	comf	(i1___aomod@divisor+5)^0,f,c
  8930  002E46  1E0D               	comf	(i1___aomod@divisor+4)^0,f,c
  8931  002E48  1E0C               	comf	(i1___aomod@divisor+3)^0,f,c
  8932  002E4A  1E0B               	comf	(i1___aomod@divisor+2)^0,f,c
  8933  002E4C  1E0A               	comf	(i1___aomod@divisor+1)^0,f,c
  8934  002E4E  6C09               	negf	i1___aomod@divisor^0,c
  8935  002E50  0E00               	movlw	0
  8936  002E52  220A               	addwfc	(i1___aomod@divisor+1)^0,f,c
  8937  002E54  220B               	addwfc	(i1___aomod@divisor+2)^0,f,c
  8938  002E56  220C               	addwfc	(i1___aomod@divisor+3)^0,f,c
  8939  002E58  220D               	addwfc	(i1___aomod@divisor+4)^0,f,c
  8940  002E5A  220E               	addwfc	(i1___aomod@divisor+5)^0,f,c
  8941  002E5C  220F               	addwfc	(i1___aomod@divisor+6)^0,f,c
  8942  002E5E  2210               	addwfc	(i1___aomod@divisor+7)^0,f,c
  8943  002E60                     i1l4218:
  8944  002E60  5009               	movf	i1___aomod@divisor^0,w,c
  8945  002E62  100A               	iorwf	(i1___aomod@divisor+1)^0,w,c
  8946  002E64  100B               	iorwf	(i1___aomod@divisor+2)^0,w,c
  8947  002E66  100C               	iorwf	(i1___aomod@divisor+3)^0,w,c
  8948  002E68  100D               	iorwf	(i1___aomod@divisor+4)^0,w,c
  8949  002E6A  100E               	iorwf	(i1___aomod@divisor+5)^0,w,c
  8950  002E6C  100F               	iorwf	(i1___aomod@divisor+6)^0,w,c
  8951  002E6E  1010               	iorwf	(i1___aomod@divisor+7)^0,w,c
  8952  002E70  B4D8               	btfsc	status,2,c
  8953  002E72  EF3D  F017         	goto	i1u467_21
  8954  002E76  EF3F  F017         	goto	i1u467_20
  8955  002E7A                     i1u467_21:
  8956  002E7A  EF87  F017         	goto	i1l4234
  8957  002E7E                     i1u467_20:
  8958  002E7E  0E01               	movlw	1
  8959  002E80  6E11               	movwf	i1___aomod@counter^0,c
  8960  002E82  EF4D  F017         	goto	i1l4224
  8961  002E86                     i1l4222:
  8962  002E86  90D8               	bcf	status,0,c
  8963  002E88  3609               	rlcf	i1___aomod@divisor^0,f,c
  8964  002E8A  360A               	rlcf	(i1___aomod@divisor+1)^0,f,c
  8965  002E8C  360B               	rlcf	(i1___aomod@divisor+2)^0,f,c
  8966  002E8E  360C               	rlcf	(i1___aomod@divisor+3)^0,f,c
  8967  002E90  360D               	rlcf	(i1___aomod@divisor+4)^0,f,c
  8968  002E92  360E               	rlcf	(i1___aomod@divisor+5)^0,f,c
  8969  002E94  360F               	rlcf	(i1___aomod@divisor+6)^0,f,c
  8970  002E96  3610               	rlcf	(i1___aomod@divisor+7)^0,f,c
  8971  002E98  2A11               	incf	i1___aomod@counter^0,f,c
  8972  002E9A                     i1l4224:
  8973  002E9A  AE10               	btfss	(i1___aomod@divisor+7)^0,7,c
  8974  002E9C  EF52  F017         	goto	i1u468_21
  8975  002EA0  EF54  F017         	goto	i1u468_20
  8976  002EA4                     i1u468_21:
  8977  002EA4  EF43  F017         	goto	i1l4222
  8978  002EA8                     i1u468_20:
  8979  002EA8                     i1l4226:
  8980  002EA8  5009               	movf	i1___aomod@divisor^0,w,c
  8981  002EAA  5C01               	subwf	i1___aomod@dividend^0,w,c
  8982  002EAC  500A               	movf	(i1___aomod@divisor+1)^0,w,c
  8983  002EAE  5802               	subwfb	(i1___aomod@dividend+1)^0,w,c
  8984  002EB0  500B               	movf	(i1___aomod@divisor+2)^0,w,c
  8985  002EB2  5803               	subwfb	(i1___aomod@dividend+2)^0,w,c
  8986  002EB4  500C               	movf	(i1___aomod@divisor+3)^0,w,c
  8987  002EB6  5804               	subwfb	(i1___aomod@dividend+3)^0,w,c
  8988  002EB8  500D               	movf	(i1___aomod@divisor+4)^0,w,c
  8989  002EBA  5805               	subwfb	(i1___aomod@dividend+4)^0,w,c
  8990  002EBC  500E               	movf	(i1___aomod@divisor+5)^0,w,c
  8991  002EBE  5806               	subwfb	(i1___aomod@dividend+5)^0,w,c
  8992  002EC0  500F               	movf	(i1___aomod@divisor+6)^0,w,c
  8993  002EC2  5807               	subwfb	(i1___aomod@dividend+6)^0,w,c
  8994  002EC4  5010               	movf	(i1___aomod@divisor+7)^0,w,c
  8995  002EC6  5808               	subwfb	(i1___aomod@dividend+7)^0,w,c
  8996  002EC8  A0D8               	btfss	status,0,c
  8997  002ECA  EF69  F017         	goto	i1u469_21
  8998  002ECE  EF6B  F017         	goto	i1u469_20
  8999  002ED2                     i1u469_21:
  9000  002ED2  EF7B  F017         	goto	i1l4230
  9001  002ED6                     i1u469_20:
  9002  002ED6  5009               	movf	i1___aomod@divisor^0,w,c
  9003  002ED8  5E01               	subwf	i1___aomod@dividend^0,f,c
  9004  002EDA  500A               	movf	(i1___aomod@divisor+1)^0,w,c
  9005  002EDC  5A02               	subwfb	(i1___aomod@dividend+1)^0,f,c
  9006  002EDE  500B               	movf	(i1___aomod@divisor+2)^0,w,c
  9007  002EE0  5A03               	subwfb	(i1___aomod@dividend+2)^0,f,c
  9008  002EE2  500C               	movf	(i1___aomod@divisor+3)^0,w,c
  9009  002EE4  5A04               	subwfb	(i1___aomod@dividend+3)^0,f,c
  9010  002EE6  500D               	movf	(i1___aomod@divisor+4)^0,w,c
  9011  002EE8  5A05               	subwfb	(i1___aomod@dividend+4)^0,f,c
  9012  002EEA  500E               	movf	(i1___aomod@divisor+5)^0,w,c
  9013  002EEC  5A06               	subwfb	(i1___aomod@dividend+5)^0,f,c
  9014  002EEE  500F               	movf	(i1___aomod@divisor+6)^0,w,c
  9015  002EF0  5A07               	subwfb	(i1___aomod@dividend+6)^0,f,c
  9016  002EF2  5010               	movf	(i1___aomod@divisor+7)^0,w,c
  9017  002EF4  5A08               	subwfb	(i1___aomod@dividend+7)^0,f,c
  9018  002EF6                     i1l4230:
  9019  002EF6  90D8               	bcf	status,0,c
  9020  002EF8  3210               	rrcf	(i1___aomod@divisor+7)^0,f,c
  9021  002EFA  320F               	rrcf	(i1___aomod@divisor+6)^0,f,c
  9022  002EFC  320E               	rrcf	(i1___aomod@divisor+5)^0,f,c
  9023  002EFE  320D               	rrcf	(i1___aomod@divisor+4)^0,f,c
  9024  002F00  320C               	rrcf	(i1___aomod@divisor+3)^0,f,c
  9025  002F02  320B               	rrcf	(i1___aomod@divisor+2)^0,f,c
  9026  002F04  320A               	rrcf	(i1___aomod@divisor+1)^0,f,c
  9027  002F06  3209               	rrcf	i1___aomod@divisor^0,f,c
  9028  002F08  2E11               	decfsz	i1___aomod@counter^0,f,c
  9029  002F0A  EF54  F017         	goto	i1l4226
  9030  002F0E                     i1l4234:
  9031  002F0E  5012               	movf	i1___aomod@sign^0,w,c
  9032  002F10  B4D8               	btfsc	status,2,c
  9033  002F12  EF8D  F017         	goto	i1u470_21
  9034  002F16  EF8F  F017         	goto	i1u470_20
  9035  002F1A                     i1u470_21:
  9036  002F1A  EF9F  F017         	goto	i1l4238
  9037  002F1E                     i1u470_20:
  9038  002F1E  1E08               	comf	(i1___aomod@dividend+7)^0,f,c
  9039  002F20  1E07               	comf	(i1___aomod@dividend+6)^0,f,c
  9040  002F22  1E06               	comf	(i1___aomod@dividend+5)^0,f,c
  9041  002F24  1E05               	comf	(i1___aomod@dividend+4)^0,f,c
  9042  002F26  1E04               	comf	(i1___aomod@dividend+3)^0,f,c
  9043  002F28  1E03               	comf	(i1___aomod@dividend+2)^0,f,c
  9044  002F2A  1E02               	comf	(i1___aomod@dividend+1)^0,f,c
  9045  002F2C  6C01               	negf	i1___aomod@dividend^0,c
  9046  002F2E  0E00               	movlw	0
  9047  002F30  2202               	addwfc	(i1___aomod@dividend+1)^0,f,c
  9048  002F32  2203               	addwfc	(i1___aomod@dividend+2)^0,f,c
  9049  002F34  2204               	addwfc	(i1___aomod@dividend+3)^0,f,c
  9050  002F36  2205               	addwfc	(i1___aomod@dividend+4)^0,f,c
  9051  002F38  2206               	addwfc	(i1___aomod@dividend+5)^0,f,c
  9052  002F3A  2207               	addwfc	(i1___aomod@dividend+6)^0,f,c
  9053  002F3C  2208               	addwfc	(i1___aomod@dividend+7)^0,f,c
  9054  002F3E                     i1l4238:
  9055  002F3E  C001  F001         	movff	i1___aomod@dividend,?i1___aomod
  9056  002F42  C002  F002         	movff	i1___aomod@dividend+1,?i1___aomod+1
  9057  002F46  C003  F003         	movff	i1___aomod@dividend+2,?i1___aomod+2
  9058  002F4A  C004  F004         	movff	i1___aomod@dividend+3,?i1___aomod+3
  9059  002F4E  C005  F005         	movff	i1___aomod@dividend+4,?i1___aomod+4
  9060  002F52  C006  F006         	movff	i1___aomod@dividend+5,?i1___aomod+5
  9061  002F56  C007  F007         	movff	i1___aomod@dividend+6,?i1___aomod+6
  9062  002F5A  C008  F008         	movff	i1___aomod@dividend+7,?i1___aomod+7
  9063  002F5E  0012               	return		;funcret
  9064  002F60                     __end_ofi1___aomod:
  9065                           	callstack 0
  9066                           
  9067 ;; *************** function i1___aodiv *****************
  9068 ;; Defined at:
  9069 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  9070 ;; Parameters:    Size  Location     Type
  9071 ;;  dividend        8    0[COMRAM] long long 
  9072 ;;  divisor         8    8[COMRAM] long long 
  9073 ;; Auto vars:     Size  Location     Type
  9074 ;;  quotient        8   18[COMRAM] long long 
  9075 ;;  sign            1   17[COMRAM] unsigned char 
  9076 ;;  counter         1   16[COMRAM] unsigned char 
  9077 ;; Return value:  Size  Location     Type
  9078 ;;                  8    0[COMRAM] long long 
  9079 ;; Registers used:
  9080 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9081 ;; Tracked objects:
  9082 ;;		On entry : 0/0
  9083 ;;		On exit  : 0/0
  9084 ;;		Unchanged: 0/0
  9085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9086 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9087 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9089 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9090 ;;Total ram usage:       26 bytes
  9091 ;; Hardware stack levels used:    1
  9092 ;; Hardware stack levels required when called:    1
  9093 ;; This function calls:
  9094 ;;		Nothing
  9095 ;; This function is called by:
  9096 ;;		i1_dtoa
  9097 ;; This function uses a non-reentrant model
  9098 ;;
  9099                           
  9100                           	psect	text46
  9101  002988                     __ptext46:
  9102                           	callstack 0
  9103  002988                     i1___aodiv:
  9104                           	callstack 15
  9105  002988  0E00               	movlw	0
  9106  00298A  6E12               	movwf	i1___aodiv@sign^0,c
  9107  00298C  BE10               	btfsc	(i1___aodiv@divisor+7)^0,7,c
  9108  00298E  EFCD  F014         	goto	i1u458_20
  9109  002992  EFCB  F014         	goto	i1u458_21
  9110  002996                     i1u458_21:
  9111  002996  EFDF  F014         	goto	i1l4170
  9112  00299A                     i1u458_20:
  9113  00299A  1E10               	comf	(i1___aodiv@divisor+7)^0,f,c
  9114  00299C  1E0F               	comf	(i1___aodiv@divisor+6)^0,f,c
  9115  00299E  1E0E               	comf	(i1___aodiv@divisor+5)^0,f,c
  9116  0029A0  1E0D               	comf	(i1___aodiv@divisor+4)^0,f,c
  9117  0029A2  1E0C               	comf	(i1___aodiv@divisor+3)^0,f,c
  9118  0029A4  1E0B               	comf	(i1___aodiv@divisor+2)^0,f,c
  9119  0029A6  1E0A               	comf	(i1___aodiv@divisor+1)^0,f,c
  9120  0029A8  6C09               	negf	i1___aodiv@divisor^0,c
  9121  0029AA  0E00               	movlw	0
  9122  0029AC  220A               	addwfc	(i1___aodiv@divisor+1)^0,f,c
  9123  0029AE  220B               	addwfc	(i1___aodiv@divisor+2)^0,f,c
  9124  0029B0  220C               	addwfc	(i1___aodiv@divisor+3)^0,f,c
  9125  0029B2  220D               	addwfc	(i1___aodiv@divisor+4)^0,f,c
  9126  0029B4  220E               	addwfc	(i1___aodiv@divisor+5)^0,f,c
  9127  0029B6  220F               	addwfc	(i1___aodiv@divisor+6)^0,f,c
  9128  0029B8  2210               	addwfc	(i1___aodiv@divisor+7)^0,f,c
  9129  0029BA  0E01               	movlw	1
  9130  0029BC  6E12               	movwf	i1___aodiv@sign^0,c
  9131  0029BE                     i1l4170:
  9132  0029BE  BE08               	btfsc	(i1___aodiv@dividend+7)^0,7,c
  9133  0029C0  EFE6  F014         	goto	i1u459_20
  9134  0029C4  EFE4  F014         	goto	i1u459_21
  9135  0029C8                     i1u459_21:
  9136  0029C8  EFF8  F014         	goto	i1l4176
  9137  0029CC                     i1u459_20:
  9138  0029CC  1E08               	comf	(i1___aodiv@dividend+7)^0,f,c
  9139  0029CE  1E07               	comf	(i1___aodiv@dividend+6)^0,f,c
  9140  0029D0  1E06               	comf	(i1___aodiv@dividend+5)^0,f,c
  9141  0029D2  1E05               	comf	(i1___aodiv@dividend+4)^0,f,c
  9142  0029D4  1E04               	comf	(i1___aodiv@dividend+3)^0,f,c
  9143  0029D6  1E03               	comf	(i1___aodiv@dividend+2)^0,f,c
  9144  0029D8  1E02               	comf	(i1___aodiv@dividend+1)^0,f,c
  9145  0029DA  6C01               	negf	i1___aodiv@dividend^0,c
  9146  0029DC  0E00               	movlw	0
  9147  0029DE  2202               	addwfc	(i1___aodiv@dividend+1)^0,f,c
  9148  0029E0  2203               	addwfc	(i1___aodiv@dividend+2)^0,f,c
  9149  0029E2  2204               	addwfc	(i1___aodiv@dividend+3)^0,f,c
  9150  0029E4  2205               	addwfc	(i1___aodiv@dividend+4)^0,f,c
  9151  0029E6  2206               	addwfc	(i1___aodiv@dividend+5)^0,f,c
  9152  0029E8  2207               	addwfc	(i1___aodiv@dividend+6)^0,f,c
  9153  0029EA  2208               	addwfc	(i1___aodiv@dividend+7)^0,f,c
  9154  0029EC  0E01               	movlw	1
  9155  0029EE  1A12               	xorwf	i1___aodiv@sign^0,f,c
  9156  0029F0                     i1l4176:
  9157  0029F0  EE20  F013         	lfsr	2,i1___aodiv@quotient
  9158  0029F4  0E07               	movlw	7
  9159  0029F6                     i1u460_21:
  9160  0029F6  6ADE               	clrf	postinc2,c
  9161  0029F8  06E8               	decf	wreg,f,c
  9162  0029FA  E2FD               	bc	i1u460_21
  9163  0029FC  5009               	movf	i1___aodiv@divisor^0,w,c
  9164  0029FE  100A               	iorwf	(i1___aodiv@divisor+1)^0,w,c
  9165  002A00  100B               	iorwf	(i1___aodiv@divisor+2)^0,w,c
  9166  002A02  100C               	iorwf	(i1___aodiv@divisor+3)^0,w,c
  9167  002A04  100D               	iorwf	(i1___aodiv@divisor+4)^0,w,c
  9168  002A06  100E               	iorwf	(i1___aodiv@divisor+5)^0,w,c
  9169  002A08  100F               	iorwf	(i1___aodiv@divisor+6)^0,w,c
  9170  002A0A  1010               	iorwf	(i1___aodiv@divisor+7)^0,w,c
  9171  002A0C  B4D8               	btfsc	status,2,c
  9172  002A0E  EF0B  F015         	goto	i1u461_21
  9173  002A12  EF0D  F015         	goto	i1u461_20
  9174  002A16                     i1u461_21:
  9175  002A16  EF5F  F015         	goto	i1l4198
  9176  002A1A                     i1u461_20:
  9177  002A1A  0E01               	movlw	1
  9178  002A1C  6E11               	movwf	i1___aodiv@counter^0,c
  9179  002A1E  EF1B  F015         	goto	i1l4184
  9180  002A22                     i1l4182:
  9181  002A22  90D8               	bcf	status,0,c
  9182  002A24  3609               	rlcf	i1___aodiv@divisor^0,f,c
  9183  002A26  360A               	rlcf	(i1___aodiv@divisor+1)^0,f,c
  9184  002A28  360B               	rlcf	(i1___aodiv@divisor+2)^0,f,c
  9185  002A2A  360C               	rlcf	(i1___aodiv@divisor+3)^0,f,c
  9186  002A2C  360D               	rlcf	(i1___aodiv@divisor+4)^0,f,c
  9187  002A2E  360E               	rlcf	(i1___aodiv@divisor+5)^0,f,c
  9188  002A30  360F               	rlcf	(i1___aodiv@divisor+6)^0,f,c
  9189  002A32  3610               	rlcf	(i1___aodiv@divisor+7)^0,f,c
  9190  002A34  2A11               	incf	i1___aodiv@counter^0,f,c
  9191  002A36                     i1l4184:
  9192  002A36  AE10               	btfss	(i1___aodiv@divisor+7)^0,7,c
  9193  002A38  EF20  F015         	goto	i1u462_21
  9194  002A3C  EF22  F015         	goto	i1u462_20
  9195  002A40                     i1u462_21:
  9196  002A40  EF11  F015         	goto	i1l4182
  9197  002A44                     i1u462_20:
  9198  002A44                     i1l4186:
  9199  002A44  90D8               	bcf	status,0,c
  9200  002A46  3613               	rlcf	i1___aodiv@quotient^0,f,c
  9201  002A48  3614               	rlcf	(i1___aodiv@quotient+1)^0,f,c
  9202  002A4A  3615               	rlcf	(i1___aodiv@quotient+2)^0,f,c
  9203  002A4C  3616               	rlcf	(i1___aodiv@quotient+3)^0,f,c
  9204  002A4E  3617               	rlcf	(i1___aodiv@quotient+4)^0,f,c
  9205  002A50  3618               	rlcf	(i1___aodiv@quotient+5)^0,f,c
  9206  002A52  3619               	rlcf	(i1___aodiv@quotient+6)^0,f,c
  9207  002A54  361A               	rlcf	(i1___aodiv@quotient+7)^0,f,c
  9208  002A56  5009               	movf	i1___aodiv@divisor^0,w,c
  9209  002A58  5C01               	subwf	i1___aodiv@dividend^0,w,c
  9210  002A5A  500A               	movf	(i1___aodiv@divisor+1)^0,w,c
  9211  002A5C  5802               	subwfb	(i1___aodiv@dividend+1)^0,w,c
  9212  002A5E  500B               	movf	(i1___aodiv@divisor+2)^0,w,c
  9213  002A60  5803               	subwfb	(i1___aodiv@dividend+2)^0,w,c
  9214  002A62  500C               	movf	(i1___aodiv@divisor+3)^0,w,c
  9215  002A64  5804               	subwfb	(i1___aodiv@dividend+3)^0,w,c
  9216  002A66  500D               	movf	(i1___aodiv@divisor+4)^0,w,c
  9217  002A68  5805               	subwfb	(i1___aodiv@dividend+4)^0,w,c
  9218  002A6A  500E               	movf	(i1___aodiv@divisor+5)^0,w,c
  9219  002A6C  5806               	subwfb	(i1___aodiv@dividend+5)^0,w,c
  9220  002A6E  500F               	movf	(i1___aodiv@divisor+6)^0,w,c
  9221  002A70  5807               	subwfb	(i1___aodiv@dividend+6)^0,w,c
  9222  002A72  5010               	movf	(i1___aodiv@divisor+7)^0,w,c
  9223  002A74  5808               	subwfb	(i1___aodiv@dividend+7)^0,w,c
  9224  002A76  A0D8               	btfss	status,0,c
  9225  002A78  EF40  F015         	goto	i1u463_21
  9226  002A7C  EF42  F015         	goto	i1u463_20
  9227  002A80                     i1u463_21:
  9228  002A80  EF53  F015         	goto	i1l4194
  9229  002A84                     i1u463_20:
  9230  002A84  5009               	movf	i1___aodiv@divisor^0,w,c
  9231  002A86  5E01               	subwf	i1___aodiv@dividend^0,f,c
  9232  002A88  500A               	movf	(i1___aodiv@divisor+1)^0,w,c
  9233  002A8A  5A02               	subwfb	(i1___aodiv@dividend+1)^0,f,c
  9234  002A8C  500B               	movf	(i1___aodiv@divisor+2)^0,w,c
  9235  002A8E  5A03               	subwfb	(i1___aodiv@dividend+2)^0,f,c
  9236  002A90  500C               	movf	(i1___aodiv@divisor+3)^0,w,c
  9237  002A92  5A04               	subwfb	(i1___aodiv@dividend+3)^0,f,c
  9238  002A94  500D               	movf	(i1___aodiv@divisor+4)^0,w,c
  9239  002A96  5A05               	subwfb	(i1___aodiv@dividend+4)^0,f,c
  9240  002A98  500E               	movf	(i1___aodiv@divisor+5)^0,w,c
  9241  002A9A  5A06               	subwfb	(i1___aodiv@dividend+5)^0,f,c
  9242  002A9C  500F               	movf	(i1___aodiv@divisor+6)^0,w,c
  9243  002A9E  5A07               	subwfb	(i1___aodiv@dividend+6)^0,f,c
  9244  002AA0  5010               	movf	(i1___aodiv@divisor+7)^0,w,c
  9245  002AA2  5A08               	subwfb	(i1___aodiv@dividend+7)^0,f,c
  9246  002AA4  8013               	bsf	i1___aodiv@quotient^0,0,c
  9247  002AA6                     i1l4194:
  9248  002AA6  90D8               	bcf	status,0,c
  9249  002AA8  3210               	rrcf	(i1___aodiv@divisor+7)^0,f,c
  9250  002AAA  320F               	rrcf	(i1___aodiv@divisor+6)^0,f,c
  9251  002AAC  320E               	rrcf	(i1___aodiv@divisor+5)^0,f,c
  9252  002AAE  320D               	rrcf	(i1___aodiv@divisor+4)^0,f,c
  9253  002AB0  320C               	rrcf	(i1___aodiv@divisor+3)^0,f,c
  9254  002AB2  320B               	rrcf	(i1___aodiv@divisor+2)^0,f,c
  9255  002AB4  320A               	rrcf	(i1___aodiv@divisor+1)^0,f,c
  9256  002AB6  3209               	rrcf	i1___aodiv@divisor^0,f,c
  9257  002AB8  2E11               	decfsz	i1___aodiv@counter^0,f,c
  9258  002ABA  EF22  F015         	goto	i1l4186
  9259  002ABE                     i1l4198:
  9260  002ABE  5012               	movf	i1___aodiv@sign^0,w,c
  9261  002AC0  B4D8               	btfsc	status,2,c
  9262  002AC2  EF65  F015         	goto	i1u464_21
  9263  002AC6  EF67  F015         	goto	i1u464_20
  9264  002ACA                     i1u464_21:
  9265  002ACA  EF77  F015         	goto	i1l4202
  9266  002ACE                     i1u464_20:
  9267  002ACE  1E1A               	comf	(i1___aodiv@quotient+7)^0,f,c
  9268  002AD0  1E19               	comf	(i1___aodiv@quotient+6)^0,f,c
  9269  002AD2  1E18               	comf	(i1___aodiv@quotient+5)^0,f,c
  9270  002AD4  1E17               	comf	(i1___aodiv@quotient+4)^0,f,c
  9271  002AD6  1E16               	comf	(i1___aodiv@quotient+3)^0,f,c
  9272  002AD8  1E15               	comf	(i1___aodiv@quotient+2)^0,f,c
  9273  002ADA  1E14               	comf	(i1___aodiv@quotient+1)^0,f,c
  9274  002ADC  6C13               	negf	i1___aodiv@quotient^0,c
  9275  002ADE  0E00               	movlw	0
  9276  002AE0  2214               	addwfc	(i1___aodiv@quotient+1)^0,f,c
  9277  002AE2  2215               	addwfc	(i1___aodiv@quotient+2)^0,f,c
  9278  002AE4  2216               	addwfc	(i1___aodiv@quotient+3)^0,f,c
  9279  002AE6  2217               	addwfc	(i1___aodiv@quotient+4)^0,f,c
  9280  002AE8  2218               	addwfc	(i1___aodiv@quotient+5)^0,f,c
  9281  002AEA  2219               	addwfc	(i1___aodiv@quotient+6)^0,f,c
  9282  002AEC  221A               	addwfc	(i1___aodiv@quotient+7)^0,f,c
  9283  002AEE                     i1l4202:
  9284  002AEE  C013  F001         	movff	i1___aodiv@quotient,?i1___aodiv
  9285  002AF2  C014  F002         	movff	i1___aodiv@quotient+1,?i1___aodiv+1
  9286  002AF6  C015  F003         	movff	i1___aodiv@quotient+2,?i1___aodiv+2
  9287  002AFA  C016  F004         	movff	i1___aodiv@quotient+3,?i1___aodiv+3
  9288  002AFE  C017  F005         	movff	i1___aodiv@quotient+4,?i1___aodiv+4
  9289  002B02  C018  F006         	movff	i1___aodiv@quotient+5,?i1___aodiv+5
  9290  002B06  C019  F007         	movff	i1___aodiv@quotient+6,?i1___aodiv+6
  9291  002B0A  C01A  F008         	movff	i1___aodiv@quotient+7,?i1___aodiv+7
  9292  002B0E  0012               	return		;funcret
  9293  002B10                     __end_ofi1___aodiv:
  9294                           	callstack 0
  9295                           
  9296 ;; *************** function i1_atoi *****************
  9297 ;; Defined at:
  9298 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
  9299 ;; Parameters:    Size  Location     Type
  9300 ;;  s               2    7[COMRAM] PTR const unsigned char 
  9301 ;;		 -> STR_4(6), STR_3(19), STR_2(19), STR_1(5), 
  9302 ;; Auto vars:     Size  Location     Type
  9303 ;;  n               2   20[COMRAM] int 
  9304 ;;  neg             2   13[COMRAM] int 
  9305 ;; Return value:  Size  Location     Type
  9306 ;;                  2    7[COMRAM] int 
  9307 ;; Registers used:
  9308 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9309 ;; Tracked objects:
  9310 ;;		On entry : 0/0
  9311 ;;		On exit  : 0/0
  9312 ;;		Unchanged: 0/0
  9313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9314 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9315 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9316 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9317 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9318 ;;Total ram usage:       15 bytes
  9319 ;; Hardware stack levels used:    1
  9320 ;; Hardware stack levels required when called:    2
  9321 ;; This function calls:
  9322 ;;		i1___wmul
  9323 ;;		i1_isdigit
  9324 ;;		i1_isspace
  9325 ;; This function is called by:
  9326 ;;		i1_vfpfcnvrt
  9327 ;; This function uses a non-reentrant model
  9328 ;;
  9329                           
  9330                           	psect	text47
  9331  0024CE                     __ptext47:
  9332                           	callstack 0
  9333  0024CE                     i1_atoi:
  9334                           	callstack 15
  9335  0024CE  0E00               	movlw	0
  9336  0024D0  6E16               	movwf	(i1atoi@n+1)^0,c
  9337  0024D2  0E00               	movlw	0
  9338  0024D4  6E15               	movwf	i1atoi@n^0,c
  9339  0024D6  0E00               	movlw	0
  9340  0024D8  6E0F               	movwf	(i1atoi@neg+1)^0,c
  9341  0024DA  0E00               	movlw	0
  9342  0024DC  6E0E               	movwf	i1atoi@neg^0,c
  9343  0024DE  EF73  F012         	goto	i1l4504
  9344  0024E2                     i1l4502:
  9345  0024E2  4A08               	infsnz	i1atoi@s^0,f,c
  9346  0024E4  2A09               	incf	(i1atoi@s+1)^0,f,c
  9347  0024E6                     i1l4504:
  9348  0024E6  0E01               	movlw	1
  9349  0024E8  6E14               	movwf	i1_atoi$1909^0,c
  9350  0024EA  C008  FFF6         	movff	i1atoi@s,tblptrl
  9351  0024EE  C009  FFF7         	movff	i1atoi@s+1,tblptrh
  9352  0024F2                     	if	0	;tblptru may be non-zero
  9353  0024F2                     	endif
  9354  0024F2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9355  0024F2  0E00               	movlw	low (__mediumconst shr (0+16))
  9356  0024F4  6EF8               	movwf	tblptru,c
  9357  0024F6                     	endif
  9358  0024F6  0008               	tblrd		*
  9359  0024F8  50F5               	movf	tablat,w,c
  9360  0024FA  0A20               	xorlw	32
  9361  0024FC  B4D8               	btfsc	status,2,c
  9362  0024FE  EF83  F012         	goto	i1u516_21
  9363  002502  EF85  F012         	goto	i1u516_20
  9364  002506                     i1u516_21:
  9365  002506  EFA4  F012         	goto	i1l4512
  9366  00250A                     i1u516_20:
  9367  00250A  0EF7               	movlw	247
  9368  00250C  6E0A               	movwf	??i1_atoi^0,c
  9369  00250E  0EFF               	movlw	255
  9370  002510  6E0B               	movwf	(??i1_atoi+1)^0,c
  9371  002512  C008  FFF6         	movff	i1atoi@s,tblptrl
  9372  002516  C009  FFF7         	movff	i1atoi@s+1,tblptrh
  9373  00251A                     	if	0	;tblptru may be non-zero
  9374  00251A                     	endif
  9375  00251A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9376  00251A  0E00               	movlw	low (__mediumconst shr (0+16))
  9377  00251C  6EF8               	movwf	tblptru,c
  9378  00251E                     	endif
  9379  00251E  0008               	tblrd		*
  9380  002520  50F5               	movf	tablat,w,c
  9381  002522  6E0C               	movwf	(??i1_atoi+2)^0,c
  9382  002524  6A0D               	clrf	(??i1_atoi+3)^0,c
  9383  002526  500A               	movf	??i1_atoi^0,w,c
  9384  002528  260C               	addwf	(??i1_atoi+2)^0,f,c
  9385  00252A  500B               	movf	(??i1_atoi+1)^0,w,c
  9386  00252C  220D               	addwfc	(??i1_atoi+3)^0,f,c
  9387  00252E  500D               	movf	(??i1_atoi+3)^0,w,c
  9388  002530  E109               	bnz	i1u517_20
  9389  002532  0E05               	movlw	5
  9390  002534  5C0C               	subwf	(??i1_atoi+2)^0,w,c
  9391  002536  A0D8               	btfss	status,0,c
  9392  002538  EFA0  F012         	goto	i1u517_21
  9393  00253C  EFA2  F012         	goto	i1u517_20
  9394  002540                     i1u517_21:
  9395  002540  EFA4  F012         	goto	i1l4512
  9396  002544                     i1u517_20:
  9397  002544  0E00               	movlw	0
  9398  002546  6E14               	movwf	i1_atoi$1909^0,c
  9399  002548                     i1l4512:
  9400  002548  C014  F010         	movff	i1_atoi$1909,i1_atoi$1908
  9401  00254C  6A11               	clrf	(i1_atoi$1908+1)^0,c
  9402  00254E  5010               	movf	i1_atoi$1908^0,w,c
  9403  002550  1011               	iorwf	(i1_atoi$1908+1)^0,w,c
  9404  002552  A4D8               	btfss	status,2,c
  9405  002554  EFAE  F012         	goto	i1u518_21
  9406  002558  EFB0  F012         	goto	i1u518_20
  9407  00255C                     i1u518_21:
  9408  00255C  EF71  F012         	goto	i1l4502
  9409  002560                     i1u518_20:
  9410  002560  EFBA  F012         	goto	i1l4522
  9411  002564                     i1l4518:
  9412  002564  0E00               	movlw	0
  9413  002566  6E0F               	movwf	(i1atoi@neg+1)^0,c
  9414  002568  0E01               	movlw	1
  9415  00256A  6E0E               	movwf	i1atoi@neg^0,c
  9416  00256C                     i1l4520:
  9417  00256C  4A08               	infsnz	i1atoi@s^0,f,c
  9418  00256E  2A09               	incf	(i1atoi@s+1)^0,f,c
  9419  002570  EFF3  F012         	goto	i1l4528
  9420  002574                     i1l4522:
  9421  002574  C008  FFF6         	movff	i1atoi@s,tblptrl
  9422  002578  C009  FFF7         	movff	i1atoi@s+1,tblptrh
  9423  00257C                     	if	0	;tblptru may be non-zero
  9424  00257C                     	endif
  9425  00257C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9426  00257C  0E00               	movlw	low (__mediumconst shr (0+16))
  9427  00257E  6EF8               	movwf	tblptru,c
  9428  002580                     	endif
  9429  002580  0008               	tblrd		*
  9430  002582  50F5               	movf	tablat,w,c
  9431  002584  6E0A               	movwf	??i1_atoi^0,c
  9432  002586  6A0B               	clrf	(??i1_atoi+1)^0,c
  9433                           
  9434                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9435                           ; Switch size 1, requested type "simple"
  9436                           ; Number of cases is 1, Range of values is 0 to 0
  9437                           ; switch strategies available:
  9438                           ; Name         Instructions Cycles
  9439                           ; simple_byte            4     3 (average)
  9440                           ;	Chosen strategy is simple_byte
  9441  002588  500B               	movf	(??i1_atoi+1)^0,w,c
  9442  00258A  0A00               	xorlw	0	; case 0
  9443  00258C  B4D8               	btfsc	status,2,c
  9444  00258E  EFCB  F012         	goto	i1l5138
  9445  002592  EFF3  F012         	goto	i1l4528
  9446  002596                     i1l5138:
  9447                           
  9448                           ; Switch size 1, requested type "simple"
  9449                           ; Number of cases is 2, Range of values is 43 to 45
  9450                           ; switch strategies available:
  9451                           ; Name         Instructions Cycles
  9452                           ; simple_byte            7     4 (average)
  9453                           ;	Chosen strategy is simple_byte
  9454  002596  500A               	movf	??i1_atoi^0,w,c
  9455  002598  0A2B               	xorlw	43	; case 43
  9456  00259A  B4D8               	btfsc	status,2,c
  9457  00259C  EFB6  F012         	goto	i1l4520
  9458  0025A0  0A06               	xorlw	6	; case 45
  9459  0025A2  B4D8               	btfsc	status,2,c
  9460  0025A4  EFB2  F012         	goto	i1l4518
  9461  0025A8  EFF3  F012         	goto	i1l4528
  9462  0025AC                     i1l4524:
  9463  0025AC  C015  F001         	movff	i1atoi@n,i1___wmul@multiplier
  9464  0025B0  C016  F002         	movff	i1atoi@n+1,i1___wmul@multiplier+1
  9465  0025B4  0E00               	movlw	0
  9466  0025B6  6E04               	movwf	(i1___wmul@multiplicand+1)^0,c
  9467  0025B8  0E0A               	movlw	10
  9468  0025BA  6E03               	movwf	i1___wmul@multiplicand^0,c
  9469  0025BC  ECA9  F01D         	call	i1___wmul	;wreg free
  9470  0025C0  C008  FFF6         	movff	i1atoi@s,tblptrl
  9471  0025C4  C009  FFF7         	movff	i1atoi@s+1,tblptrh
  9472  0025C8                     	if	0	;tblptru may be non-zero
  9473  0025C8                     	endif
  9474  0025C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9475  0025C8  0E00               	movlw	low (__mediumconst shr (0+16))
  9476  0025CA  6EF8               	movwf	tblptru,c
  9477  0025CC                     	endif
  9478  0025CC  0008               	tblrd		*
  9479  0025CE  50F5               	movf	tablat,w,c
  9480  0025D0  5E01               	subwf	?i1___wmul^0,f,c
  9481  0025D2  0E00               	movlw	0
  9482  0025D4  5A02               	subwfb	(?i1___wmul+1)^0,f,c
  9483  0025D6  0E30               	movlw	48
  9484  0025D8  2401               	addwf	?i1___wmul^0,w,c
  9485  0025DA  6E15               	movwf	i1atoi@n^0,c
  9486  0025DC  0E00               	movlw	0
  9487  0025DE  2002               	addwfc	(?i1___wmul+1)^0,w,c
  9488  0025E0  6E16               	movwf	(i1atoi@n+1)^0,c
  9489  0025E2  EFB6  F012         	goto	i1l4520
  9490  0025E6                     i1l4528:
  9491  0025E6  0ED0               	movlw	208
  9492  0025E8  6E0A               	movwf	??i1_atoi^0,c
  9493  0025EA  0EFF               	movlw	255
  9494  0025EC  6E0B               	movwf	(??i1_atoi+1)^0,c
  9495  0025EE  C008  FFF6         	movff	i1atoi@s,tblptrl
  9496  0025F2  C009  FFF7         	movff	i1atoi@s+1,tblptrh
  9497  0025F6                     	if	0	;tblptru may be non-zero
  9498  0025F6                     	endif
  9499  0025F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9500  0025F6  0E00               	movlw	low (__mediumconst shr (0+16))
  9501  0025F8  6EF8               	movwf	tblptru,c
  9502  0025FA                     	endif
  9503  0025FA  0008               	tblrd		*
  9504  0025FC  50F5               	movf	tablat,w,c
  9505  0025FE  6E0C               	movwf	(??i1_atoi+2)^0,c
  9506  002600  6A0D               	clrf	(??i1_atoi+3)^0,c
  9507  002602  500A               	movf	??i1_atoi^0,w,c
  9508  002604  260C               	addwf	(??i1_atoi+2)^0,f,c
  9509  002606  500B               	movf	(??i1_atoi+1)^0,w,c
  9510  002608  220D               	addwfc	(??i1_atoi+3)^0,f,c
  9511  00260A  500D               	movf	(??i1_atoi+3)^0,w,c
  9512  00260C  E10A               	bnz	i1u519_20
  9513  00260E  0E0A               	movlw	10
  9514  002610  5C0C               	subwf	(??i1_atoi+2)^0,w,c
  9515  002612  A0D8               	btfss	status,0,c
  9516  002614  EF0E  F013         	goto	i1u519_21
  9517  002618  EF11  F013         	goto	i1u519_20
  9518  00261C                     i1u519_21:
  9519  00261C  0E01               	movlw	1
  9520  00261E  EF12  F013         	goto	i1u520_20
  9521  002622                     i1u519_20:
  9522  002622  0E00               	movlw	0
  9523  002624                     i1u520_20:
  9524  002624  6E12               	movwf	i1_atoi$1910^0,c
  9525  002626  6A13               	clrf	(i1_atoi$1910+1)^0,c
  9526  002628  5012               	movf	i1_atoi$1910^0,w,c
  9527  00262A  1013               	iorwf	(i1_atoi$1910+1)^0,w,c
  9528  00262C  A4D8               	btfss	status,2,c
  9529  00262E  EF1B  F013         	goto	i1u521_21
  9530  002632  EF1D  F013         	goto	i1u521_20
  9531  002636                     i1u521_21:
  9532  002636  EFD6  F012         	goto	i1l4524
  9533  00263A                     i1u521_20:
  9534  00263A  500E               	movf	i1atoi@neg^0,w,c
  9535  00263C  100F               	iorwf	(i1atoi@neg+1)^0,w,c
  9536  00263E  A4D8               	btfss	status,2,c
  9537  002640  EF24  F013         	goto	i1u522_21
  9538  002644  EF26  F013         	goto	i1u522_20
  9539  002648                     i1u522_21:
  9540  002648  EF34  F013         	goto	i1l1081
  9541  00264C                     i1u522_20:
  9542  00264C  C015  F00A         	movff	i1atoi@n,??i1_atoi
  9543  002650  C016  F00B         	movff	i1atoi@n+1,??i1_atoi+1
  9544  002654  1E0A               	comf	??i1_atoi^0,f,c
  9545  002656  1E0B               	comf	(??i1_atoi+1)^0,f,c
  9546  002658  4A0A               	infsnz	??i1_atoi^0,f,c
  9547  00265A  2A0B               	incf	(??i1_atoi+1)^0,f,c
  9548  00265C  C00A  F008         	movff	??i1_atoi,?i1_atoi
  9549  002660  C00B  F009         	movff	??i1_atoi+1,?i1_atoi+1
  9550  002664  EF38  F013         	goto	i1l1084
  9551  002668                     i1l1081:
  9552  002668  C015  F008         	movff	i1atoi@n,?i1_atoi
  9553  00266C  C016  F009         	movff	i1atoi@n+1,?i1_atoi+1
  9554  002670                     i1l1084:
  9555  002670  0012               	return		;funcret
  9556  002672                     __end_ofi1_atoi:
  9557                           	callstack 0
  9558                           
  9559 ;; *************** function i1_isspace *****************
  9560 ;; Defined at:
  9561 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
  9562 ;; Parameters:    Size  Location     Type
  9563 ;;  c               2    0[COMRAM] int 
  9564 ;; Auto vars:     Size  Location     Type
  9565 ;;		None
  9566 ;; Return value:  Size  Location     Type
  9567 ;;                  2    0[COMRAM] int 
  9568 ;; Registers used:
  9569 ;;		wreg, status,2, status,0
  9570 ;; Tracked objects:
  9571 ;;		On entry : 0/0
  9572 ;;		On exit  : 0/0
  9573 ;;		Unchanged: 0/0
  9574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9576 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9577 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9578 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9579 ;;Total ram usage:        7 bytes
  9580 ;; Hardware stack levels used:    1
  9581 ;; Hardware stack levels required when called:    1
  9582 ;; This function calls:
  9583 ;;		Nothing
  9584 ;; This function is called by:
  9585 ;;		i1_atoi
  9586 ;; This function uses a non-reentrant model
  9587 ;;
  9588                           
  9589                           	psect	text48
  9590  00374A                     __ptext48:
  9591                           	callstack 0
  9592  00374A                     i1_isspace:
  9593                           	callstack 15
  9594  00374A  0E01               	movlw	1
  9595  00374C  6E07               	movwf	i1_isspace$1926^0,c
  9596  00374E  0E20               	movlw	32
  9597  003750  1801               	xorwf	i1isspace@c^0,w,c
  9598  003752  1002               	iorwf	(i1isspace@c+1)^0,w,c
  9599  003754  B4D8               	btfsc	status,2,c
  9600  003756  EFAF  F01B         	goto	i1u478_21
  9601  00375A  EFB1  F01B         	goto	i1u478_20
  9602  00375E                     i1u478_21:
  9603  00375E  EFCA  F01B         	goto	i1l4280
  9604  003762                     i1u478_20:
  9605  003762  0EF7               	movlw	247
  9606  003764  6E03               	movwf	??i1_isspace^0,c
  9607  003766  0EFF               	movlw	255
  9608  003768  6E04               	movwf	(??i1_isspace+1)^0,c
  9609  00376A  C001  F005         	movff	i1isspace@c,??i1_isspace+2
  9610  00376E  C002  F006         	movff	i1isspace@c+1,??i1_isspace+3
  9611  003772  5003               	movf	??i1_isspace^0,w,c
  9612  003774  2605               	addwf	(??i1_isspace+2)^0,f,c
  9613  003776  5004               	movf	(??i1_isspace+1)^0,w,c
  9614  003778  2206               	addwfc	(??i1_isspace+3)^0,f,c
  9615  00377A  5006               	movf	(??i1_isspace+3)^0,w,c
  9616  00377C  E109               	bnz	i1u479_20
  9617  00377E  0E05               	movlw	5
  9618  003780  5C05               	subwf	(??i1_isspace+2)^0,w,c
  9619  003782  A0D8               	btfss	status,0,c
  9620  003784  EFC6  F01B         	goto	i1u479_21
  9621  003788  EFC8  F01B         	goto	i1u479_20
  9622  00378C                     i1u479_21:
  9623  00378C  EFCA  F01B         	goto	i1l4280
  9624  003790                     i1u479_20:
  9625  003790  0E00               	movlw	0
  9626  003792  6E07               	movwf	i1_isspace$1926^0,c
  9627  003794                     i1l4280:
  9628  003794  C007  F001         	movff	i1_isspace$1926,?i1_isspace
  9629  003798  6A02               	clrf	(?i1_isspace+1)^0,c
  9630  00379A  0012               	return		;funcret
  9631  00379C                     __end_ofi1_isspace:
  9632                           	callstack 0
  9633                           
  9634 ;; *************** function i1_isdigit *****************
  9635 ;; Defined at:
  9636 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
  9637 ;; Parameters:    Size  Location     Type
  9638 ;;  c               2    0[COMRAM] int 
  9639 ;; Auto vars:     Size  Location     Type
  9640 ;;		None
  9641 ;; Return value:  Size  Location     Type
  9642 ;;                  2    0[COMRAM] int 
  9643 ;; Registers used:
  9644 ;;		wreg, status,2, status,0
  9645 ;; Tracked objects:
  9646 ;;		On entry : 0/0
  9647 ;;		On exit  : 0/0
  9648 ;;		Unchanged: 0/0
  9649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9650 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9652 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9653 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9654 ;;Total ram usage:        6 bytes
  9655 ;; Hardware stack levels used:    1
  9656 ;; Hardware stack levels required when called:    1
  9657 ;; This function calls:
  9658 ;;		Nothing
  9659 ;; This function is called by:
  9660 ;;		i1_vfpfcnvrt
  9661 ;;		i1_atoi
  9662 ;; This function uses a non-reentrant model
  9663 ;;
  9664                           
  9665                           	psect	text49
  9666  003A18                     __ptext49:
  9667                           	callstack 0
  9668  003A18                     i1_isdigit:
  9669                           	callstack 16
  9670  003A18  0ED0               	movlw	208
  9671  003A1A  6E03               	movwf	??i1_isdigit^0,c
  9672  003A1C  0EFF               	movlw	255
  9673  003A1E  6E04               	movwf	(??i1_isdigit+1)^0,c
  9674  003A20  C001  F005         	movff	i1isdigit@c,??i1_isdigit+2
  9675  003A24  C002  F006         	movff	i1isdigit@c+1,??i1_isdigit+3
  9676  003A28  5003               	movf	??i1_isdigit^0,w,c
  9677  003A2A  2605               	addwf	(??i1_isdigit+2)^0,f,c
  9678  003A2C  5004               	movf	(??i1_isdigit+1)^0,w,c
  9679  003A2E  2206               	addwfc	(??i1_isdigit+3)^0,f,c
  9680  003A30  5006               	movf	(??i1_isdigit+3)^0,w,c
  9681  003A32  E10A               	bnz	i1u476_20
  9682  003A34  0E0A               	movlw	10
  9683  003A36  5C05               	subwf	(??i1_isdigit+2)^0,w,c
  9684  003A38  A0D8               	btfss	status,0,c
  9685  003A3A  EF21  F01D         	goto	i1u476_21
  9686  003A3E  EF24  F01D         	goto	i1u476_20
  9687  003A42                     i1u476_21:
  9688  003A42  0E01               	movlw	1
  9689  003A44  EF25  F01D         	goto	i1u477_20
  9690  003A48                     i1u476_20:
  9691  003A48  0E00               	movlw	0
  9692  003A4A                     i1u477_20:
  9693  003A4A  6E01               	movwf	?i1_isdigit^0,c
  9694  003A4C  6A02               	clrf	(?i1_isdigit+1)^0,c
  9695  003A4E  0012               	return		;funcret
  9696  003A50                     __end_ofi1_isdigit:
  9697                           	callstack 0
  9698                           
  9699 ;; *************** function i1___wmul *****************
  9700 ;; Defined at:
  9701 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  9702 ;; Parameters:    Size  Location     Type
  9703 ;;  multiplier      2    0[COMRAM] unsigned int 
  9704 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9705 ;; Auto vars:     Size  Location     Type
  9706 ;;  product         2    4[COMRAM] unsigned int 
  9707 ;; Return value:  Size  Location     Type
  9708 ;;                  2    0[COMRAM] unsigned int 
  9709 ;; Registers used:
  9710 ;;		wreg, status,2, status,0, prodl, prodh
  9711 ;; Tracked objects:
  9712 ;;		On entry : 0/0
  9713 ;;		On exit  : 0/0
  9714 ;;		Unchanged: 0/0
  9715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9716 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9717 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9719 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9720 ;;Total ram usage:        6 bytes
  9721 ;; Hardware stack levels used:    1
  9722 ;; Hardware stack levels required when called:    1
  9723 ;; This function calls:
  9724 ;;		Nothing
  9725 ;; This function is called by:
  9726 ;;		i1_atoi
  9727 ;; This function uses a non-reentrant model
  9728 ;;
  9729                           
  9730                           	psect	text50
  9731  003B52                     __ptext50:
  9732                           	callstack 0
  9733  003B52                     i1___wmul:
  9734                           	callstack 15
  9735  003B52  5001               	movf	i1___wmul@multiplier^0,w,c
  9736  003B54  0203               	mulwf	i1___wmul@multiplicand^0,c
  9737  003B56  CFF3 F005          	movff	prodl,i1___wmul@product
  9738  003B5A  CFF4 F006          	movff	prodh,i1___wmul@product+1
  9739  003B5E  5001               	movf	i1___wmul@multiplier^0,w,c
  9740  003B60  0204               	mulwf	(i1___wmul@multiplicand+1)^0,c
  9741  003B62  50F3               	movf	243,w,c
  9742  003B64  2606               	addwf	(i1___wmul@product+1)^0,f,c
  9743  003B66  5002               	movf	(i1___wmul@multiplier+1)^0,w,c
  9744  003B68  0203               	mulwf	i1___wmul@multiplicand^0,c
  9745  003B6A  50F3               	movf	243,w,c
  9746  003B6C  2606               	addwf	(i1___wmul@product+1)^0,f,c
  9747  003B6E  C005  F001         	movff	i1___wmul@product,?i1___wmul
  9748  003B72  C006  F002         	movff	i1___wmul@product+1,?i1___wmul+1
  9749  003B76  0012               	return		;funcret
  9750  003B78                     __end_ofi1___wmul:
  9751                           	callstack 0
  9752                           
  9753 ;; *************** function _TimerISR *****************
  9754 ;; Defined at:
  9755 ;;		line 50 in file "interrupts.c"
  9756 ;; Parameters:    Size  Location     Type
  9757 ;;		None
  9758 ;; Auto vars:     Size  Location     Type
  9759 ;;		None
  9760 ;; Return value:  Size  Location     Type
  9761 ;;                  1    wreg      void 
  9762 ;; Registers used:
  9763 ;;		wreg, status,2, status,0
  9764 ;; Tracked objects:
  9765 ;;		On entry : 0/0
  9766 ;;		On exit  : 0/0
  9767 ;;		Unchanged: 0/0
  9768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9773 ;;Total ram usage:        0 bytes
  9774 ;; Hardware stack levels used:    1
  9775 ;; This function calls:
  9776 ;;		Nothing
  9777 ;; This function is called by:
  9778 ;;		Interrupt level 2
  9779 ;; This function uses a non-reentrant model
  9780 ;;
  9781                           
  9782                           	psect	intcode
  9783  000008                     __pintcode:
  9784                           	callstack 0
  9785  000008                     _TimerISR:
  9786                           	callstack 12
  9787                           
  9788                           ;incstack = 0
  9789  000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9790  00000A  EF98  F01C         	goto	int_func
  9791                           
  9792                           	psect	intcode_body
  9793  003930                     __pintcode_body:
  9794                           	callstack 12
  9795  003930                     int_func:
  9796                           	callstack 12
  9797  003930                     
  9798                           ;interrupts.c: 52:     if (PIR0bits.TMR0IF)
  9799  003930  010E               	movlb	14	; () banked
  9800  003932  AB33               	btfss	51,5,b	;volatile
  9801  003934  EF9E  F01C         	goto	i2u382_41
  9802  003938  EFA0  F01C         	goto	i2u382_40
  9803  00393C                     i2u382_41:
  9804  00393C  EFB4  F01C         	goto	i2l177
  9805  003940                     i2u382_40:
  9806  003940                     
  9807                           ; BSR set to: 14
  9808                           ;interrupts.c: 54:     {;interrupts.c: 55:         PIR0bits.TMR0IF = 0;
  9809  003940  9B33               	bcf	51,5,b	;volatile
  9810  003942                     
  9811                           ; BSR set to: 14
  9812                           ;interrupts.c: 56:         seconds_counter += (1);
  9813  003942  0101               	movlb	1	; () banked
  9814  003944  4B9F               	infsnz	_seconds_counter& (0+255),f,b
  9815  003946  2BA0               	incf	(_seconds_counter+1)& (0+255),f,b
  9816  003948                     
  9817                           ; BSR set to: 1
  9818                           ;interrupts.c: 58:         TMR0H = (0b00001011);
  9819  003948  0E0B               	movlw	11
  9820  00394A  6ED4               	movwf	212,c	;volatile
  9821  00394C                     
  9822                           ; BSR set to: 1
  9823                           ;interrupts.c: 59:         TMR0L = (0b11011100);
  9824  00394C  0EDC               	movlw	220
  9825  00394E  6ED3               	movwf	211,c	;volatile
  9826  003950                     
  9827                           ; BSR set to: 1
  9828                           ;interrupts.c: 60:         if (sun){
  9829  003950  0100               	movlb	0	; () banked
  9830  003952  51E2               	movf	_sun& (0+255),w,b
  9831  003954  B4D8               	btfsc	status,2,c
  9832  003956  EFAF  F01C         	goto	i2u383_41
  9833  00395A  EFB1  F01C         	goto	i2u383_40
  9834  00395E                     i2u383_41:
  9835  00395E  EFB4  F01C         	goto	i2l177
  9836  003962                     i2u383_40:
  9837  003962                     
  9838                           ; BSR set to: 0
  9839                           ;interrupts.c: 61:             seconds_check += (1);
  9840  003962  0101               	movlb	1	; () banked
  9841  003964  4B9D               	infsnz	_seconds_check& (0+255),f,b
  9842  003966  2B9E               	incf	(_seconds_check+1)& (0+255),f,b
  9843  003968                     i2l177:
  9844  003968  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9845  00396A  0011               	retfie		f
  9846  00396C                     __end_of_TimerISR:
  9847                           	callstack 0
  9848                           
  9849                           	psect	rparam
  9850  0000                     
  9851                           	psect	temp
  9852  00005E                     btemp:
  9853                           	callstack 0
  9854  00005E                     	ds	1
  9855  0000                     int$flags	set	btemp
  9856  0000                     wtemp8	set	btemp+1
  9857  0000                     ttemp5	set	btemp+1
  9858  0000                     ttemp6	set	btemp+4
  9859  0000                     ttemp7	set	btemp+8
  9860                           
  9861                           	psect	idloc
  9862                           
  9863                           ;Config register IDLOC0 @ 0x200000
  9864                           ;	unspecified, using default values
  9865  200000                     	org	2097152
  9866  200000  0FFF               	dw	4095
  9867                           
  9868                           ;Config register IDLOC1 @ 0x200002
  9869                           ;	unspecified, using default values
  9870  200002                     	org	2097154
  9871  200002  0FFF               	dw	4095
  9872                           
  9873                           ;Config register IDLOC2 @ 0x200004
  9874                           ;	unspecified, using default values
  9875  200004                     	org	2097156
  9876  200004  0FFF               	dw	4095
  9877                           
  9878                           ;Config register IDLOC3 @ 0x200006
  9879                           ;	unspecified, using default values
  9880  200006                     	org	2097158
  9881  200006  0FFF               	dw	4095
  9882                           
  9883                           ;Config register IDLOC4 @ 0x200008
  9884                           ;	unspecified, using default values
  9885  200008                     	org	2097160
  9886  200008  0FFF               	dw	4095
  9887                           
  9888                           ;Config register IDLOC5 @ 0x20000A
  9889                           ;	unspecified, using default values
  9890  20000A                     	org	2097162
  9891  20000A  0FFF               	dw	4095
  9892                           
  9893                           ;Config register IDLOC6 @ 0x20000C
  9894                           ;	unspecified, using default values
  9895  20000C                     	org	2097164
  9896  20000C  0FFF               	dw	4095
  9897                           
  9898                           ;Config register IDLOC7 @ 0x20000E
  9899                           ;	unspecified, using default values
  9900  20000E                     	org	2097166
  9901  20000E  0FFF               	dw	4095
  9902                           
  9903                           	psect	config
  9904                           
  9905                           ;Config register CONFIG1L @ 0x300000
  9906                           ;	External Oscillator mode Selection bits
  9907                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9908                           ;	Power-up default value for COSC bits
  9909                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9910  300000                     	org	3145728
  9911  300000  AA                 	db	170
  9912                           
  9913                           ;Config register CONFIG1H @ 0x300001
  9914                           ;	unspecified, using default values
  9915                           ;	Clock Out Enable bit
  9916                           ;	CLKOUTEN = 0x1, unprogrammed default
  9917                           ;	Clock Switch Enable bit
  9918                           ;	CSWEN = 0x1, unprogrammed default
  9919                           ;	Fail-Safe Clock Monitor Enable bit
  9920                           ;	FCMEN = 0x1, unprogrammed default
  9921  300001                     	org	3145729
  9922  300001  FF                 	db	255
  9923                           
  9924                           ;Config register CONFIG2L @ 0x300002
  9925                           ;	unspecified, using default values
  9926                           ;	Master Clear Enable bit
  9927                           ;	MCLRE = 0x1, unprogrammed default
  9928                           ;	Power-up Timer Enable bit
  9929                           ;	PWRTE = 0x1, unprogrammed default
  9930                           ;	Low-power BOR enable bit
  9931                           ;	LPBOREN = 0x1, unprogrammed default
  9932                           ;	Brown-out Reset Enable bits
  9933                           ;	BOREN = 0x3, unprogrammed default
  9934  300002                     	org	3145730
  9935  300002  FF                 	db	255
  9936                           
  9937                           ;Config register CONFIG2H @ 0x300003
  9938                           ;	unspecified, using default values
  9939                           ;	Brown Out Reset Voltage selection bits
  9940                           ;	BORV = 0x3, unprogrammed default
  9941                           ;	ZCD Disable bit
  9942                           ;	ZCD = 0x1, unprogrammed default
  9943                           ;	PPSLOCK bit One-Way Set Enable bit
  9944                           ;	PPS1WAY = 0x1, unprogrammed default
  9945                           ;	Stack Full/Underflow Reset Enable bit
  9946                           ;	STVREN = 0x1, unprogrammed default
  9947                           ;	Debugger Enable bit
  9948                           ;	DEBUG = 0x1, unprogrammed default
  9949                           ;	Extended Instruction Set Enable bit
  9950                           ;	XINST = 0x1, unprogrammed default
  9951  300003                     	org	3145731
  9952  300003  FF                 	db	255
  9953                           
  9954                           ;Config register CONFIG3L @ 0x300004
  9955                           ;	WDT Period Select bits
  9956                           ;	WDTCPS = 0x1F, unprogrammed default
  9957                           ;	WDT operating mode
  9958                           ;	WDTE = OFF, WDT Disabled
  9959  300004                     	org	3145732
  9960  300004  9F                 	db	159
  9961                           
  9962                           ;Config register CONFIG3H @ 0x300005
  9963                           ;	unspecified, using default values
  9964                           ;	WDT Window Select bits
  9965                           ;	WDTCWS = 0x7, unprogrammed default
  9966                           ;	WDT input clock selector
  9967                           ;	WDTCCS = 0x7, unprogrammed default
  9968  300005                     	org	3145733
  9969  300005  FF                 	db	255
  9970                           
  9971                           ;Config register CONFIG4L @ 0x300006
  9972                           ;	unspecified, using default values
  9973                           ;	Write Protection Block 0
  9974                           ;	WRT0 = 0x1, unprogrammed default
  9975                           ;	Write Protection Block 1
  9976                           ;	WRT1 = 0x1, unprogrammed default
  9977                           ;	Write Protection Block 2
  9978                           ;	WRT2 = 0x1, unprogrammed default
  9979                           ;	Write Protection Block 3
  9980                           ;	WRT3 = 0x1, unprogrammed default
  9981                           ;	Write Protection Block 3
  9982                           ;	WRT4 = 0x1, unprogrammed default
  9983                           ;	Write Protection Block 3
  9984                           ;	WRT5 = 0x1, unprogrammed default
  9985                           ;	Write Protection Block 3
  9986                           ;	WRT6 = 0x1, unprogrammed default
  9987                           ;	Write Protection Block 3
  9988                           ;	WRT7 = 0x1, unprogrammed default
  9989  300006                     	org	3145734
  9990  300006  FF                 	db	255
  9991                           
  9992                           ;Config register CONFIG4H @ 0x300007
  9993                           ;	unspecified, using default values
  9994                           ;	Configuration Register Write Protection bit
  9995                           ;	WRTC = 0x1, unprogrammed default
  9996                           ;	Boot Block Write Protection bit
  9997                           ;	WRTB = 0x1, unprogrammed default
  9998                           ;	Data EEPROM Write Protection bit
  9999                           ;	WRTD = 0x1, unprogrammed default
 10000                           ;	Scanner Enable bit
 10001                           ;	SCANE = 0x1, unprogrammed default
 10002                           ;	Low Voltage Programming Enable bit
 10003                           ;	LVP = 0x1, unprogrammed default
 10004  300007                     	org	3145735
 10005  300007  FF                 	db	255
 10006                           
 10007                           ;Config register CONFIG5L @ 0x300008
 10008                           ;	unspecified, using default values
 10009                           ;	UserNVM Program Memory Code Protection bit
 10010                           ;	CP = 0x1, unprogrammed default
 10011                           ;	DataNVM Memory Code Protection bit
 10012                           ;	CPD = 0x1, unprogrammed default
 10013  300008                     	org	3145736
 10014  300008  FF                 	db	255
 10015                           
 10016                           ;Config register CONFIG5H @ 0x300009
 10017                           ;	unspecified, using default values
 10018  300009                     	org	3145737
 10019  300009  FF                 	db	255
 10020                           
 10021                           ;Config register CONFIG6L @ 0x30000A
 10022                           ;	unspecified, using default values
 10023                           ;	Table Read Protection Block 0
 10024                           ;	EBTR0 = 0x1, unprogrammed default
 10025                           ;	Table Read Protection Block 1
 10026                           ;	EBTR1 = 0x1, unprogrammed default
 10027                           ;	Table Read Protection Block 2
 10028                           ;	EBTR2 = 0x1, unprogrammed default
 10029                           ;	Table Read Protection Block 3
 10030                           ;	EBTR3 = 0x1, unprogrammed default
 10031                           ;	Table Read Protection Block 4
 10032                           ;	EBTR4 = 0x1, unprogrammed default
 10033                           ;	Table Read Protection Block 5
 10034                           ;	EBTR5 = 0x1, unprogrammed default
 10035                           ;	Table Read Protection Block 6
 10036                           ;	EBTR6 = 0x1, unprogrammed default
 10037                           ;	Table Read Protection Block 7
 10038                           ;	EBTR7 = 0x1, unprogrammed default
 10039  30000A                     	org	3145738
 10040  30000A  FF                 	db	255
 10041                           
 10042                           ;Config register CONFIG6H @ 0x30000B
 10043                           ;	unspecified, using default values
 10044                           ;	Boot Block Table Read Protection bit
 10045                           ;	EBTRB = 0x1, unprogrammed default
 10046  30000B                     	org	3145739
 10047  30000B  FF                 	db	255
 10048                           tosu	equ	0xFFF
 10049                           tosh	equ	0xFFE
 10050                           tosl	equ	0xFFD
 10051                           stkptr	equ	0xFFC
 10052                           pclatu	equ	0xFFB
 10053                           pclath	equ	0xFFA
 10054                           pcl	equ	0xFF9
 10055                           tblptru	equ	0xFF8
 10056                           tblptrh	equ	0xFF7
 10057                           tblptrl	equ	0xFF6
 10058                           tablat	equ	0xFF5
 10059                           prodh	equ	0xFF4
 10060                           prodl	equ	0xFF3
 10061                           indf0	equ	0xFEF
 10062                           postinc0	equ	0xFEE
 10063                           postdec0	equ	0xFED
 10064                           preinc0	equ	0xFEC
 10065                           plusw0	equ	0xFEB
 10066                           fsr0h	equ	0xFEA
 10067                           fsr0l	equ	0xFE9
 10068                           wreg	equ	0xFE8
 10069                           indf1	equ	0xFE7
 10070                           postinc1	equ	0xFE6
 10071                           postdec1	equ	0xFE5
 10072                           preinc1	equ	0xFE4
 10073                           plusw1	equ	0xFE3
 10074                           fsr1h	equ	0xFE2
 10075                           fsr1l	equ	0xFE1
 10076                           bsr	equ	0xFE0
 10077                           indf2	equ	0xFDF
 10078                           postinc2	equ	0xFDE
 10079                           postdec2	equ	0xFDD
 10080                           preinc2	equ	0xFDC
 10081                           plusw2	equ	0xFDB
 10082                           fsr2h	equ	0xFDA
 10083                           fsr2l	equ	0xFD9
 10084                           status	equ	0xFD8

Data Sizes:
    Strings     44
    Constant    0
    Data        93
    BSS         69
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      93
    BANK0           160    122     138
    BANK1           256    141     161
    BANK2           256    102     228
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    time_now$2193	PTR unsigned char  size(2) Largest target is 70
		 -> time_now@daylist(BANK1[70]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(BANK0[7]), dbuf(BANK2[32]), ?_sprintf(BANK1[2]), 
		 -> time_now@daylist(BANK1[70]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_printf(BANK0[2]), stoa@nuls(BANK0[7]), dbuf(BANK2[32]), ?_sprintf(BANK1[2]), 
		 -> time_now@daylist(BANK1[70]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_4(CODE[6]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK1[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> main@datebuf(BANK2[40]), main@timebuf(BANK2[40]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_4(CODE[6]), STR_3(CODE[19]), STR_2(CODE[19]), STR_1(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_4(CODE[6]), STR_3(CODE[19]), STR_2(CODE[19]), STR_1(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 19
		 -> STR_4(CODE[6]), STR_3(CODE[19]), STR_2(CODE[19]), STR_1(CODE[5]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK1[2]), time_now@daylist(BANK1[70]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK1[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK1[2]), time_now@daylist(BANK1[70]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(BANK0[2]), stoa@nuls(BANK0[7]), ?_sprintf(BANK1[2]), time_now@daylist(BANK1[70]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> NULL(NULL[0]), sprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_3(CODE[19]), STR_2(CODE[19]), STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> main@datebuf(BANK2[40]), main@timebuf(BANK2[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK1[2]), 

    S1778_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 40
		 -> main@datebuf(BANK2[40]), main@timebuf(BANK2[40]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> main@datebuf(BANK2[40]), main@timebuf(BANK2[40]), 

    time_now@datebuf	PTR unsigned char  size(2) Largest target is 40
		 -> main@datebuf(BANK2[40]), 

    time_now@timebuf	PTR unsigned char  size(2) Largest target is 40
		 -> main@timebuf(BANK2[40]), 

    time_now@seconds	PTR unsigned int  size(2) Largest target is 2
		 -> seconds_counter(BANK1[2]), 

    time_now@minutes	PTR unsigned int  size(2) Largest target is 16
		 -> main@start_time(BANK2[16]), 

    time_now@season	PTR unsigned int  size(2) Largest target is 16
		 -> main@start_time(BANK2[16]), 

    time_now@hours	PTR unsigned int  size(2) Largest target is 16
		 -> main@start_time(BANK2[16]), 

    time_now@weekdays	PTR unsigned int  size(2) Largest target is 16
		 -> main@start_time(BANK2[16]), 

    time_now@days	PTR unsigned int  size(2) Largest target is 16
		 -> main@start_time(BANK2[16]), 

    time_now@months	PTR unsigned int  size(2) Largest target is 16
		 -> main@start_time(BANK2[16]), 

    time_now@years	PTR unsigned int  size(2) Largest target is 16
		 -> main@start_time(BANK2[16]), 

    LCD_sendstring@string	PTR unsigned char  size(2) Largest target is 40
		 -> main@datebuf(BANK2[40]), main@timebuf(BANK2[40]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LdrISR in COMRAM

    _printf->i1_vfprintf
    i1_vfprintf->i1_vfpfcnvrt
    i1_vfpfcnvrt->i1_dtoa
    i1_stoa->i1_fputc
    i1_dtoa->i1_pad
    i1_pad->i1_fputs
    i1_fputs->i1_fputc
    i1_abs->i1___aomod
    i1_atoi->i1_isspace

Critical Paths under _TimerISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_time_now
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _LCD_setline->_LCD_sendbyte
    _LCD_sendstring->_LCD_sendbyte
    _LCD_Init->_LCD_sendbyte
    _LCD_sendbyte->_LCD_sendnibble

Critical Paths under _LdrISR in BANK0

    _LdrISR->_printf
    _printf->i1_vfprintf

Critical Paths under _TimerISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_time_now
    _time_now->_sprintf

Critical Paths under _LdrISR in BANK1

    None.

Critical Paths under _TimerISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LdrISR in BANK2

    None.

Critical Paths under _TimerISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LdrISR in BANK3

    None.

Critical Paths under _TimerISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LdrISR in BANK4

    None.

Critical Paths under _TimerISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LdrISR in BANK5

    None.

Critical Paths under _TimerISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LdrISR in BANK6

    None.

Critical Paths under _TimerISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LdrISR in BANK7

    None.

Critical Paths under _TimerISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LdrISR in BANK8

    None.

Critical Paths under _TimerISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LdrISR in BANK9

    None.

Critical Paths under _TimerISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LdrISR in BANK10

    None.

Critical Paths under _TimerISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LdrISR in BANK11

    None.

Critical Paths under _TimerISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LdrISR in BANK12

    None.

Critical Paths under _TimerISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LdrISR in BANK13

    None.

Critical Paths under _TimerISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               104   104      0   29002
                                            120 BANK0      2     2      0
                                              0 BANK2    102   102      0
                         _Comp1_init
                    _Interrupts_init
                           _LCD_Init
                       _LCD_sendbyte
                     _LCD_sendstring
                        _LCD_setline
                  _LEDarray_disp_bin
                      _LEDarray_init
                        _Timer0_init
                           _time_now
 ---------------------------------------------------------------------------------
 (1) _time_now                                           123   103     20   22499
                                            116 BANK0      4     4      0
                                             22 BANK1    119    99     20
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    10     12   16379
                                              0 BANK1     22    10     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   15482
                                            108 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           45    39      6   14667
                                             84 BANK0     24    18      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
 ---------------------------------------------------------------------------------
 (5) _stoa                                                22    18      4    2738
                                             30 BANK0     22    18      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    6853
                                             48 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4587
                                             37 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     310
                                             21 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    2077
                                             30 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1577
                                             21 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             39 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                             21 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                             21 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1845
                                             28 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                             21 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                             21 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     742
                                             21 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4    1012
                                             21 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1321
                                             21 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDarray_disp_bin                                    2     0      2     369
                                             21 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LCD_setline                                          1     1      0    1269
                                             24 BANK0      1     1      0
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_sendstring                                       2     0      2    1452
                                             24 BANK0      2     0      2
                       _LCD_sendbyte
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0    1331
                                             24 BANK0      2     2      0
                       _LCD_sendbyte
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (2) _LCD_sendbyte                                         2     1      1    1207
                                             22 BANK0      2     1      1
                     _LCD_sendnibble
 ---------------------------------------------------------------------------------
 (3) _LCD_sendnibble                                       1     1      0     124
                                             21 BANK0      1     1      0
                          _LCD_E_TOG
 ---------------------------------------------------------------------------------
 (4) _LCD_E_TOG                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Comp1_init                                           0     0      0       0
                           _DAC_init
 ---------------------------------------------------------------------------------
 (2) _DAC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _LdrISR                                             13    13      0    9911
                                              8 BANK0     13    13      0
                             _printf
 ---------------------------------------------------------------------------------
 (11) _printf                                              6     4      2    9911
                                              2 BANK0      6     4      2
                         i1_vfprintf
 ---------------------------------------------------------------------------------
 (12) i1_vfprintf                                          8     2      6    9710
                                             87 COMRAM     6     0      6
                                              0 BANK0      2     2      0
                        i1_vfpfcnvrt
 ---------------------------------------------------------------------------------
 (13) i1_vfpfcnvrt                                        45    39      6    9336
                                             63 COMRAM    24    18      6
                             i1_atoi
                             i1_dtoa
                            i1_fputc
                          i1_isdigit
                             i1_stoa
 ---------------------------------------------------------------------------------
 (14) i1_stoa                                             22    18      4    1742
                                              9 COMRAM    22    18      4
                            i1_fputc
                           i1_strlen
 ---------------------------------------------------------------------------------
 (14) i1_dtoa                                             36    26     10    4433
                                             27 COMRAM    36    26     10
                          i1___aodiv
                          i1___aomod
                              i1_abs
                              i1_pad
 ---------------------------------------------------------------------------------
 (15) i1_pad                                              11     5      6    2552
                                             16 COMRAM    11     5      6
                            i1_fputc
                            i1_fputs
                           i1_strlen
 ---------------------------------------------------------------------------------
 (15) i1_strlen                                            4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (16) i1_fputs                                             7     3      4    1087
                                              9 COMRAM     7     3      4
                            i1_fputc
 ---------------------------------------------------------------------------------
 (15) i1_fputc                                             9     5      4     807
                                              0 COMRAM     9     5      4
                            i1_putch
 ---------------------------------------------------------------------------------
 (16) i1_putch                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (15) i1_abs                                               4     2      2     128
                                             18 COMRAM     4     2      2
                          i1___aomod (ARG)
 ---------------------------------------------------------------------------------
 (15) i1___aomod                                          18     2     16     503
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (15) i1___aodiv                                          26    10     16     515
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (14) i1_atoi                                             15    13      2    1045
                                              7 COMRAM    15    13      2
                           i1___wmul
                          i1_isdigit
                          i1_isspace
 ---------------------------------------------------------------------------------
 (15) i1_isspace                                           7     5      2     134
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (14) i1_isdigit                                           6     4      2     101
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (15) i1___wmul                                            6     2      4     302
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (19) _TimerISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Comp1_init
     _DAC_init
   _Interrupts_init
   _LCD_Init
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
     _LCD_sendnibble
       _LCD_E_TOG
   _LCD_sendbyte
     _LCD_sendnibble
       _LCD_E_TOG
   _LCD_sendstring
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
   _LCD_setline
     _LCD_sendbyte
       _LCD_sendnibble
         _LCD_E_TOG
   _LEDarray_disp_bin
   _LEDarray_init
   _Timer0_init
   _time_now
     ___lwdiv
     ___lwmod
     ___wmul
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _stoa
             _fputc
               _putch
             _strlen

 _LdrISR (ROOT)
   _printf
     i1_vfprintf
       i1_vfpfcnvrt
         i1_atoi
           i1___wmul
           i1_isdigit
           i1_isspace
         i1_dtoa
           i1___aodiv
           i1___aomod
           i1_abs
             i1___aomod (ARG)
           i1_pad
             i1_fputc
               i1_putch
             i1_fputs
               i1_fputc
                 i1_putch
             i1_strlen
         i1_fputc
           i1_putch
         i1_isdigit
         i1_stoa
           i1_fputc
             i1_putch
           i1_strlen

 _TimerISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     66      E4      10       89.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     8D      A1       7       62.9%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7A      8A       5       86.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5D       1       98.9%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     26C       8        0.0%
DATA                 0      0     26C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 19 22:44:05 2021

                        l30 356E                          l22 351E                          l24 3534  
                        l33 3AB2                          l41 38EE                          l26 354A  
                        l19 3BDA                          l28 3560                          l36 3400  
                        l47 3A16                          l80 3124                          l81 3138  
                        l90 3192                          l82 313A                          l74 3B50  
                        l91 31A6                          l83 314E                          l92 31A8  
                        l84 3150                          l93 31BC                          l85 3164  
                        l77 310C                          l86 3166                          l78 310E  
                        l95 31BE                          l87 317A                          l79 3122  
                        l88 317C                          l89 3190                          bsr 000FE0  
       __end_ofi1_vfpfcnvrt 1786         ___wmul@multiplicand 0077           time_now@cur_month 018B  
          i1___wmul@product 0005           ??_Interrupts_init 0075                         l114 3BAA  
                       l117 3B02                         l134 1370                         l240 3B96  
                       l163 3BBC                         l246 3ADA                         l360 2986  
                       l373 2DFA                         l744 3502                         l737 34FA  
                       l754 363A                         l747 3632                         l924 36F4  
                       l960 30F4                         l955 3074                         l958 30B8  
                       l966 1C34                         l968 1C3C                         l993 26F6  
                       l986 1E76                         l995 26FE                         _abs 386E  
                       _pad 302C                         _sun 00E2                         wreg 000FE8  
               main@datebuf 0228                 i1_atoi$1910 0012                 i1_atoi$1908 0010  
               i1_atoi$1909 0014                        l1004 27AA                        l1005 27F4  
                      l1110 302A                        l1023 1880                        l1009 27FC  
                      l1050 38A6                        ?_abs 0087                        l1053 38AE  
                      l1045 35CC                        l1118 37E2                        l1134 39A4  
                      l1038 1B92                        l1046 35D4                        l1128 3BE4  
                      l1081 24C4                        l1084 24CC                        l1087 39DE  
                      l1095 3748                        l4010 1B94                        l4020 1C0E  
                      l4012 1BB4                        l4100 2782                        l4030 1C6A  
                      l4022 1C28                        l4014 1BDE                        l4110 27D0  
                      l4102 2788                        l4120 2344                        l4040 1D0C  
                      l4032 1C72                        l4024 1C44                        l4016 1BFE  
                      l4112 27D6                        l4104 278C                        l5000 224E  
                      l4130 23A8                        l4122 2364                        l4114 2326  
                      l4050 1DCA                        l4042 1D12                        l4034 1C7C  
                      l4026 1C56                        l4018 1C0C                        l5010 22AE  
                      l5002 2260                        l4132 23BE                        l4124 239E  
                      l4116 233C                        l4060 1E18                        l4052 1DE4  
                      l4036 1C82                        l4044 1D76                        l4028 1C64  
                      l4108 27BC                        l4300 17DE                        l5020 22E4  
                      l5012 22C0                        l5004 2274                        l4150 24A8  
                      l4142 2442                        l4134 23C6                        l4126 23A2  
                      l4118 2340                        l4062 1E2A                        l4046 1D92  
                      l4054 1DF2                        l4038 1D06                        l4302 17E0  
                      l5030 231A                        l5022 22F2                        l5014 22C6  
                      l5006 2280                        l4136 23CE                        l4064 1E36  
                      l4056 1E04                        l4048 1DB0                        l4080 26A8  
                      l4072 2672                        l4320 180A                        l4312 17FE  
                      l4304 17F2                        l5024 22F8                        l5016 22D2  
                      l5008 2298                        l4146 2484                        l4138 2406  
                      l4066 1E3E                        l4058 1E12                        l4090 2720  
                      l4082 26BC                        l4074 2684                        l4330 1890  
                      l5026 2306                        l5018 22DE                        l4148 2496  
                      l4068 1E4E                        l4092 2734                        l4084 26C4  
                      l4076 268C                        l4340 192A                        l4332 18B8  
                      l5132 1840                        l4324 1816                        l4316 1804  
                      l4308 17F8                        l5028 2312                        l5134 23F0  
                      l4094 273A                        l4086 26D4                        l4078 26A0  
                      l4350 19BE                        l4342 1938                        l4334 18EE  
                      l4326 186E                        l4096 2758                        l4360 1A8E  
                      l4352 19E6                        l4336 18FC                        l4328 188E  
                      l4098 2764                        l4370 1B1A                        l4362 1AC4  
                      l4354 1A2E                        l4346 1984                        l4338 190A  
                      l4290 1786                        l4284 3BCE                        l4700 348E  
                      l3900 291C                        l3820 2F74                        l4372 1B2E  
                      l4348 1996                        l4292 17AE                        l4286 3BD0  
                      l4550 3536                        l4542 3508                        l4710 34C8  
                      l4702 3498                        l3910 2966                        l3902 291E  
                      l3822 2F86                        l4366 1AE4                        l4358 1A66  
                      l4294 17BC                        l4382 1B56                        ?_pad 0085  
                      l4288 3BD8                        l4560 3566                        l4552 3544  
                      l4544 3518                        l4800 3148                        l4720 34F4  
                      l4712 34CE                        l4704 34AA                        l3904 2930  
                      l3920 2CCA                        l3824 2F90                        l3832 379C  
                      l3840 396C                        l4384 1B80                        l4368 1B0C  
                      l4376 1B3C                        l4296 17CE                        l4554 354C  
                      l4546 3520                        l4810 31B6                        l4802 315E  
                      l4714 34E4                        l4706 34B2                        l4730 3608  
                      l4722 35D6                        l3906 2936                        l3930 2D22  
                      l3922 2CCE                        l3914 2C96                        l3826 2FAE  
                      l3818 2F60                        l3834 37AA                        l3842 3978  
                      l4378 1B4A                        l4298 17D2                        l4562 3570  
                      l4820 3AF6                        l4812 3ADC                        l4556 355A  
                      l4548 352E                        l4804 3174                        l4716 34EC  
                      l4708 34BA                        l4732 361E                        l4724 35EA  
                      l3908 2946                        l3940 2DA4                        l3932 2D36  
                      l3924 2CDC                        l3916 2C9C                        l3828 2FE4  
                      l3836 37BC                        l3844 397E                        l4564 3578  
                      l4900 11D8                        l4822 3AF8                        l4814 3AE2  
                      l4558 3562                        l4750 3380                        l4806 318A  
                      l4718 34EE                        l4734 3626                        l4726 35F2  
                      l3870 27FE                        l3934 2D44                        l3942 2DAA  
                      l3926 2CFC                        l3918 2CAA                        l3838 37C2  
                      l3846 3996                        l3950 302C                        l4566 3586  
                      l4910 12BA                        l4902 1206                        l4830 0E6E  
                      l4824 3AFA                        l4816 3AF2                        l4680 3AAA  
                      l4760 33AE                        l4752 3386                        l4808 31A0  
                      l4736 362C                        l4728 35FA                        l3864 3AB4  
                      l3880 2844                        l3872 2804                        l3944 2DBA  
                      l3936 2D72                        l3928 2D1A                        l3960 3080  
                      l3952 303C                        l4568 35AC                        l4912 12EC  
                      l4904 1234                        l4840 0E9A                        l4832 0E76  
                      l4826 3AFE                        l4818 3AF4                        l4770 33E8  
                      l4762 33B6                        l4754 338E                        l4746 3350  
                      l4930 3B8A                        l3866 3AD2                        l3890 289A  
                      l3882 2864                        l3874 2812                        l3946 2DDA  
                      l3938 2D92                        l3962 3094                        l3954 3050  
                      l4690 36E2                        l4682 36A2                        l4914 1360  
                      l4906 1262                        l4850 0EC2                        l4842 0EA2  
                      l4834 0E82                        l4676 3A8A                        l4772 33F4  
                      l4764 33C2                        l4756 339A                        l4748 3368  
                      l4780 38E4                        l4932 3B94                        l3980 36F6  
                      l3892 28AE                        l3884 2868                        l3876 2832  
                      l3972 386E                        l3964 309A                        l3956 3060  
                      l4684 36B4                        l4908 1274                        l4860 0F3A  
                      l4852 0ECA                        l4844 0EAA                        l4836 0E8A  
                      l4828 0E2E                        l4694 3B98                        l4918 3BAC  
                      l4678 3A96                        l4766 33CA                        l4758 33A2  
                      l4782 39E0                        l4774 38B4                        l4790 3B2C  
                      l4926 3B78                        l3982 36FC                        l3894 28BC  
                      l3886 2874                        l3878 2836                        l3974 388A  
                      l3966 30C6                        l3958 306C                        l4686 36BC  
                      l4870 0FAA                        l4862 0F56                        l4854 0ED2  
                      l4846 0EB2                        l4838 0E92                        l4696 3B9E  
                      l4768 33D6                        l4784 39E4                        l4776 38C6  
                      l4792 30F6                        l4928 3B80                        l3976 39A6  
                      l3984 3710                        l3896 28CE                        l3888 2892  
                      l3968 30DA                        l4688 36C4                        l4880 102C  
                      l4872 0FCA                        l4864 0F70                        l4856 0EFE  
                      l4848 0EBA                        l4960 215C                        l4698 3BA8  
                      l4786 39F8                        l4778 38D0                        l4794 3106  
                      l3986 373E                        l3898 28FC                        l4890 10F2  
                      l4874 0FE6                        l4882 103A                        l4866 0F80  
                      l4858 0F1A                        l4970 2170                        l4962 2160  
                      l4788 39FE                        l4796 311C                        l3988 3742  
                      l4892 1120                        l4884 1068                        l4876 1002  
                      l4868 0F8E                        l4980 217C                        l4972 2172  
                      l4964 2164                        l4798 3132                        l4894 114E  
                      l4886 1096                        l4878 101C                        l4990 21A2  
                      l4982 217E                        l4974 2176                        l4966 2168  
                      l4896 117C                        l4888 10C4                        l4992 21AC  
                      l4984 2184                        l4976 2178                        l4968 216C  
                      l4898 11AA                        l4994 21CC                        l4986 2188  
                      l4978 217A                        l4996 2228                        l4988 219A  
                      l4998 223E                        STR_2 0E01                        STR_3 0E14  
                      STR_4 0E27                        u4100 2CAA                        u4101 2CA6  
                      u4030 2812                        u4110 2CDC                        u4031 280E  
                      u4111 2CD8                        u4040 2844                        u4120 2D1A  
                      u4200 388A                        u4041 2840                        u4121 2D16  
                      u4201 3886                        u4210 39D8                        u4130 2D44  
                      u4211 39D2                        u4051 286E                        u4131 2D40  
                      u4220 39DA                        u4060 2892                        u4140 2D72  
                      u4300 1C0C                        u4061 288E                        u4141 2D6E  
                      u4301 1C08                        u4230 3710                        u4070 28BC  
                      u4150 2DBA                        u4310 1C28                        u4231 370C  
                      u4071 28B8                        u4151 2DB6                        u4311 1C24  
                      u4240 373E                        u4080 28FC                        u4160 303C  
                      u4400 1E12                        u4320 1C56                        u4241 373A  
                      u4081 28F8                        u4161 3038                        u4401 1E0E  
                      u4321 1C52                        u4090 2946                        u4170 3060  
                      u4410 1E2A                        u4330 1C64                        u4091 2942  
                      u4171 305C                        u4411 1E26                        u4331 1C60  
                      u4180 30B8                        u4340 1D92                        u4500 27F4  
                      u4181 30B4                        u4341 1D8E                        u4501 27F0  
                      u4421 267C                        u5230 3518                        u4510 2364  
                      u4190 30C6                        u4350 1DB0                        u4270 1BC6  
                      u4430 26A0                        u5231 3514                        u4511 2360  
                      u4191 30C2                        u4351 1DAC                        u4271 1BC0  
                      u4431 269C                        u5240 352E                        u4520 239E  
                      u4360 1DCA                        u4280 1BC8                        u4440 26D4  
                      u5241 352A                        u4521 239A                        u4361 1DC6  
                      u4441 26D0                        u5250 3544                        u5410 34AA  
                      u4530 23BA                        u4370 1DE4                        u4290 1BDE  
                      u4450 26F2                        u5251 3540                        u5411 34A6  
                      u4531 23B6                        u4371 1DE0                        u4291 1BDA  
                      u4451 26EE                        u5260 355A                        u5500 3A16  
                      u5420 34C8                        u4540 247E                        u4380 1DF2  
                      u4460 271C                        u5261 3556                        u5405 3A94  
                      u5501 3A12                        u5421 34C4                        u4541 2478  
                      u4381 1DEE                        u4461 2718                        u5406 3A96  
                      u5510 3106                        u5430 34E4                        u4550 2480  
                      u4390 1E04                        u4470 2758                        u5270 35CC  
                      u5511 3102                        u5431 34E0                        u4391 1E00  
                      u4471 2754                        u5271 35C8                        u5520 311C  
                      u5440 35EA                        u4560 2496                        u4480 27AA  
                      u4800 17AE                        u5600 0E5C                        u5521 3118  
                      u5441 35E6                        u4561 2492                        u4481 27A6  
                      u4801 17AA                        u5601 0E56                        u5530 3132  
                      u5450 3608                        u4570 24A8                        u3930 2F74  
                      u4490 27B8                        u4810 1880                        u5610 0E5E  
                      u5531 312E                        u5451 3604                        u4571 24A4  
                      u3931 2F70                        u4491 27B4                        u4811 187C  
                      u5540 3148                        u5460 361E                        u3940 2F86  
                      u4900 1A8E                        u4820 188E                        u5700 1002  
                      u5541 3144                        u5461 361A                        u3941 2F82  
                      u4901 1A8A                        u4821 188A                        u5701 0FFE  
                      u5621 0E68                        u5550 315E                        u3950 2FAE  
                      u4910 1B0C                        u4830 18B8                        u5710 101C  
                      u5630 0F1A                        u5551 315A                        u3951 2FAA  
                      u4911 1B08                        u4831 18B4                        u5711 1018  
                      u5631 0F16                        u5480 38C6                        u5560 3174  
                      u3960 2FE4                        u4840 18FC                        u5640 0F3A  
                      u5800 223E                        u5481 38C2                        u5561 3170  
                      u3961 2FE0                        u4841 18F8                        u5721 126C  
                      u5641 0F36                        u5801 223A                        u5490 38E4  
                      u5570 318A                        u3970 37E2                        u4850 197E  
                      u5650 0F56                        u5810 224E                        u5491 38E0  
                      u5571 3186                        u3971 37DE                        u4851 1978  
                      u5651 0F52                        u5811 224A                        u5580 31A0  
                      u3980 3996                        u4860 1980                        u5660 0F70  
                      u5581 319C                        u3981 3992                        u5661 0F6C  
                      u5590 31B6                        u4870 1996                        u5670 0FAA  
                      u5830 2298                        u5591 31B2                        u4871 1992  
                      u5671 0FA6                        u5831 2294                        u4880 19BE  
                      u5680 0FCA                        u5840 22AE                        u4881 19BA  
                      u5681 0FC6                        u5841 22AA                        u5825 227E  
                      u4890 19E6                        u5690 0FE6                        u5850 22C0  
                      u5826 2280                        u5907 33B0                        u4891 19E2  
                      u5691 0FE2                        u5851 22BC                        u5917 33C4  
                      u5781 2192                        u5790 21CC                        u5927 33DE  
                      u5791 21C8                        u5937 3AAC                        u5865 22D0  
                      u5866 22D2                        u5947 3568                        u5957 3BD2  
                      u5877 3374                        u5887 3388                        u5897 339C  
               i1_dtoa$1861 002E          __size_of_LCD_E_TOG 000E                        abs@a 0087  
                      _dbuf 02C4              i1___aodiv@sign 0012                        _atoi 2326  
                      _main 215C                        _dtoa 1B94                        _prec 00DE  
                      _nout 00DA                        pad@i 008C                        pad@p 0089  
                      fsr1h 000FE2                        fsr2h 000FDA                        indf2 000FDF  
                      fsr1l 000FE1                        pad@w 008E                        fsr2l 000FD9  
                      _stoa 2672                        btemp 005E                 main@timebuf 0200  
              ?_LCD_setline 0001                        prodh 000FF4                        prodl 000FF3  
                      start 00DA             __end_ofi1_fputc 328A             __end_ofi1_fputs 386E  
          __end_of_DAC_init 3BAC             __end_ofi1_putch 3BE8                ___param_bank 000000  
            i1___aomod@sign 0012                  i1_vfprintf 363C          i1___aomod@dividend 0001  
                _Comp1_init 3ADC                       ??_abs 0089                       ??_pad 008B  
          __end_of_LCD_Init 3402               i1vfpfcnvrt@ap 0044               i1vfpfcnvrt@cp 0052  
             i1vfpfcnvrt@fp 0040               i1vfpfcnvrt@ll 004A             __end_of___aodiv 2988  
                     ?_atoi 007C                       ?_main 0001                       ?_dtoa 0090  
           __end_of___aomod 2DFC                       ?_stoa 007E             __end_of___lwdiv 3504  
                     i1l170 00A2                       i1l246 3B76                       i1l360 2B0E  
           __end_of___lwmod 363C                       i1l373 2F5E                       i2l177 3968  
                     i1l960 334E                       i1l955 32D0                       i1l958 3312  
                     i1l966 1F18                       i1l968 1F20                       i1l993 2B90  
                     i1l986 215A                       i1l995 2B98                vfpfcnvrt@fmt 00B6  
                     _TMR0H 000FD4                       _TMR0L 000FD3          time_now@month_days 0172  
                     i1_abs 38F0                       i1_pad 328A                  i1isdigit@c 0001  
                     _flags 00E0                       _fputc 2F60                       _fputs 379C  
           __end_of_isdigit 39E0                       atoi@n 0089                       pad@fp 0085  
                     atoi@s 007C                       _width 00DC                       _putch 3BE4  
                     dtoa@d 0092                       dtoa@i 00B2                       dtoa@n 00AA  
                     dtoa@p 00A4                       dtoa@s 00A8                       dtoa@w 00A6  
           __end_of_isspace 374A                  i1isspace@c 0001               ?_LCD_sendbyte 0076  
              main@prev_sec 0250                main@prev_sun 0252                       tablat 000FF5  
          __end_ofi1___wmul 3B78                       plusw1 000FE3                       plusw2 000FDB  
                     stoa@i 008A                       stoa@l 0092                       stoa@p 0090  
                     stoa@s 0080                       stoa@w 008C                       ttemp5 005F  
                     ttemp6 0062                       ttemp7 0066                       status 000FD8  
       i1___wmul@multiplier 0001                       wtemp8 005F             __end_of_sprintf 36F6  
        __size_ofi1___aodiv 0188          __size_ofi1___aomod 0164     __size_of_LCD_sendnibble 006C  
          __end_ofi1_strlen 3A86     __size_of_LCD_sendstring 0038                 i1_vfpfcnvrt 1372  
           __initialization 3402                __end_of_atoi 24CE                __end_of_main 2326  
              __end_of_dtoa 1E78               i1vfprintf@fmt 005A                  i1stoa@nuls 000F  
              __end_of_stoa 27FE          __size_ofi1_isdigit 0038          __size_ofi1_isspace 0052  
         __end_of_LCD_E_TOG 3BDC                      ??_atoi 007E                      ??_main 00D8  
                    ??_dtoa 009A                      ??_stoa 0082               __activetblptr 000003  
                    ?i1_abs 0013            __end_of_TimerISR 396C                      ?i1_pad 0011  
    __size_of_LEDarray_init 0026              i1vfpfcnvrt@fmt 0042                      ?_fputc 0075  
                    ?_fputs 007E              ??_LCD_sendbyte 0077                      ?_putch 0001  
                    i1l1004 2C42                      i1l1005 2C8C                      i1l1110 3288  
                    i1l1023 1476                      i1l1009 2C94                      i1l1050 3926  
                    i1l1053 392E                      i1l1045 3698                      i1l1125 3B2A  
                    i1l1118 386C                      i1l1134 3A84                      i1l1038 1784  
                    i1l1046 36A0                      i1l1128 3BE6                      i1l1081 2668  
                    i1l1084 2670                      i1l1087 3A4E                      i1l1095 379A  
                    i1l4000 3A50                      i1l4002 3A5C                      i1l4004 3A60  
                    i1l4006 3A78                      i1l4200 2ACE                      i1l4202 2AEE  
                    i1l4210 2E0E                      i1l4220 2E7E                      i1l4212 2E2E  
                    i1l4230 2EF6                      i1l4222 2E86                      i1l4214 2E32  
                    i1l4206 2DFC                      i1l4232 2F08                      i1l4224 2E9A  
                    i1l4216 2E40                      i1l4208 2E00                      i1l4400 1EC0  
                    i1l4170 29BE                      i1l4162 2988                      i1l4226 2EA8  
                    i1l4234 2F0E                      i1l4218 2E60                      i1l4250 32C8  
                    i1l4242 328A                      i1l4410 1F28                      i1l4402 1EE0  
                    i1l4156 3B52                      i1l4500 24CE                      i1l4180 2A1A  
                    i1l4172 29CC                      i1l4164 298C                      i1l4236 2F1E  
                    i1l4228 2ED6                      i1l4260 3336                      i1l4252 32DC  
                    i1l4244 329A                      i1l4420 1F60                      i1l4412 1F3A  
                    i1l4404 1EF0                      i1l4158 3B6E                      i1l4510 2544  
                    i1l4502 24E2                      i1l4190 2A84                      i1l4182 2A22  
                    i1l4174 29EC                      i1l4166 299A                      i1l4238 2F3E  
                    i1l4254 32F0                      i1l4246 32AE                      i1l4422 1F66  
                    i1l4430 2058                      i1l4414 1F48                      i1l4406 1EF2  
                    i1l4280 3794                      i1l4272 374A                      i1l4520 256C  
                    i1l4512 2548                      i1l4504 24E6                      i1l4192 2AA4  
                    i1l4184 2A36                      i1l4176 29F0                      i1l4168 29BA  
                    i1l4264 38F0                      i1l4256 32F4                      i1l4248 32BC  
                    i1l4432 2072                      i1l4440 20D4                      i1l4424 1FE8  
                    i1l4416 1F4E                      i1l4408 1F0C                      i1l5136 1436  
                    i1l4600 1400                      i1l4274 374E                      i1l5138 2596  
                    i1l4522 2574                      i1l4506 24EA                      i1l4194 2AA6  
                    i1l4186 2A44                      i1l4178 29FC                      i1l4266 390A  
                    i1l4258 3322                      i1l4450 211A                      i1l4442 20E6  
                    i1l4434 2090                      i1l4426 1FEE                      i1l4418 1F56  
                    i1l4610 1488                      i1l4268 3A18                      i1l4276 3762  
                    i1l4532 2628                      i1l4524 25AC                      i1l4516 254E  
                    i1l4508 250A                      i1l4196 2AB8                      i1l4188 2A56  
                    i1l4452 2122                      i1l4444 20F6                      i1l4436 20AA  
                    i1l4428 1FF4                      i1l4460 2B22                      i1l4620 1522  
                    i1l4612 14B0                      i1l4604 140C                      i1l4278 3790  
                    i1l4534 263A                      i1l4518 2564                      i1l4198 2ABE  
                    i1l4446 20FC                      i1l4454 2132                      i1l4438 20C4  
                    i1l4470 2B60                      i1l4462 2B2A                      i1l4630 15B4  
                    i1l4622 1530                      i1l4614 14E6                      i1l4606 1464  
                    i1l4536 264C                      i1l4528 25E6                      i1l4448 210E  
                    i1l4480 2BD4                      i1l4472 2B6E                      i1l4464 2B3C  
                    i1l4640 1684                      i1l4632 15DC                      i1l4616 14F4  
                    i1l4608 1486                      i1l3850 31C0                      i1l4490 2C24  
                    i1l4482 2BF2                      i1l4466 2B44                      i1l4458 2B10  
                    i1l4650 1710                      i1l4642 16BA                      i1l4634 1624  
                    i1l4626 157A                      i1l4618 1502                      i1l4570 1372  
                    i1l3860 3242                      i1l3852 31D2                      i1l4396 1E78  
                    i1l4484 2BFE                      i1l4476 2BBC                      i1l4468 2B58  
                    i1l4652 1724                      i1l4628 158C                      i1l4580 13CA  
                    i1l4572 139A                      i1l4740 3644                      i1l3854 31E4  
                    i1l4398 1E98                      i1l4494 2C56                      i1l4486 2C1C  
                    i1l4478 2BD0                      i1l4646 16DA                      i1l4638 165C  
                    i1l4582 13CE                      i1l4574 13A8                      i1l4662 174A  
                    i1l4742 3652                      i1l3856 31EE                      i1l4496 2C6A  
                    i1l4488 2C20                      i1l4664 1772                      i1l4648 1702  
                    i1l4656 1730                      i1l4592 13F0                      i1l4584 13E0  
                    i1l4576 13BA                      i1l4744 3678                      i1l4920 3B04  
                    i1l3858 320C                      i1l4498 2C6E                      i1l4658 173E  
                    i1l4578 13BE                      i1l4738 363C                      i1l4922 3B0E  
                    i1l4596 13F8                      i1l4588 13E8                      i1l4950 005E  
                    i1l3992 382A                      i1l4952 006C                      i1l3994 3836  
                    i1l4954 0070                      i1l3996 3848                      i1l4956 0088  
                    i1l4948 004E                      i2l3630 3930                      i1l3998 384C  
                    i1l4958 0098                      i2l3640 3950                      i2l3632 3940  
                    i2l3642 3962                      i2l3634 3942                      i2l3636 3948  
                    i2l3638 394C                   ??i1_fputc 0005                   ??i1_fputs 000E  
                 ??i1_putch 0001               vfpfcnvrt@done 00C8                      i1abs@a 0013  
          i1_vfpfcnvrt$1887 0056                      i1_atoi 24CE           _LEDarray_disp_bin 30F6  
                    i1_dtoa 1E78                      i1pad@i 0018                      i1pad@p 0015  
                    i1pad@w 001A                      i1_stoa 2B10                      _LdrISR 0018  
        ?_LEDarray_disp_bin 0075               ??_Timer0_init 0075                vfprintf@cfmt 00D2  
               ?i1_vfprintf 0058                   ??___aodiv 0085                   ??___aomod 0085  
                    ___wmul 3AB4                 ?_Comp1_init 0001                   ??___lwdiv 0079  
                 ??___lwmod 0079         ??_LEDarray_disp_bin 0077                      clear_0 3468  
                    clear_1 347E                      _printf 3B04                      pad@buf 0087  
                    dtoa@fp 0090                      _strlen 396C           __end_ofi1___aodiv 2B10  
         __end_ofi1___aomod 2F60                      fputc@c 0075                      fputs@c 0082  
                    fputs@i 0083                      fputs@s 007E                   ??_isdigit 0077  
          __end_of_time_now 1372                __mediumconst 0000                   ??_isspace 0077  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
                    stoa@cp 008E                      stoa@fp 007E                      putch@c 0001  
                 ?_DAC_init 0001            __end_of_vfprintf 35D6                   ??_sprintf 00D4  
         __end_ofi1_isdigit 3A50           __end_ofi1_isspace 379C   __end_of_LEDarray_disp_bin 31C0  
                __accesstop 0060     __end_of__initialization 3484                   ?_LCD_Init 0001  
             ___rparam_used 000001               _LEDarray_init 3B2C               __end_ofi1_abs 3930  
           _Interrupts_init 3BAC               __end_ofi1_pad 3350        __size_of_LCD_setline 0040  
            __pcstackCOMRAM 0001                __pidataBANK0 3BDC                __pidataBANK1 3BBE  
              __pidataBANK2 37E4              i1vfprintf@cfmt 0060               __end_of_fputc 302C  
             __end_of_fputs 37E4               __end_of_putch 3BE6         __end_of_Timer0_init 3B98  
                 ?i1___wmul 0001                     ??i1_abs 0015                     ??i1_pad 0017  
                 ?i1_strlen 0001                  ??_DAC_init 0075                     ??_fputc 0079  
                   ??_fputs 0082         __size_ofi1_vfprintf 0066                     ??_putch 0075  
       __size_of_Comp1_init 0028                  __pbssBANK0 00DA                  __pbssBANK1 019D  
                __pbssBANK2 02AC                  ??_LCD_Init 0078              _LCD_sendnibble 3504  
                   ?i1_atoi 0008                     ?i1_dtoa 001C                     ?i1_stoa 000A  
            ?_LEDarray_init 0001                     ?_LdrISR 0001              _LCD_sendstring 39E0  
           i1vfpfcnvrt@done 0054                   ?_TimerISR 0001                     ?___wmul 0075  
      __end_of_LCD_sendbyte 3AB4                     ?_printf 0062                  ??i1___wmul 0005  
                   ?_strlen 0075             _seconds_counter 019F          __size_of_vfpfcnvrt 040E  
                ??i1_strlen 0003      __end_of_LCD_sendnibble 3570                     i1_fputc 31C0  
                   i1_fputs 382A  __size_of_LEDarray_disp_bin 00CA     __end_of_Interrupts_init 3BBE  
                   i1atoi@n 0015                     i1pad@fp 0011                     i1atoi@s 0008  
                   i1_putch 3BE6                     i1dtoa@d 001E                     i1dtoa@i 003E  
                   i1dtoa@n 0036                     i1dtoa@p 0030                     i1dtoa@s 0034  
                   i1dtoa@w 0032      __end_of_LCD_sendstring 3A18             __size_ofi1_atoi 01A4  
                   i1stoa@i 0016                     i1stoa@l 001E                     i1stoa@p 001C  
                   i1stoa@s 000C             __size_ofi1_dtoa 02E4                     i1stoa@w 0018  
           __size_ofi1_stoa 0186             __size_of_LdrISR 00C2                     __Hparam 0000  
              ?i1_vfpfcnvrt 0040                     __Lparam 0000                  ??_TimerISR 0001  
               _Timer0_init 3B78                   ?_time_now 0116                     ___aodiv 27FE  
                   ___aomod 2C96             __size_of___wmul 0028           i1___aodiv@divisor 0009  
                   ___lwdiv 348E                     ___lwmod 35D6                   ?_vfprintf 00CC  
              __psmallconst 0E00           i1___aodiv@counter 0011                     __pcinit 3402  
                   __ramtop 0E00                     __ptext0 215C                     __ptext1 0E2E  
                   __ptext2 36A2                     __ptext3 3570                     __ptext4 1786  
                   __ptext5 2672                     __ptext6 1B94                     __ptext7 302C  
                   __ptext8 396C                     __ptext9 379C             __size_of_printf 0028  
           __size_of_strlen 003A                __size_of_abs 0042                __size_of_pad 00CA  
                   _isdigit 39A6                     _isspace 36F6                   _LCD_E_TOG 3BCE  
           LCD_setline@line 0078                     atoi@neg 0082                     _sprintf 36A2  
            __pintcode_body 3930        end_of_initialization 3484             ?_LCD_sendnibble 0001  
                   fputc@fp 0077             ??_LEDarray_init 0075                     int_func 3930  
                   fputs@fp 0080             ?_LCD_sendstring 0078                ??i1_vfprintf 005E  
         __end_of_vfpfcnvrt 1B94                  ??_time_now 00D4                     postdec1 000FE5  
                   postdec2 000FDD                ??_Comp1_init 0075                     postinc0 000FEE  
                   postinc1 000FE6                     postinc2 000FDE                  main@F14550 018D  
                ??_vfprintf 00D2       i1___wmul@multiplicand 0003              main@start_time 0256  
                   strlen@a 0077                     strlen@s 0075                  ?_LCD_E_TOG 0001  
                 _TRISAbits 000F81                   _TRISBbits 000F82                   _TRISCbits 000F83  
                 _TRISDbits 000F84                   _TRISEbits 000F85                   _TRISFbits 000F86  
                 _TRISGbits 000F87                   _TRISHbits 000F88                   i1___aodiv 2988  
                 i1___aomod 2DFC          __end_ofi1_vfprintf 36A2           __size_of_DAC_init 0014  
        __end_of_Comp1_init 3B04                 _CM1CON0bits 000ED0                 _CM1CON1bits 000ED1  
          ?_Interrupts_init 0001                   i1_isdigit 3A18                   i1_isspace 374A  
          time_now@weekdays 0120           __size_of_LCD_Init 00B2              __end_ofi1_atoi 2672  
            __end_ofi1_dtoa 215C       __size_of_LCD_sendbyte 002E              __end_ofi1_stoa 2C96  
            __end_of_LdrISR 00DA                   i1atoi@neg 000E           i1___aomod@divisor 0009  
         i1___aomod@counter 0011                 vfpfcnvrt@ap 00B8                 vfpfcnvrt@cp 00C6  
               vfpfcnvrt@fp 00B4                 vfpfcnvrt@ll 00BE              __end_of___wmul 3ADC  
                 i1fputc@fp 0003        LCD_sendnibble@number 0075                   i1fputs@fp 000C  
            __end_of_printf 3B2C              __end_of_strlen 39A6         start_initialization 3402  
         __size_ofi1___wmul 0026                 __end_of_abs 38B0                  ?i1___aodiv 0001  
                ?i1___aomod 0001                i1vfprintf@ap 005C                 __end_of_pad 30F6  
              i1vfprintf@fp 0058                   i1strlen@a 0003                   i1strlen@s 0001  
         __size_ofi1_strlen 0036                _LCD_sendbyte 3A86               _seconds_check 019D  
                  ??i1_atoi 000A                  ?i1_isdigit 0001               ??_LCD_setline 0078  
                  ??i1_dtoa 0026                    ??i1_stoa 000E                    ??_LdrISR 0068  
                ?i1_isspace 0001                 vfprintf@fmt 00CE        LCD_sendstring@string 0078  
                  ??___wmul 0079        __size_ofi1_vfpfcnvrt 0414           __size_of_TimerISR 3964  
               __pdataBANK0 00E3                 __pdataBANK1 018D                 __pdataBANK2 0266  
                  ??_printf 005E                    ??_strlen 0077                 ??_LCD_E_TOG 0075  
             __pcstackBANK0 0060               __pcstackBANK1 0100               __pcstackBANK2 0200  
          ___aodiv@dividend 0075                    ?i1_fputc 0001                    ?i1_fputs 000A  
                  ?i1_putch 0001                   _atoi$1910 0086                   _atoi$1908 0084  
                 _atoi$1909 0088                   _main$1252 0253            ___lwdiv@dividend 0075  
                 _dtoa$1861 00A2                ?_Timer0_init 0001                   __pintcode 0008  
                  ?___aodiv 0075                    ?___aomod 0075            ___aodiv@quotient 0087  
       __end_of_LCD_setline 38F0                    ?___lwdiv 0075                    ?___lwmod 0075  
         __size_of_time_now 0544                 __pintcodelo 0018           __size_of_vfprintf 0066  
               __smallconst 0E00                    ?_isdigit 0075              __size_ofi1_abs 0040  
            __size_ofi1_pad 00C6                    ?_isspace 0075            ??_LCD_sendnibble 0075  
               ??i1___aodiv 0011                 ??i1___aomod 0011                    _DAC_init 3B98  
          ___lwdiv@quotient 007A            ??_LCD_sendstring 007A                    ?_sprintf 0100  
            __size_of_fputc 00CC              __size_of_fputs 0048              __size_of_putch 0002  
          LCD_sendbyte@Byte 0077                    _LCD_Init 3350            LCD_sendbyte@type 0076  
            ___wmul@product 0079                    _LATAbits 000F79                    _LATBbits 000F7A  
                  _LATCbits 000F7B                    _LATDbits 000F7C                    _LATEbits 000F7D  
                  _LATFbits 000F7E                    _LATGbits 000F7F                    _LATHbits 000F80  
               ??i1_isdigit 0003                    _IPR0bits 000E1F                    _PIE0bits 000E29  
                  _IPR2bits 000E21                    _PIE2bits 000E2B                 ??i1_isspace 0003  
                  i1u400_20 31E4                    i1u400_21 31E0                    i1u401_20 320C  
                  i1u401_21 3208                    i1u402_20 3242                    i1u402_21 323E  
                  i1u500_20 2090                    i1u500_21 208C                    i1u501_20 20AA  
                  i1u501_21 20A6                    i1u502_20 20C4                    i1u510_20 2B8C  
                  i1u502_21 20C0                    i1u510_21 2B88                    i1u503_20 20D4  
                  i1u511_20 2BB8                    i1u503_21 20D0                    i1u511_21 2BB4  
                  i1u520_20 2624                    i1u504_20 20E6                    i1u512_20 2BF2  
                  i1u504_21 20E2                    i1u512_21 2BEE                    i1u521_20 263A  
                  i1u425_20 386C                    i1u505_20 20F6                    i1u513_20 2C42  
                  i1u521_21 2636                    i1u425_21 3868                    i1u505_21 20F2  
                  i1u513_21 2C3E                    i1u522_20 264C                    i1u426_20 3A78  
                  i1u506_20 210E                    i1u514_20 2C52                    i1u530_20 1486  
                  i1u522_21 2648                    i1u426_21 3A74                    i1u506_21 210A  
                  i1u514_21 2C4E                    i1u530_21 1482                    i1u515_20 2C8C  
                  i1u531_20 14B0                    i1u515_21 2C88                    i1u507_21 2B1A  
                  i1u531_21 14AC                    i1u516_20 250A                    i1u508_20 2B3C  
                  i1u532_20 14F4                    i1u516_21 2506                    i1u460_21 29F6  
                  i1u508_21 2B38                    i1u532_21 14F0                    i1u517_20 2544  
                  i1u461_20 2A1A                    i1u509_20 2B6E                    i1u533_20 1574  
                  i1u517_21 2540                    i1u461_21 2A16                    i1u509_21 2B6A  
                  i1u533_21 156E                    i1u518_20 2560                    i1u462_20 2A44  
                  i1u470_20 2F1E                    i1u534_20 1576                    i1u518_21 255C  
                  i1u462_21 2A40                    i1u470_21 2F1A                    i1u519_20 2622  
                  i1u463_20 2A84                    i1u471_20 329A                    i1u535_20 158C  
                  i1u519_21 261C                    i1u463_21 2A80                    i1u471_21 3296  
                  i1u535_21 1588                    i1u464_20 2ACE                    i1u472_20 32BC  
                  i1u536_20 15B4                    i1u528_20 139A                    i1u464_21 2ACA  
                  i1u472_21 32B8                    i1u536_21 15B0                    i1u528_21 1396  
                  i1u465_20 2E0E                    i1u473_20 3312                    i1u537_20 15DC  
                  i1u529_20 1476                    i1u465_21 2E0A                    i1u473_21 330E  
                  i1u537_21 15D8                    i1u529_21 1472                    i1u458_20 299A  
                  i1u466_20 2E40                    i1u474_20 3322                    i1u538_20 1684  
                  i1u458_21 2996                    i1u466_21 2E3C                    i1u474_21 331E  
                  i1u538_21 1680                    i1u459_20 29CC                    i1u467_20 2E7E  
                  i1u475_20 390A                    i1u539_20 1702                    i1u547_20 3698  
                  i1u459_21 29C8                    i1u467_21 2E7A                    i1u475_21 3906  
                  i1u539_21 16FE                    i1u547_21 3694                    i1u476_20 3A48  
                  i1u468_20 2EA8                    i1u492_20 1EA8                    i1u476_21 3A42  
                  i1u468_21 2EA4                    i1u492_21 1EA2                    i1u477_20 3A4A  
                  i1u469_20 2ED6                    i1u493_20 1EAA                    i1u469_21 2ED2  
                  i1u478_20 3762                    i1u494_20 1EC0                    i1u574_20 005E  
                  i1u478_21 375E                    i1u494_21 1EBC                    i1u574_21 005A  
                  i1u479_20 3790                    i1u399_20 31D2                    i1u495_20 1EF0  
                  i1u575_20 0084                    i1u479_21 378C                    i1u399_21 31CE  
                  i1u495_21 1EEC                    i1u575_21 007E                    _PIR0bits 000E33  
                  i1u496_20 1F0C                    i1u576_20 0086                    i1u496_21 1F08  
                  i1u497_20 1F3A                    i1u577_20 0098                    i1u497_21 1F36  
                  i1u577_21 0094                    i1u498_20 1F48                    i1u498_21 1F44  
                  i1u499_20 2072                    i1u499_21 206E                    _PIR2bits 000E35  
                  i2u382_40 3940                    i2u382_41 393C                    i2u383_40 3962  
                  i2u383_41 395E             time_now@datebuf 0118             time_now@daylist 012A  
                 _vfpfcnvrt 1786           ___wmul@multiplier 0075                    i1___wmul 3B52  
           time_now@minutes 011C             time_now@seconds 011A             time_now@timebuf 0116  
                  i1pad@buf 0013                    i1dtoa@fp 001C                _isspace$1926 007B  
                _CM1NCHbits 000ED2                    i1_strlen 3A50                  _CM1PCHbits 000ED3  
                  i1fputc@c 0001                    i1fputs@c 000E                    i1fputs@i 000F  
                  i1fputs@s 000A                   copy_data0 3416                   copy_data1 3436  
                 copy_data2 3456                    i1stoa@cp 001A                    i1stoa@fp 000A  
          __size_ofi1_fputc 00CA            __size_ofi1_fputs 0044            __size_ofi1_putch 0002  
     __end_of_LEDarray_init 3B52                 _LCD_setline 38B0                    __Hrparam 0000  
                vfprintf@ap 00D0                    __Lrparam 0000                  vfprintf@fp 00CC  
                  _TimerISR 0008            __size_of___aodiv 018A            __size_of___aomod 0166  
             _time_now$2193 0170                  ?_vfpfcnvrt 00B4            __size_of___lwdiv 0076  
          __size_of___lwmod 0066          i1___aodiv@dividend 0001             ___aodiv@divisor 007D  
           ___aodiv@counter 0085                  _ANSELFbits 000EB4                  sprintf@fmt 0102  
                _T0CON0bits 000FD5                  _T0CON1bits 000FD6              time_now@F14541 02AC  
            time_now@F14544 0266            __size_of_isdigit 003A             ___lwdiv@divisor 0077  
          __size_of_isspace 0054             ___lwdiv@counter 0079                    __ptext10 2F60  
                  __ptext11 3BE4                    __ptext20 348E                    __ptext12 386E  
                  __ptext21 3B78                    __ptext13 2C96                    __ptext30 3BAC  
                  __ptext22 3B2C                    __ptext14 27FE                    __ptext31 3ADC  
                  __ptext23 30F6                    __ptext15 2326                    __ptext40 3A50  
                  __ptext32 3B98                    __ptext24 38B0                    __ptext16 36F6  
                  __ptext41 382A                    __ptext25 39E0                    __ptext17 39A6  
                  __ptext50 3B52                    __ptext42 31C0                    __ptext34 3B04  
                  __ptext26 3350                    __ptext18 3AB4                    __ptext43 3BE6  
                  __ptext35 363C                    __ptext27 3A86                    __ptext19 35D6  
                  __ptext44 38F0                    __ptext36 1372                    __ptext28 3504  
                  __ptext45 2DFC                    __ptext37 2B10                    __ptext29 3BCE  
                  __ptext46 2988                    __ptext38 1E78                    __ptext47 24CE  
                  __ptext39 328A                    __ptext48 374A                    __ptext49 3A18  
            i1_isspace$1926 0007     LEDarray_disp_bin@number 0075            __size_of_sprintf 0054  
             __size_of_atoi 01A8               __size_of_main 01CA               __size_of_dtoa 02E4  
             __size_of_stoa 018C          i1___aodiv@quotient 0013                   stoa@F1141 00E3  
                  _time_now 0E2E    __size_of_Interrupts_init 0012                    int$flags 005E  
      __size_of_Timer0_init 0020                    _vfprintf 3570                   printf@fmt 0062  
            time_now@season 0128              time_now@months 0124                    main@time 0254  
          ___aomod@dividend 0075              _vfpfcnvrt$1887 00CA                  _INTCONbits 000FF2  
                  isdigit@c 0075                    intlevel1 0000                    intlevel2 0000  
                 sprintf@ap 010E                _DAC1CON0bits 000EC6                _DAC1CON1bits 000EC7  
          ___lwmod@dividend 0075                    isspace@c 0075               ??i1_vfpfcnvrt 0046  
                  printf@ap 0066               time_now@hours 011E               time_now@years 0126  
           ___aomod@divisor 007D                 ??_vfpfcnvrt 00BA                    stoa@nuls 0083  
           ___aomod@counter 0085                    sprintf@f 0110                    sprintf@s 0100  
           ___lwmod@divisor 0077             ___lwmod@counter 0079                time_now@days 0122  
              time_now@leap 018A                ___aodiv@sign 0086                ___aomod@sign 0086  
